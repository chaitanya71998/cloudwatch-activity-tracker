import { TTIReportCallback } from './TimeToInteractive';
export declare class QuietWindowSearch {
    private ttiTracker;
    private ttiResolved;
    private onReport;
    private ttiInterval;
    private startBucket;
    private currBucket;
    private acceptedIntervals;
    private totalIntervals;
    private visuallyReadyTimestamp;
    private prerenderedOffset?;
    private fpsEnabled;
    private COLLECTION_PERIOD;
    private REQUIRED_ACCEPTED_INTERVALS;
    private CHECK_PERIOD;
    private TTI_RESOLVE_TIMEOUT;
    private FPS_THRESHOLD;
    private LONG_TASK_THRESHOLD;
    constructor(fpsEnabled: boolean, onReport: TTIReportCallback);
    private ttiIntervalHandler;
    startTtiSearch(visuallyReadyTimestamp: number): void;
    private isTTIResolved;
    private computeTTIValue;
    private getPrerenderedOffset;
    private getActivationStart;
    private isTTIConditionNotFulfilied;
    private initListeners;
    private computeTimeWindow;
    private addToTracker;
    longTaskEventListener: () => void;
    framesPerSecondListener: () => void;
    cleanupQuietWindowSearch(): void;
}
