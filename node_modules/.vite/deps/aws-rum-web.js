import {
  v4_default
} from "./chunk-PYWQVPLE.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/.pnpm/ua-parser-js@1.0.40/node_modules/ua-parser-js/src/ua-parser.js
var require_ua_parser = __commonJS({
  "node_modules/.pnpm/ua-parser-js@1.0.40/node_modules/ua-parser-js/src/ua-parser.js"(exports, module) {
    (function(window2, undefined2) {
      "use strict";
      var LIBVERSION = "1.0.40", EMPTY = "", UNKNOWN2 = "?", FUNC_TYPE = "function", UNDEF_TYPE = "undefined", OBJ_TYPE = "object", STR_TYPE = "string", MAJOR = "major", MODEL = "model", NAME = "name", TYPE = "type", VENDOR = "vendor", VERSION2 = "version", ARCHITECTURE = "architecture", CONSOLE = "console", MOBILE = "mobile", TABLET = "tablet", SMARTTV = "smarttv", WEARABLE = "wearable", EMBEDDED = "embedded", UA_MAX_LENGTH = 500;
      var AMAZON = "Amazon", APPLE = "Apple", ASUS = "ASUS", BLACKBERRY = "BlackBerry", BROWSER = "Browser", CHROME = "Chrome", EDGE = "Edge", FIREFOX = "Firefox", GOOGLE = "Google", HUAWEI = "Huawei", LG = "LG", MICROSOFT = "Microsoft", MOTOROLA = "Motorola", OPERA = "Opera", SAMSUNG = "Samsung", SHARP = "Sharp", SONY = "Sony", XIAOMI = "Xiaomi", ZEBRA = "Zebra", FACEBOOK = "Facebook", CHROMIUM_OS = "Chromium OS", MAC_OS = "Mac OS", SUFFIX_BROWSER = " Browser";
      var extend = function(regexes2, extensions2) {
        var mergedRegexes = {};
        for (var i2 in regexes2) {
          if (extensions2[i2] && extensions2[i2].length % 2 === 0) {
            mergedRegexes[i2] = extensions2[i2].concat(regexes2[i2]);
          } else {
            mergedRegexes[i2] = regexes2[i2];
          }
        }
        return mergedRegexes;
      }, enumerize = function(arr) {
        var enums = {};
        for (var i2 = 0; i2 < arr.length; i2++) {
          enums[arr[i2].toUpperCase()] = arr[i2];
        }
        return enums;
      }, has = function(str1, str2) {
        return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;
      }, lowerize = function(str) {
        return str.toLowerCase();
      }, majorize = function(version) {
        return typeof version === STR_TYPE ? version.replace(/[^\d\.]/g, EMPTY).split(".")[0] : undefined2;
      }, trim = function(str, len) {
        if (typeof str === STR_TYPE) {
          str = str.replace(/^\s\s*/, EMPTY);
          return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);
        }
      };
      var rgxMapper = function(ua, arrays) {
        var i2 = 0, j2, k2, p3, q2, matches, match;
        while (i2 < arrays.length && !matches) {
          var regex = arrays[i2], props = arrays[i2 + 1];
          j2 = k2 = 0;
          while (j2 < regex.length && !matches) {
            if (!regex[j2]) {
              break;
            }
            matches = regex[j2++].exec(ua);
            if (!!matches) {
              for (p3 = 0; p3 < props.length; p3++) {
                match = matches[++k2];
                q2 = props[p3];
                if (typeof q2 === OBJ_TYPE && q2.length > 0) {
                  if (q2.length === 2) {
                    if (typeof q2[1] == FUNC_TYPE) {
                      this[q2[0]] = q2[1].call(this, match);
                    } else {
                      this[q2[0]] = q2[1];
                    }
                  } else if (q2.length === 3) {
                    if (typeof q2[1] === FUNC_TYPE && !(q2[1].exec && q2[1].test)) {
                      this[q2[0]] = match ? q2[1].call(this, match, q2[2]) : undefined2;
                    } else {
                      this[q2[0]] = match ? match.replace(q2[1], q2[2]) : undefined2;
                    }
                  } else if (q2.length === 4) {
                    this[q2[0]] = match ? q2[3].call(this, match.replace(q2[1], q2[2])) : undefined2;
                  }
                } else {
                  this[q2] = match ? match : undefined2;
                }
              }
            }
          }
          i2 += 2;
        }
      }, strMapper = function(str, map) {
        for (var i2 in map) {
          if (typeof map[i2] === OBJ_TYPE && map[i2].length > 0) {
            for (var j2 = 0; j2 < map[i2].length; j2++) {
              if (has(map[i2][j2], str)) {
                return i2 === UNKNOWN2 ? undefined2 : i2;
              }
            }
          } else if (has(map[i2], str)) {
            return i2 === UNKNOWN2 ? undefined2 : i2;
          }
        }
        return map.hasOwnProperty("*") ? map["*"] : str;
      };
      var oldSafariMap = {
        "1.0": "/8",
        "1.2": "/1",
        "1.3": "/3",
        "2.0": "/412",
        "2.0.2": "/416",
        "2.0.3": "/417",
        "2.0.4": "/419",
        "?": "/"
      }, windowsVersionMap = {
        "ME": "4.90",
        "NT 3.11": "NT3.51",
        "NT 4.0": "NT4.0",
        "2000": "NT 5.0",
        "XP": ["NT 5.1", "NT 5.2"],
        "Vista": "NT 6.0",
        "7": "NT 6.1",
        "8": "NT 6.2",
        "8.1": "NT 6.3",
        "10": ["NT 6.4", "NT 10.0"],
        "RT": "ARM"
      };
      var regexes = {
        browser: [
          [
            /\b(?:crmo|crios)\/([\w\.]+)/i
            // Chrome for Android/iOS
          ],
          [VERSION2, [NAME, "Chrome"]],
          [
            /edg(?:e|ios|a)?\/([\w\.]+)/i
            // Microsoft Edge
          ],
          [VERSION2, [NAME, "Edge"]],
          [
            // Presto based
            /(opera mini)\/([-\w\.]+)/i,
            // Opera Mini
            /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
            // Opera Mobi/Tablet
            /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i
            // Opera
          ],
          [NAME, VERSION2],
          [
            /opios[\/ ]+([\w\.]+)/i
            // Opera mini on iphone >= 8.0
          ],
          [VERSION2, [NAME, OPERA + " Mini"]],
          [
            /\bop(?:rg)?x\/([\w\.]+)/i
            // Opera GX
          ],
          [VERSION2, [NAME, OPERA + " GX"]],
          [
            /\bopr\/([\w\.]+)/i
            // Opera Webkit
          ],
          [VERSION2, [NAME, OPERA]],
          [
            // Mixed
            /\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i
            // Baidu
          ],
          [VERSION2, [NAME, "Baidu"]],
          [
            /\b(?:mxbrowser|mxios|myie2)\/?([-\w\.]*)\b/i
            // Maxthon
          ],
          [VERSION2, [NAME, "Maxthon"]],
          [
            /(kindle)\/([\w\.]+)/i,
            // Kindle
            /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i,
            // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir
            // Trident based
            /(avant|iemobile|slim(?:browser|boat|jet))[\/ ]?([\d\.]*)/i,
            // Avant/IEMobile/SlimBrowser/SlimBoat/Slimjet
            /(?:ms|\()(ie) ([\w\.]+)/i,
            // Internet Explorer
            // Blink/Webkit/KHTML based                                         // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon
            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\/([-\w\.]+)/i,
            // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio/Dragon
            /(heytap|ovi|115)browser\/([\d\.]+)/i,
            // HeyTap/Ovi/115
            /(weibo)__([\d\.]+)/i
            // Weibo
          ],
          [NAME, VERSION2],
          [
            /quark(?:pc)?\/([-\w\.]+)/i
            // Quark
          ],
          [VERSION2, [NAME, "Quark"]],
          [
            /\bddg\/([\w\.]+)/i
            // DuckDuckGo
          ],
          [VERSION2, [NAME, "DuckDuckGo"]],
          [
            /(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i
            // UCBrowser
          ],
          [VERSION2, [NAME, "UC" + BROWSER]],
          [
            /microm.+\bqbcore\/([\w\.]+)/i,
            // WeChat Desktop for Windows Built-in Browser
            /\bqbcore\/([\w\.]+).+microm/i,
            /micromessenger\/([\w\.]+)/i
            // WeChat
          ],
          [VERSION2, [NAME, "WeChat"]],
          [
            /konqueror\/([\w\.]+)/i
            // Konqueror
          ],
          [VERSION2, [NAME, "Konqueror"]],
          [
            /trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i
            // IE11
          ],
          [VERSION2, [NAME, "IE"]],
          [
            /ya(?:search)?browser\/([\w\.]+)/i
            // Yandex
          ],
          [VERSION2, [NAME, "Yandex"]],
          [
            /slbrowser\/([\w\.]+)/i
            // Smart Lenovo Browser
          ],
          [VERSION2, [NAME, "Smart Lenovo " + BROWSER]],
          [
            /(avast|avg)\/([\w\.]+)/i
            // Avast/AVG Secure Browser
          ],
          [[NAME, /(.+)/, "$1 Secure " + BROWSER], VERSION2],
          [
            /\bfocus\/([\w\.]+)/i
            // Firefox Focus
          ],
          [VERSION2, [NAME, FIREFOX + " Focus"]],
          [
            /\bopt\/([\w\.]+)/i
            // Opera Touch
          ],
          [VERSION2, [NAME, OPERA + " Touch"]],
          [
            /coc_coc\w+\/([\w\.]+)/i
            // Coc Coc Browser
          ],
          [VERSION2, [NAME, "Coc Coc"]],
          [
            /dolfin\/([\w\.]+)/i
            // Dolphin
          ],
          [VERSION2, [NAME, "Dolphin"]],
          [
            /coast\/([\w\.]+)/i
            // Opera Coast
          ],
          [VERSION2, [NAME, OPERA + " Coast"]],
          [
            /miuibrowser\/([\w\.]+)/i
            // MIUI Browser
          ],
          [VERSION2, [NAME, "MIUI" + SUFFIX_BROWSER]],
          [
            /fxios\/([\w\.-]+)/i
            // Firefox for iOS
          ],
          [VERSION2, [NAME, FIREFOX]],
          [
            /\bqihoobrowser\/?([\w\.]*)/i
            // 360
          ],
          [VERSION2, [NAME, "360"]],
          [
            /\b(qq)\/([\w\.]+)/i
            // QQ
          ],
          [[NAME, /(.+)/, "$1Browser"], VERSION2],
          [
            /(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i
          ],
          [[NAME, /(.+)/, "$1" + SUFFIX_BROWSER], VERSION2],
          [
            // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser
            /samsungbrowser\/([\w\.]+)/i
            // Samsung Internet
          ],
          [VERSION2, [NAME, SAMSUNG + " Internet"]],
          [
            /metasr[\/ ]?([\d\.]+)/i
            // Sogou Explorer
          ],
          [VERSION2, [NAME, "Sogou Explorer"]],
          [
            /(sogou)mo\w+\/([\d\.]+)/i
            // Sogou Mobile
          ],
          [[NAME, "Sogou Mobile"], VERSION2],
          [
            /(electron)\/([\w\.]+) safari/i,
            // Electron-based App
            /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
            // Tesla
            /m?(qqbrowser|2345(?=browser|chrome|explorer))\w*[\/ ]?v?([\w\.]+)/i
            // QQ/2345
          ],
          [NAME, VERSION2],
          [
            /(lbbrowser|rekonq)/i,
            // LieBao Browser/Rekonq
            /\[(linkedin)app\]/i
            // LinkedIn App for iOS & Android
          ],
          [NAME],
          [
            /ome\/([\w\.]+) \w* ?(iron) saf/i,
            // Iron
            /ome\/([\w\.]+).+qihu (360)[es]e/i
            // 360
          ],
          [VERSION2, NAME],
          [
            // WebView
            /((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i
            // Facebook App for iOS & Android
          ],
          [[NAME, FACEBOOK], VERSION2],
          [
            /(Klarna)\/([\w\.]+)/i,
            // Klarna Shopping Browser for iOS & Android
            /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
            // Kakao App
            /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
            // Naver InApp
            /safari (line)\/([\w\.]+)/i,
            // Line App for iOS
            /\b(line)\/([\w\.]+)\/iab/i,
            // Line App for Android
            /(alipay)client\/([\w\.]+)/i,
            // Alipay
            /(twitter)(?:and| f.+e\/([\w\.]+))/i,
            // Twitter
            /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i
            // Chromium/Instagram/Snapchat
          ],
          [NAME, VERSION2],
          [
            /\bgsa\/([\w\.]+) .*safari\//i
            // Google Search Appliance on iOS
          ],
          [VERSION2, [NAME, "GSA"]],
          [
            /musical_ly(?:.+app_?version\/|_)([\w\.]+)/i
            // TikTok
          ],
          [VERSION2, [NAME, "TikTok"]],
          [
            /headlesschrome(?:\/([\w\.]+)| )/i
            // Chrome Headless
          ],
          [VERSION2, [NAME, CHROME + " Headless"]],
          [
            / wv\).+(chrome)\/([\w\.]+)/i
            // Chrome WebView
          ],
          [[NAME, CHROME + " WebView"], VERSION2],
          [
            /droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i
            // Android Browser
          ],
          [VERSION2, [NAME, "Android " + BROWSER]],
          [
            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i
            // Chrome/OmniWeb/Arora/Tizen/Nokia
          ],
          [NAME, VERSION2],
          [
            /version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i
            // Mobile Safari
          ],
          [VERSION2, [NAME, "Mobile Safari"]],
          [
            /version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i
            // Safari & Safari Mobile
          ],
          [VERSION2, NAME],
          [
            /webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i
            // Safari < 3.0
          ],
          [NAME, [VERSION2, strMapper, oldSafariMap]],
          [
            /(webkit|khtml)\/([\w\.]+)/i
          ],
          [NAME, VERSION2],
          [
            // Gecko based
            /(navigator|netscape\d?)\/([-\w\.]+)/i
            // Netscape
          ],
          [[NAME, "Netscape"], VERSION2],
          [
            /(wolvic|librewolf)\/([\w\.]+)/i
            // Wolvic/LibreWolf
          ],
          [NAME, VERSION2],
          [
            /mobile vr; rv:([\w\.]+)\).+firefox/i
            // Firefox Reality
          ],
          [VERSION2, [NAME, FIREFOX + " Reality"]],
          [
            /ekiohf.+(flow)\/([\w\.]+)/i,
            // Flow
            /(swiftfox)/i,
            // Swiftfox
            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i,
            // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror
            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
            // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix
            /(firefox)\/([\w\.]+)/i,
            // Other Firefox-based
            /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
            // Mozilla
            // Other
            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
            // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser
            /(links) \(([\w\.]+)/i
            // Links
          ],
          [NAME, [VERSION2, /_/g, "."]],
          [
            /(cobalt)\/([\w\.]+)/i
            // Cobalt
          ],
          [NAME, [VERSION2, /master.|lts./, ""]]
        ],
        cpu: [
          [
            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i
            // AMD64 (x64)
          ],
          [[ARCHITECTURE, "amd64"]],
          [
            /(ia32(?=;))/i
            // IA32 (quicktime)
          ],
          [[ARCHITECTURE, lowerize]],
          [
            /((?:i[346]|x)86)[;\)]/i
            // IA32 (x86)
          ],
          [[ARCHITECTURE, "ia32"]],
          [
            /\b(aarch64|arm(v?8e?l?|_?64))\b/i
            // ARM64
          ],
          [[ARCHITECTURE, "arm64"]],
          [
            /\b(arm(?:v[67])?ht?n?[fl]p?)\b/i
            // ARMHF
          ],
          [[ARCHITECTURE, "armhf"]],
          [
            // PocketPC mistakenly identified as PowerPC
            /windows (ce|mobile); ppc;/i
          ],
          [[ARCHITECTURE, "arm"]],
          [
            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i
            // PowerPC
          ],
          [[ARCHITECTURE, /ower/, EMPTY, lowerize]],
          [
            /(sun4\w)[;\)]/i
            // SPARC
          ],
          [[ARCHITECTURE, "sparc"]],
          [
            /((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i
            // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC
          ],
          [[ARCHITECTURE, lowerize]]
        ],
        device: [
          [
            //////////////////////////
            // MOBILES & TABLETS
            /////////////////////////
            // Samsung
            /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i
          ],
          [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]],
          [
            /\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,
            /samsung[- ]((?!sm-[lr])[-\w]+)/i,
            /sec-(sgh\w+)/i
          ],
          [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]],
          [
            // Apple
            /(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i
            // iPod/iPhone
          ],
          [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]],
          [
            /\((ipad);[-\w\),; ]+apple/i,
            // iPad
            /applecoremedia\/[\w\.]+ \((ipad)/i,
            /\b(ipad)\d\d?,\d\d?[;\]].+ios/i
          ],
          [MODEL, [VENDOR, APPLE], [TYPE, TABLET]],
          [
            /(macintosh);/i
          ],
          [MODEL, [VENDOR, APPLE]],
          [
            // Sharp
            /\b(sh-?[altvz]?\d\d[a-ekm]?)/i
          ],
          [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]],
          [
            // Honor
            /(?:honor)([-\w ]+)[;\)]/i
          ],
          [MODEL, [VENDOR, "Honor"], [TYPE, MOBILE]],
          [
            // Huawei
            /\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i
          ],
          [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]],
          [
            /(?:huawei)([-\w ]+)[;\)]/i,
            /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i
          ],
          [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]],
          [
            // Xiaomi
            /\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
            // Xiaomi POCO
            /\b; (\w+) build\/hm\1/i,
            // Xiaomi Hongmi 'numeric' models
            /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
            // Xiaomi Hongmi
            /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
            // Xiaomi Redmi
            /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
            // Xiaomi Redmi 'numeric' models
            /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i
            // Xiaomi Mi
          ],
          [[MODEL, /_/g, " "], [VENDOR, XIAOMI], [TYPE, MOBILE]],
          [
            /oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,
            // Redmi Pad
            /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i
            // Mi Pad tablets
          ],
          [[MODEL, /_/g, " "], [VENDOR, XIAOMI], [TYPE, TABLET]],
          [
            // OPPO
            /; (\w+) bui.+ oppo/i,
            /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i
          ],
          [MODEL, [VENDOR, "OPPO"], [TYPE, MOBILE]],
          [
            /\b(opd2\d{3}a?) bui/i
          ],
          [MODEL, [VENDOR, "OPPO"], [TYPE, TABLET]],
          [
            // Vivo
            /vivo (\w+)(?: bui|\))/i,
            /\b(v[12]\d{3}\w?[at])(?: bui|;)/i
          ],
          [MODEL, [VENDOR, "Vivo"], [TYPE, MOBILE]],
          [
            // Realme
            /\b(rmx[1-3]\d{3})(?: bui|;|\))/i
          ],
          [MODEL, [VENDOR, "Realme"], [TYPE, MOBILE]],
          [
            // Motorola
            /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,
            /\bmot(?:orola)?[- ](\w*)/i,
            /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i
          ],
          [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]],
          [
            /\b(mz60\d|xoom[2 ]{0,2}) build\//i
          ],
          [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]],
          [
            // LG
            /((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i
          ],
          [MODEL, [VENDOR, LG], [TYPE, TABLET]],
          [
            /(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,
            /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,
            /\blg-?([\d\w]+) bui/i
          ],
          [MODEL, [VENDOR, LG], [TYPE, MOBILE]],
          [
            // Lenovo
            /(ideatab[-\w ]+)/i,
            /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i
          ],
          [MODEL, [VENDOR, "Lenovo"], [TYPE, TABLET]],
          [
            // Nokia
            /(?:maemo|nokia).*(n900|lumia \d+)/i,
            /nokia[-_ ]?([-\w\.]*)/i
          ],
          [[MODEL, /_/g, " "], [VENDOR, "Nokia"], [TYPE, MOBILE]],
          [
            // Google
            /(pixel c)\b/i
            // Google Pixel C
          ],
          [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]],
          [
            /droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i
            // Google Pixel
          ],
          [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]],
          [
            // Sony
            /droid.+; (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i
          ],
          [MODEL, [VENDOR, SONY], [TYPE, MOBILE]],
          [
            /sony tablet [ps]/i,
            /\b(?:sony)?sgp\w+(?: bui|\))/i
          ],
          [[MODEL, "Xperia Tablet"], [VENDOR, SONY], [TYPE, TABLET]],
          [
            // OnePlus
            / (kb2005|in20[12]5|be20[12][59])\b/i,
            /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i
          ],
          [MODEL, [VENDOR, "OnePlus"], [TYPE, MOBILE]],
          [
            // Amazon
            /(alexa)webm/i,
            /(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i,
            // Kindle Fire without Silk / Echo Show
            /(kf[a-z]+)( bui|\)).+silk\//i
            // Kindle Fire HD
          ],
          [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]],
          [
            /((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i
            // Fire Phone
          ],
          [[MODEL, /(.+)/g, "Fire Phone $1"], [VENDOR, AMAZON], [TYPE, MOBILE]],
          [
            // BlackBerry
            /(playbook);[-\w\),; ]+(rim)/i
            // BlackBerry PlayBook
          ],
          [MODEL, VENDOR, [TYPE, TABLET]],
          [
            /\b((?:bb[a-f]|st[hv])100-\d)/i,
            /\(bb10; (\w+)/i
            // BlackBerry 10
          ],
          [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]],
          [
            // Asus
            /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i
          ],
          [MODEL, [VENDOR, ASUS], [TYPE, TABLET]],
          [
            / (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i
          ],
          [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]],
          [
            // HTC
            /(nexus 9)/i
            // HTC Nexus 9
          ],
          [MODEL, [VENDOR, "HTC"], [TYPE, TABLET]],
          [
            /(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
            // HTC
            // ZTE
            /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,
            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i
            // Alcatel/GeeksPhone/Nexian/Panasonic/Sony
          ],
          [VENDOR, [MODEL, /_/g, " "], [TYPE, MOBILE]],
          [
            // TCL
            /droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\w*(\)| bui)/i
          ],
          [MODEL, [VENDOR, "TCL"], [TYPE, TABLET]],
          [
            // itel
            /(itel) ((\w+))/i
          ],
          [[VENDOR, lowerize], MODEL, [TYPE, strMapper, { "tablet": ["p10001l", "w7001"], "*": "mobile" }]],
          [
            // Acer
            /droid.+; ([ab][1-7]-?[0178a]\d\d?)/i
          ],
          [MODEL, [VENDOR, "Acer"], [TYPE, TABLET]],
          [
            // Meizu
            /droid.+; (m[1-5] note) bui/i,
            /\bmz-([-\w]{2,})/i
          ],
          [MODEL, [VENDOR, "Meizu"], [TYPE, MOBILE]],
          [
            // Ulefone
            /; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i
          ],
          [MODEL, [VENDOR, "Ulefone"], [TYPE, MOBILE]],
          [
            // Energizer
            /; (energy ?\w+)(?: bui|\))/i,
            /; energizer ([\w ]+)(?: bui|\))/i
          ],
          [MODEL, [VENDOR, "Energizer"], [TYPE, MOBILE]],
          [
            // Cat
            /; cat (b35);/i,
            /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\))/i
          ],
          [MODEL, [VENDOR, "Cat"], [TYPE, MOBILE]],
          [
            // Smartfren
            /((?:new )?andromax[\w- ]+)(?: bui|\))/i
          ],
          [MODEL, [VENDOR, "Smartfren"], [TYPE, MOBILE]],
          [
            // Nothing
            /droid.+; (a(?:015|06[35]|142p?))/i
          ],
          [MODEL, [VENDOR, "Nothing"], [TYPE, MOBILE]],
          [
            // MIXED
            /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\w]*)/i,
            // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron/Infinix/Tecno/Micromax/Advan
            /; (imo) ((?!tab)[\w ]+?)(?: bui|\))/i,
            // IMO
            /(hp) ([\w ]+\w)/i,
            // HP iPAQ
            /(asus)-?(\w+)/i,
            // Asus
            /(microsoft); (lumia[\w ]+)/i,
            // Microsoft Lumia
            /(lenovo)[-_ ]?([-\w]+)/i,
            // Lenovo
            /(jolla)/i,
            // Jolla
            /(oppo) ?([\w ]+) bui/i
            // OPPO
          ],
          [VENDOR, MODEL, [TYPE, MOBILE]],
          [
            /(imo) (tab \w+)/i,
            // IMO
            /(kobo)\s(ereader|touch)/i,
            // Kobo
            /(archos) (gamepad2?)/i,
            // Archos
            /(hp).+(touchpad(?!.+tablet)|tablet)/i,
            // HP TouchPad
            /(kindle)\/([\w\.]+)/i,
            // Kindle
            /(nook)[\w ]+build\/(\w+)/i,
            // Nook
            /(dell) (strea[kpr\d ]*[\dko])/i,
            // Dell Streak
            /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
            // Le Pan Tablets
            /(trinity)[- ]*(t\d{3}) bui/i,
            // Trinity Tablets
            /(gigaset)[- ]+(q\w{1,9}) bui/i,
            // Gigaset Tablets
            /(vodafone) ([\w ]+)(?:\)| bui)/i
            // Vodafone
          ],
          [VENDOR, MODEL, [TYPE, TABLET]],
          [
            /(surface duo)/i
            // Surface Duo
          ],
          [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]],
          [
            /droid [\d\.]+; (fp\du?)(?: b|\))/i
            // Fairphone
          ],
          [MODEL, [VENDOR, "Fairphone"], [TYPE, MOBILE]],
          [
            /(u304aa)/i
            // AT&T
          ],
          [MODEL, [VENDOR, "AT&T"], [TYPE, MOBILE]],
          [
            /\bsie-(\w*)/i
            // Siemens
          ],
          [MODEL, [VENDOR, "Siemens"], [TYPE, MOBILE]],
          [
            /\b(rct\w+) b/i
            // RCA Tablets
          ],
          [MODEL, [VENDOR, "RCA"], [TYPE, TABLET]],
          [
            /\b(venue[\d ]{2,7}) b/i
            // Dell Venue Tablets
          ],
          [MODEL, [VENDOR, "Dell"], [TYPE, TABLET]],
          [
            /\b(q(?:mv|ta)\w+) b/i
            // Verizon Tablet
          ],
          [MODEL, [VENDOR, "Verizon"], [TYPE, TABLET]],
          [
            /\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i
            // Barnes & Noble Tablet
          ],
          [MODEL, [VENDOR, "Barnes & Noble"], [TYPE, TABLET]],
          [
            /\b(tm\d{3}\w+) b/i
          ],
          [MODEL, [VENDOR, "NuVision"], [TYPE, TABLET]],
          [
            /\b(k88) b/i
            // ZTE K Series Tablet
          ],
          [MODEL, [VENDOR, "ZTE"], [TYPE, TABLET]],
          [
            /\b(nx\d{3}j) b/i
            // ZTE Nubia
          ],
          [MODEL, [VENDOR, "ZTE"], [TYPE, MOBILE]],
          [
            /\b(gen\d{3}) b.+49h/i
            // Swiss GEN Mobile
          ],
          [MODEL, [VENDOR, "Swiss"], [TYPE, MOBILE]],
          [
            /\b(zur\d{3}) b/i
            // Swiss ZUR Tablet
          ],
          [MODEL, [VENDOR, "Swiss"], [TYPE, TABLET]],
          [
            /\b((zeki)?tb.*\b) b/i
            // Zeki Tablets
          ],
          [MODEL, [VENDOR, "Zeki"], [TYPE, TABLET]],
          [
            /\b([yr]\d{2}) b/i,
            /\b(dragon[- ]+touch |dt)(\w{5}) b/i
            // Dragon Touch Tablet
          ],
          [[VENDOR, "Dragon Touch"], MODEL, [TYPE, TABLET]],
          [
            /\b(ns-?\w{0,9}) b/i
            // Insignia Tablets
          ],
          [MODEL, [VENDOR, "Insignia"], [TYPE, TABLET]],
          [
            /\b((nxa|next)-?\w{0,9}) b/i
            // NextBook Tablets
          ],
          [MODEL, [VENDOR, "NextBook"], [TYPE, TABLET]],
          [
            /\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i
            // Voice Xtreme Phones
          ],
          [[VENDOR, "Voice"], MODEL, [TYPE, MOBILE]],
          [
            /\b(lvtel\-)?(v1[12]) b/i
            // LvTel Phones
          ],
          [[VENDOR, "LvTel"], MODEL, [TYPE, MOBILE]],
          [
            /\b(ph-1) /i
            // Essential PH-1
          ],
          [MODEL, [VENDOR, "Essential"], [TYPE, MOBILE]],
          [
            /\b(v(100md|700na|7011|917g).*\b) b/i
            // Envizen Tablets
          ],
          [MODEL, [VENDOR, "Envizen"], [TYPE, TABLET]],
          [
            /\b(trio[-\w\. ]+) b/i
            // MachSpeed Tablets
          ],
          [MODEL, [VENDOR, "MachSpeed"], [TYPE, TABLET]],
          [
            /\btu_(1491) b/i
            // Rotor Tablets
          ],
          [MODEL, [VENDOR, "Rotor"], [TYPE, TABLET]],
          [
            /(shield[\w ]+) b/i
            // Nvidia Shield Tablets
          ],
          [MODEL, [VENDOR, "Nvidia"], [TYPE, TABLET]],
          [
            /(sprint) (\w+)/i
            // Sprint Phones
          ],
          [VENDOR, MODEL, [TYPE, MOBILE]],
          [
            /(kin\.[onetw]{3})/i
            // Microsoft Kin
          ],
          [[MODEL, /\./g, " "], [VENDOR, MICROSOFT], [TYPE, MOBILE]],
          [
            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i
            // Zebra
          ],
          [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]],
          [
            /droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i
          ],
          [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]],
          [
            ///////////////////
            // SMARTTVS
            ///////////////////
            /smart-tv.+(samsung)/i
            // Samsung
          ],
          [VENDOR, [TYPE, SMARTTV]],
          [
            /hbbtv.+maple;(\d+)/i
          ],
          [[MODEL, /^/, "SmartTV"], [VENDOR, SAMSUNG], [TYPE, SMARTTV]],
          [
            /(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i
            // LG SmartTV
          ],
          [[VENDOR, LG], [TYPE, SMARTTV]],
          [
            /(apple) ?tv/i
            // Apple TV
          ],
          [VENDOR, [MODEL, APPLE + " TV"], [TYPE, SMARTTV]],
          [
            /crkey/i
            // Google Chromecast
          ],
          [[MODEL, CHROME + "cast"], [VENDOR, GOOGLE], [TYPE, SMARTTV]],
          [
            /droid.+aft(\w+)( bui|\))/i
            // Fire TV
          ],
          [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]],
          [
            /\(dtv[\);].+(aquos)/i,
            /(aquos-tv[\w ]+)\)/i
            // Sharp
          ],
          [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],
          [
            /(bravia[\w ]+)( bui|\))/i
            // Sony
          ],
          [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]],
          [
            /(mitv-\w{5}) bui/i
            // Xiaomi
          ],
          [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]],
          [
            /Hbbtv.*(technisat) (.*);/i
            // TechniSAT
          ],
          [VENDOR, MODEL, [TYPE, SMARTTV]],
          [
            /\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
            // Roku
            /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i
            // HbbTV devices
          ],
          [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]],
          [
            /\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i
            // SmartTV from Unidentified Vendors
          ],
          [[TYPE, SMARTTV]],
          [
            ///////////////////
            // CONSOLES
            ///////////////////
            /(ouya)/i,
            // Ouya
            /(nintendo) ([wids3utch]+)/i
            // Nintendo
          ],
          [VENDOR, MODEL, [TYPE, CONSOLE]],
          [
            /droid.+; (shield) bui/i
            // Nvidia
          ],
          [MODEL, [VENDOR, "Nvidia"], [TYPE, CONSOLE]],
          [
            /(playstation [345portablevi]+)/i
            // Playstation
          ],
          [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]],
          [
            /\b(xbox(?: one)?(?!; xbox))[\); ]/i
            // Microsoft Xbox
          ],
          [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]],
          [
            ///////////////////
            // WEARABLES
            ///////////////////
            /\b(sm-[lr]\d\d[05][fnuw]?s?)\b/i
            // Samsung Galaxy Watch
          ],
          [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]],
          [
            /((pebble))app/i
            // Pebble
          ],
          [VENDOR, MODEL, [TYPE, WEARABLE]],
          [
            /(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i
            // Apple Watch
          ],
          [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]],
          [
            /droid.+; (glass) \d/i
            // Google Glass
          ],
          [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]],
          [
            /droid.+; (wt63?0{2,3})\)/i
          ],
          [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]],
          [
            ///////////////////
            // XR
            ///////////////////
            /droid.+; (glass) \d/i
            // Google Glass
          ],
          [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]],
          [
            /(pico) (4|neo3(?: link|pro)?)/i
            // Pico
          ],
          [VENDOR, MODEL, [TYPE, WEARABLE]],
          [
            /; (quest( \d| pro)?)/i
            // Oculus Quest
          ],
          [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]],
          [
            ///////////////////
            // EMBEDDED
            ///////////////////
            /(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i
            // Tesla
          ],
          [VENDOR, [TYPE, EMBEDDED]],
          [
            /(aeobc)\b/i
            // Echo Dot
          ],
          [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]],
          [
            ////////////////////
            // MIXED (GENERIC)
            ///////////////////
            /droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i
            // Android Phones from Unidentified Vendors
          ],
          [MODEL, [TYPE, MOBILE]],
          [
            /droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i
            // Android Tablets from Unidentified Vendors
          ],
          [MODEL, [TYPE, TABLET]],
          [
            /\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i
            // Unidentifiable Tablet
          ],
          [[TYPE, TABLET]],
          [
            /(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i
            // Unidentifiable Mobile
          ],
          [[TYPE, MOBILE]],
          [
            /(android[-\w\. ]{0,9});.+buil/i
            // Generic Android Device
          ],
          [MODEL, [VENDOR, "Generic"]]
        ],
        engine: [
          [
            /windows.+ edge\/([\w\.]+)/i
            // EdgeHTML
          ],
          [VERSION2, [NAME, EDGE + "HTML"]],
          [
            /(arkweb)\/([\w\.]+)/i
            // ArkWeb
          ],
          [NAME, VERSION2],
          [
            /webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i
            // Blink
          ],
          [VERSION2, [NAME, "Blink"]],
          [
            /(presto)\/([\w\.]+)/i,
            // Presto
            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\/([\w\.]+)/i,
            // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna/Servo
            /ekioh(flow)\/([\w\.]+)/i,
            // Flow
            /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
            // KHTML/Tasman/Links
            /(icab)[\/ ]([23]\.[\d\.]+)/i,
            // iCab
            /\b(libweb)/i
          ],
          [NAME, VERSION2],
          [
            /rv\:([\w\.]{1,9})\b.+(gecko)/i
            // Gecko
          ],
          [VERSION2, NAME]
        ],
        os: [
          [
            // Windows
            /microsoft (windows) (vista|xp)/i
            // Windows (iTunes)
          ],
          [NAME, VERSION2],
          [
            /(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i
            // Windows Phone
          ],
          [NAME, [VERSION2, strMapper, windowsVersionMap]],
          [
            /windows nt 6\.2; (arm)/i,
            // Windows RT
            /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,
            /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i
          ],
          [[VERSION2, strMapper, windowsVersionMap], [NAME, "Windows"]],
          [
            // iOS/macOS
            /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
            // iOS
            /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,
            /cfnetwork\/.+darwin/i
          ],
          [[VERSION2, /_/g, "."], [NAME, "iOS"]],
          [
            /(mac os x) ?([\w\. ]*)/i,
            /(macintosh|mac_powerpc\b)(?!.+haiku)/i
            // Mac OS
          ],
          [[NAME, MAC_OS], [VERSION2, /_/g, "."]],
          [
            // Mobile OSes
            /droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i
            // Android-x86/HarmonyOS
          ],
          [VERSION2, NAME],
          [
            // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS/OpenHarmony
            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\/ ]?([\w\.]*)/i,
            /(blackberry)\w*\/([\w\.]*)/i,
            // Blackberry
            /(tizen|kaios)[\/ ]([\w\.]+)/i,
            // Tizen/KaiOS
            /\((series40);/i
            // Series 40
          ],
          [NAME, VERSION2],
          [
            /\(bb(10);/i
            // BlackBerry 10
          ],
          [VERSION2, [NAME, BLACKBERRY]],
          [
            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i
            // Symbian
          ],
          [VERSION2, [NAME, "Symbian"]],
          [
            /mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i
            // Firefox OS
          ],
          [VERSION2, [NAME, FIREFOX + " OS"]],
          [
            /web0s;.+rt(tv)/i,
            /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i
            // WebOS
          ],
          [VERSION2, [NAME, "webOS"]],
          [
            /watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i
            // watchOS
          ],
          [VERSION2, [NAME, "watchOS"]],
          [
            // Google Chromecast
            /crkey\/([\d\.]+)/i
            // Google Chromecast
          ],
          [VERSION2, [NAME, CHROME + "cast"]],
          [
            /(cros) [\w]+(?:\)| ([\w\.]+)\b)/i
            // Chromium OS
          ],
          [[NAME, CHROMIUM_OS], VERSION2],
          [
            // Smart TVs
            /panasonic;(viera)/i,
            // Panasonic Viera
            /(netrange)mmh/i,
            // Netrange
            /(nettv)\/(\d+\.[\w\.]+)/i,
            // NetTV
            // Console
            /(nintendo|playstation) ([wids345portablevuch]+)/i,
            // Nintendo/Playstation
            /(xbox); +xbox ([^\);]+)/i,
            // Microsoft Xbox (360, One, X, S, Series X, Series S)
            // Other
            /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
            // Joli/Palm
            /(mint)[\/\(\) ]?(\w*)/i,
            // Mint
            /(mageia|vectorlinux)[; ]/i,
            // Mageia/VectorLinux
            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
            // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire
            /(hurd|linux) ?([\w\.]*)/i,
            // Hurd/Linux
            /(gnu) ?([\w\.]*)/i,
            // GNU
            /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
            // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly
            /(haiku) (\w+)/i
            // Haiku
          ],
          [NAME, VERSION2],
          [
            /(sunos) ?([\w\.\d]*)/i
            // Solaris
          ],
          [[NAME, "Solaris"], VERSION2],
          [
            /((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
            // Solaris
            /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
            // AIX
            /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
            // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS
            /(unix) ?([\w\.]*)/i
            // UNIX
          ],
          [NAME, VERSION2]
        ]
      };
      var UAParser2 = function(ua, extensions2) {
        if (typeof ua === OBJ_TYPE) {
          extensions2 = ua;
          ua = undefined2;
        }
        if (!(this instanceof UAParser2)) {
          return new UAParser2(ua, extensions2).getResult();
        }
        var _navigator = typeof window2 !== UNDEF_TYPE && window2.navigator ? window2.navigator : undefined2;
        var _ua = ua || (_navigator && _navigator.userAgent ? _navigator.userAgent : EMPTY);
        var _uach = _navigator && _navigator.userAgentData ? _navigator.userAgentData : undefined2;
        var _rgxmap = extensions2 ? extend(regexes, extensions2) : regexes;
        var _isSelfNav = _navigator && _navigator.userAgent == _ua;
        this.getBrowser = function() {
          var _browser = {};
          _browser[NAME] = undefined2;
          _browser[VERSION2] = undefined2;
          rgxMapper.call(_browser, _ua, _rgxmap.browser);
          _browser[MAJOR] = majorize(_browser[VERSION2]);
          if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {
            _browser[NAME] = "Brave";
          }
          return _browser;
        };
        this.getCPU = function() {
          var _cpu = {};
          _cpu[ARCHITECTURE] = undefined2;
          rgxMapper.call(_cpu, _ua, _rgxmap.cpu);
          return _cpu;
        };
        this.getDevice = function() {
          var _device = {};
          _device[VENDOR] = undefined2;
          _device[MODEL] = undefined2;
          _device[TYPE] = undefined2;
          rgxMapper.call(_device, _ua, _rgxmap.device);
          if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {
            _device[TYPE] = MOBILE;
          }
          if (_isSelfNav && _device[MODEL] == "Macintosh" && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {
            _device[MODEL] = "iPad";
            _device[TYPE] = TABLET;
          }
          return _device;
        };
        this.getEngine = function() {
          var _engine = {};
          _engine[NAME] = undefined2;
          _engine[VERSION2] = undefined2;
          rgxMapper.call(_engine, _ua, _rgxmap.engine);
          return _engine;
        };
        this.getOS = function() {
          var _os = {};
          _os[NAME] = undefined2;
          _os[VERSION2] = undefined2;
          rgxMapper.call(_os, _ua, _rgxmap.os);
          if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != "Unknown") {
            _os[NAME] = _uach.platform.replace(/chrome os/i, CHROMIUM_OS).replace(/macos/i, MAC_OS);
          }
          return _os;
        };
        this.getResult = function() {
          return {
            ua: this.getUA(),
            browser: this.getBrowser(),
            engine: this.getEngine(),
            os: this.getOS(),
            device: this.getDevice(),
            cpu: this.getCPU()
          };
        };
        this.getUA = function() {
          return _ua;
        };
        this.setUA = function(ua2) {
          _ua = typeof ua2 === STR_TYPE && ua2.length > UA_MAX_LENGTH ? trim(ua2, UA_MAX_LENGTH) : ua2;
          return this;
        };
        this.setUA(_ua);
        return this;
      };
      UAParser2.VERSION = LIBVERSION;
      UAParser2.BROWSER = enumerize([NAME, VERSION2, MAJOR]);
      UAParser2.CPU = enumerize([ARCHITECTURE]);
      UAParser2.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);
      UAParser2.ENGINE = UAParser2.OS = enumerize([NAME, VERSION2]);
      if (typeof exports !== UNDEF_TYPE) {
        if (typeof module !== UNDEF_TYPE && module.exports) {
          exports = module.exports = UAParser2;
        }
        exports.UAParser = UAParser2;
      } else {
        if (typeof define === FUNC_TYPE && define.amd) {
          define(function() {
            return UAParser2;
          });
        } else if (typeof window2 !== UNDEF_TYPE) {
          window2.UAParser = UAParser2;
        }
      }
      var $2 = typeof window2 !== UNDEF_TYPE && (window2.jQuery || window2.Zepto);
      if ($2 && !$2.ua) {
        var parser = new UAParser2();
        $2.ua = parser.getResult();
        $2.ua.get = function() {
          return parser.getUA();
        };
        $2.ua.set = function(ua) {
          parser.setUA(ua);
          var result = parser.getResult();
          for (var prop in result) {
            $2.ua[prop] = result[prop];
          }
        };
      }
    })(typeof window === "object" ? window : exports);
  }
});

// node_modules/.pnpm/shimmer@1.2.1/node_modules/shimmer/index.js
var require_shimmer = __commonJS({
  "node_modules/.pnpm/shimmer@1.2.1/node_modules/shimmer/index.js"(exports, module) {
    "use strict";
    function isFunction(funktion) {
      return typeof funktion === "function";
    }
    var logger = console.error.bind(console);
    function defineProperty(obj, name, value) {
      var enumerable = !!obj[name] && obj.propertyIsEnumerable(name);
      Object.defineProperty(obj, name, {
        configurable: true,
        enumerable,
        writable: true,
        value
      });
    }
    function shimmer2(options) {
      if (options && options.logger) {
        if (!isFunction(options.logger)) logger("new logger isn't a function, not replacing");
        else logger = options.logger;
      }
    }
    function wrap2(nodule, name, wrapper) {
      if (!nodule || !nodule[name]) {
        logger("no original function " + name + " to wrap");
        return;
      }
      if (!wrapper) {
        logger("no wrapper function");
        logger(new Error().stack);
        return;
      }
      if (!isFunction(nodule[name]) || !isFunction(wrapper)) {
        logger("original object and wrapper must be functions");
        return;
      }
      var original = nodule[name];
      var wrapped = wrapper(original, name);
      defineProperty(wrapped, "__original", original);
      defineProperty(wrapped, "__unwrap", function() {
        if (nodule[name] === wrapped) defineProperty(nodule, name, original);
      });
      defineProperty(wrapped, "__wrapped", true);
      defineProperty(nodule, name, wrapped);
      return wrapped;
    }
    function massWrap(nodules, names, wrapper) {
      if (!nodules) {
        logger("must provide one or more modules to patch");
        logger(new Error().stack);
        return;
      } else if (!Array.isArray(nodules)) {
        nodules = [nodules];
      }
      if (!(names && Array.isArray(names))) {
        logger("must provide one or more functions to wrap on modules");
        return;
      }
      nodules.forEach(function(nodule) {
        names.forEach(function(name) {
          wrap2(nodule, name, wrapper);
        });
      });
    }
    function unwrap2(nodule, name) {
      if (!nodule || !nodule[name]) {
        logger("no function to unwrap.");
        logger(new Error().stack);
        return;
      }
      if (!nodule[name].__unwrap) {
        logger("no original to unwrap to -- has " + name + " already been unwrapped?");
      } else {
        return nodule[name].__unwrap();
      }
    }
    function massUnwrap(nodules, names) {
      if (!nodules) {
        logger("must provide one or more modules to patch");
        logger(new Error().stack);
        return;
      } else if (!Array.isArray(nodules)) {
        nodules = [nodules];
      }
      if (!(names && Array.isArray(names))) {
        logger("must provide one or more functions to unwrap on modules");
        return;
      }
      nodules.forEach(function(nodule) {
        names.forEach(function(name) {
          unwrap2(nodule, name);
        });
      });
    }
    shimmer2.wrap = wrap2;
    shimmer2.massWrap = massWrap;
    shimmer2.unwrap = unwrap2;
    shimmer2.massUnwrap = massUnwrap;
    module.exports = shimmer2;
  }
});

// node_modules/.pnpm/tslib@1.14.1/node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign8,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter7,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends7,
  __generator: () => __generator7,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends7(d3, b3) {
  extendStatics(d3, b3);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
}
function __rest(s3, e2) {
  var t2 = {};
  for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3) && e2.indexOf(p3) < 0)
    t2[p3] = s3[p3];
  if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p3 = Object.getOwnPropertySymbols(s3); i2 < p3.length; i2++) {
      if (e2.indexOf(p3[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p3[i2]))
        t2[p3[i2]] = s3[p3[i2]];
    }
  return t2;
}
function __decorate(decorators, target, key, desc) {
  var c3 = arguments.length, r2 = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key, desc);
  else for (var i2 = decorators.length - 1; i2 >= 0; i2--) if (d3 = decorators[i2]) r2 = (c3 < 3 ? d3(r2) : c3 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c3 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter7(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator7(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (_3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o3, m3, k2, k22) {
  if (k22 === void 0) k22 = k2;
  o3[k22] = m3[k2];
}
function __exportStar(m3, exports) {
  for (var p3 in m3) if (p3 !== "default" && !exports.hasOwnProperty(p3)) exports[p3] = m3[p3];
}
function __values(o3) {
  var s3 = typeof Symbol === "function" && Symbol.iterator, m3 = s3 && o3[s3], i2 = 0;
  if (m3) return m3.call(o3);
  if (o3 && typeof o3.length === "number") return {
    next: function() {
      if (o3 && i2 >= o3.length) o3 = void 0;
      return { value: o3 && o3[i2++], done: !o3 };
    }
  };
  throw new TypeError(s3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o3, n2) {
  var m3 = typeof Symbol === "function" && o3[Symbol.iterator];
  if (!m3) return o3;
  var i2 = m3.call(o3), r2, ar = [], e2;
  try {
    while ((n2 === void 0 || n2-- > 0) && !(r2 = i2.next()).done) ar.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m3 = i2["return"])) m3.call(i2);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i2 = 0; i2 < arguments.length; i2++)
    ar = ar.concat(__read(arguments[i2]));
  return ar;
}
function __spreadArrays() {
  for (var s3 = 0, i2 = 0, il = arguments.length; i2 < il; i2++) s3 += arguments[i2].length;
  for (var r2 = Array(s3), k2 = 0, i2 = 0; i2 < il; i2++)
    for (var a3 = arguments[i2], j2 = 0, jl = a3.length; j2 < jl; j2++, k2++)
      r2[k2] = a3[j2];
  return r2;
}
function __await(v3) {
  return this instanceof __await ? (this.v = v3, this) : new __await(v3);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g3 = generator.apply(thisArg, _arguments || []), i2, q2 = [];
  return i2 = {}, verb("next"), verb("throw"), verb("return"), i2[Symbol.asyncIterator] = function() {
    return this;
  }, i2;
  function verb(n2) {
    if (g3[n2]) i2[n2] = function(v3) {
      return new Promise(function(a3, b3) {
        q2.push([n2, v3, a3, b3]) > 1 || resume(n2, v3);
      });
    };
  }
  function resume(n2, v3) {
    try {
      step(g3[n2](v3));
    } catch (e2) {
      settle(q2[0][3], e2);
    }
  }
  function step(r2) {
    r2.value instanceof __await ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q2[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f3, v3) {
    if (f3(v3), q2.shift(), q2.length) resume(q2[0][0], q2[0][1]);
  }
}
function __asyncDelegator(o3) {
  var i2, p3;
  return i2 = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i2[Symbol.iterator] = function() {
    return this;
  }, i2;
  function verb(n2, f3) {
    i2[n2] = o3[n2] ? function(v3) {
      return (p3 = !p3) ? { value: __await(o3[n2](v3)), done: n2 === "return" } : f3 ? f3(v3) : v3;
    } : f3;
  }
}
function __asyncValues(o3) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m3 = o3[Symbol.asyncIterator], i2;
  return m3 ? m3.call(o3) : (o3 = typeof __values === "function" ? __values(o3) : o3[Symbol.iterator](), i2 = {}, verb("next"), verb("throw"), verb("return"), i2[Symbol.asyncIterator] = function() {
    return this;
  }, i2);
  function verb(n2) {
    i2[n2] = o3[n2] && function(v3) {
      return new Promise(function(resolve, reject) {
        v3 = o3[n2](v3), settle(resolve, reject, v3.done, v3.value);
      });
    };
  }
  function settle(resolve, reject, d3, v3) {
    Promise.resolve(v3).then(function(v4) {
      resolve({ value: v4, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k2 in mod) if (Object.hasOwnProperty.call(mod, k2)) result[k2] = mod[k2];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics, __assign8;
var init_tslib_es6 = __esm({
  "node_modules/.pnpm/tslib@1.14.1/node_modules/tslib/tslib.es6.js"() {
    extendStatics = function(d3, b3) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
        d4.__proto__ = b4;
      } || function(d4, b4) {
        for (var p3 in b4) if (b4.hasOwnProperty(p3)) d4[p3] = b4[p3];
      };
      return extendStatics(d3, b3);
    };
    __assign8 = function() {
      __assign8 = Object.assign || function __assign16(t2) {
        for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
          s3 = arguments[i2];
          for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3)) t2[p3] = s3[p3];
        }
        return t2;
      };
      return __assign8.apply(this, arguments);
    };
  }
});

// node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/constants.js
var require_constants = __commonJS({
  "node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MAX_HASHABLE_LENGTH = exports.INIT = exports.KEY = exports.DIGEST_LENGTH = exports.BLOCK_SIZE = void 0;
    exports.BLOCK_SIZE = 64;
    exports.DIGEST_LENGTH = 32;
    exports.KEY = new Uint32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    exports.INIT = [
      1779033703,
      3144134277,
      1013904242,
      2773480762,
      1359893119,
      2600822924,
      528734635,
      1541459225
    ];
    exports.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;
  }
});

// node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/RawSha256.js
var require_RawSha256 = __commonJS({
  "node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/RawSha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RawSha256 = void 0;
    var constants_1 = require_constants();
    var RawSha256 = (
      /** @class */
      function() {
        function RawSha2562() {
          this.state = Int32Array.from(constants_1.INIT);
          this.temp = new Int32Array(64);
          this.buffer = new Uint8Array(64);
          this.bufferLength = 0;
          this.bytesHashed = 0;
          this.finished = false;
        }
        RawSha2562.prototype.update = function(data) {
          if (this.finished) {
            throw new Error("Attempted to update an already finished hash.");
          }
          var position = 0;
          var byteLength = data.byteLength;
          this.bytesHashed += byteLength;
          if (this.bytesHashed * 8 > constants_1.MAX_HASHABLE_LENGTH) {
            throw new Error("Cannot hash more than 2^53 - 1 bits");
          }
          while (byteLength > 0) {
            this.buffer[this.bufferLength++] = data[position++];
            byteLength--;
            if (this.bufferLength === constants_1.BLOCK_SIZE) {
              this.hashBuffer();
              this.bufferLength = 0;
            }
          }
        };
        RawSha2562.prototype.digest = function() {
          if (!this.finished) {
            var bitsHashed = this.bytesHashed * 8;
            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);
            var undecoratedLength = this.bufferLength;
            bufferView.setUint8(this.bufferLength++, 128);
            if (undecoratedLength % constants_1.BLOCK_SIZE >= constants_1.BLOCK_SIZE - 8) {
              for (var i2 = this.bufferLength; i2 < constants_1.BLOCK_SIZE; i2++) {
                bufferView.setUint8(i2, 0);
              }
              this.hashBuffer();
              this.bufferLength = 0;
            }
            for (var i2 = this.bufferLength; i2 < constants_1.BLOCK_SIZE - 8; i2++) {
              bufferView.setUint8(i2, 0);
            }
            bufferView.setUint32(constants_1.BLOCK_SIZE - 8, Math.floor(bitsHashed / 4294967296), true);
            bufferView.setUint32(constants_1.BLOCK_SIZE - 4, bitsHashed);
            this.hashBuffer();
            this.finished = true;
          }
          var out = new Uint8Array(constants_1.DIGEST_LENGTH);
          for (var i2 = 0; i2 < 8; i2++) {
            out[i2 * 4] = this.state[i2] >>> 24 & 255;
            out[i2 * 4 + 1] = this.state[i2] >>> 16 & 255;
            out[i2 * 4 + 2] = this.state[i2] >>> 8 & 255;
            out[i2 * 4 + 3] = this.state[i2] >>> 0 & 255;
          }
          return out;
        };
        RawSha2562.prototype.hashBuffer = function() {
          var _a = this, buffer = _a.buffer, state = _a.state;
          var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];
          for (var i2 = 0; i2 < constants_1.BLOCK_SIZE; i2++) {
            if (i2 < 16) {
              this.temp[i2] = (buffer[i2 * 4] & 255) << 24 | (buffer[i2 * 4 + 1] & 255) << 16 | (buffer[i2 * 4 + 2] & 255) << 8 | buffer[i2 * 4 + 3] & 255;
            } else {
              var u3 = this.temp[i2 - 2];
              var t1_1 = (u3 >>> 17 | u3 << 15) ^ (u3 >>> 19 | u3 << 13) ^ u3 >>> 10;
              u3 = this.temp[i2 - 15];
              var t2_1 = (u3 >>> 7 | u3 << 25) ^ (u3 >>> 18 | u3 << 14) ^ u3 >>> 3;
              this.temp[i2] = (t1_1 + this.temp[i2 - 7] | 0) + (t2_1 + this.temp[i2 - 16] | 0);
            }
            var t1 = (((state4 >>> 6 | state4 << 26) ^ (state4 >>> 11 | state4 << 21) ^ (state4 >>> 25 | state4 << 7)) + (state4 & state5 ^ ~state4 & state6) | 0) + (state7 + (constants_1.KEY[i2] + this.temp[i2] | 0) | 0) | 0;
            var t2 = ((state0 >>> 2 | state0 << 30) ^ (state0 >>> 13 | state0 << 19) ^ (state0 >>> 22 | state0 << 10)) + (state0 & state1 ^ state0 & state2 ^ state1 & state2) | 0;
            state7 = state6;
            state6 = state5;
            state5 = state4;
            state4 = state3 + t1 | 0;
            state3 = state2;
            state2 = state1;
            state1 = state0;
            state0 = t1 + t2 | 0;
          }
          state[0] += state0;
          state[1] += state1;
          state[2] += state2;
          state[3] += state3;
          state[4] += state4;
          state[5] += state5;
          state[6] += state6;
          state[7] += state7;
        };
        return RawSha2562;
      }()
    );
    exports.RawSha256 = RawSha256;
  }
});

// node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js
var fromUtf82, toUtf8;
var init_pureJs = __esm({
  "node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js"() {
    fromUtf82 = (input) => {
      const bytes = [];
      for (let i2 = 0, len = input.length; i2 < len; i2++) {
        const value = input.charCodeAt(i2);
        if (value < 128) {
          bytes.push(value);
        } else if (value < 2048) {
          bytes.push(value >> 6 | 192, value & 63 | 128);
        } else if (i2 + 1 < input.length && (value & 64512) === 55296 && (input.charCodeAt(i2 + 1) & 64512) === 56320) {
          const surrogatePair = 65536 + ((value & 1023) << 10) + (input.charCodeAt(++i2) & 1023);
          bytes.push(surrogatePair >> 18 | 240, surrogatePair >> 12 & 63 | 128, surrogatePair >> 6 & 63 | 128, surrogatePair & 63 | 128);
        } else {
          bytes.push(value >> 12 | 224, value >> 6 & 63 | 128, value & 63 | 128);
        }
      }
      return Uint8Array.from(bytes);
    };
    toUtf8 = (input) => {
      let decoded = "";
      for (let i2 = 0, len = input.length; i2 < len; i2++) {
        const byte = input[i2];
        if (byte < 128) {
          decoded += String.fromCharCode(byte);
        } else if (192 <= byte && byte < 224) {
          const nextByte = input[++i2];
          decoded += String.fromCharCode((byte & 31) << 6 | nextByte & 63);
        } else if (240 <= byte && byte < 365) {
          const surrogatePair = [byte, input[++i2], input[++i2], input[++i2]];
          const encoded = "%" + surrogatePair.map((byteValue) => byteValue.toString(16)).join("%");
          decoded += decodeURIComponent(encoded);
        } else {
          decoded += String.fromCharCode((byte & 15) << 12 | (input[++i2] & 63) << 6 | input[++i2] & 63);
        }
      }
      return decoded;
    };
  }
});

// node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/whatwgEncodingApi.js
function fromUtf83(input) {
  return new TextEncoder().encode(input);
}
function toUtf82(input) {
  return new TextDecoder("utf-8").decode(input);
}
var init_whatwgEncodingApi = __esm({
  "node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/whatwgEncodingApi.js"() {
  }
});

// node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/index.js
var dist_es_exports = {};
__export(dist_es_exports, {
  fromUtf8: () => fromUtf84,
  toUtf8: () => toUtf83
});
var fromUtf84, toUtf83;
var init_dist_es = __esm({
  "node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/index.js"() {
    init_pureJs();
    init_whatwgEncodingApi();
    fromUtf84 = (input) => typeof TextEncoder === "function" ? fromUtf83(input) : fromUtf82(input);
    toUtf83 = (input) => typeof TextDecoder === "function" ? toUtf82(input) : toUtf8(input);
  }
});

// node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/convertToBuffer.js
var require_convertToBuffer = __commonJS({
  "node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/convertToBuffer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertToBuffer = void 0;
    var util_utf8_browser_1 = (init_dist_es(), __toCommonJS(dist_es_exports));
    var fromUtf85 = typeof Buffer !== "undefined" && Buffer.from ? function(input) {
      return Buffer.from(input, "utf8");
    } : util_utf8_browser_1.fromUtf8;
    function convertToBuffer(data) {
      if (data instanceof Uint8Array)
        return data;
      if (typeof data === "string") {
        return fromUtf85(data);
      }
      if (ArrayBuffer.isView(data)) {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
      }
      return new Uint8Array(data);
    }
    exports.convertToBuffer = convertToBuffer;
  }
});

// node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/isEmptyData.js
var require_isEmptyData = __commonJS({
  "node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/isEmptyData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isEmptyData = void 0;
    function isEmptyData(data) {
      if (typeof data === "string") {
        return data.length === 0;
      }
      return data.byteLength === 0;
    }
    exports.isEmptyData = isEmptyData;
  }
});

// node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/numToUint8.js
var require_numToUint8 = __commonJS({
  "node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/numToUint8.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.numToUint8 = void 0;
    function numToUint8(num) {
      return new Uint8Array([
        (num & 4278190080) >> 24,
        (num & 16711680) >> 16,
        (num & 65280) >> 8,
        num & 255
      ]);
    }
    exports.numToUint8 = numToUint8;
  }
});

// node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/uint32ArrayFrom.js
var require_uint32ArrayFrom = __commonJS({
  "node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/uint32ArrayFrom.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.uint32ArrayFrom = void 0;
    function uint32ArrayFrom(a_lookUpTable) {
      if (!Uint32Array.from) {
        var return_array = new Uint32Array(a_lookUpTable.length);
        var a_index = 0;
        while (a_index < a_lookUpTable.length) {
          return_array[a_index] = a_lookUpTable[a_index];
          a_index += 1;
        }
        return return_array;
      }
      return Uint32Array.from(a_lookUpTable);
    }
    exports.uint32ArrayFrom = uint32ArrayFrom;
  }
});

// node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/index.js
var require_build = __commonJS({
  "node_modules/.pnpm/@aws-crypto+util@3.0.0/node_modules/@aws-crypto/util/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;
    var convertToBuffer_1 = require_convertToBuffer();
    Object.defineProperty(exports, "convertToBuffer", { enumerable: true, get: function() {
      return convertToBuffer_1.convertToBuffer;
    } });
    var isEmptyData_1 = require_isEmptyData();
    Object.defineProperty(exports, "isEmptyData", { enumerable: true, get: function() {
      return isEmptyData_1.isEmptyData;
    } });
    var numToUint8_1 = require_numToUint8();
    Object.defineProperty(exports, "numToUint8", { enumerable: true, get: function() {
      return numToUint8_1.numToUint8;
    } });
    var uint32ArrayFrom_1 = require_uint32ArrayFrom();
    Object.defineProperty(exports, "uint32ArrayFrom", { enumerable: true, get: function() {
      return uint32ArrayFrom_1.uint32ArrayFrom;
    } });
  }
});

// node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/jsSha256.js
var require_jsSha256 = __commonJS({
  "node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/jsSha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Sha256 = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var constants_1 = require_constants();
    var RawSha256_1 = require_RawSha256();
    var util_1 = require_build();
    var Sha2562 = (
      /** @class */
      function() {
        function Sha2563(secret) {
          this.secret = secret;
          this.hash = new RawSha256_1.RawSha256();
          this.reset();
        }
        Sha2563.prototype.update = function(toHash) {
          if ((0, util_1.isEmptyData)(toHash) || this.error) {
            return;
          }
          try {
            this.hash.update((0, util_1.convertToBuffer)(toHash));
          } catch (e2) {
            this.error = e2;
          }
        };
        Sha2563.prototype.digestSync = function() {
          if (this.error) {
            throw this.error;
          }
          if (this.outer) {
            if (!this.outer.finished) {
              this.outer.update(this.hash.digest());
            }
            return this.outer.digest();
          }
          return this.hash.digest();
        };
        Sha2563.prototype.digest = function() {
          return tslib_1.__awaiter(this, void 0, void 0, function() {
            return tslib_1.__generator(this, function(_a) {
              return [2, this.digestSync()];
            });
          });
        };
        Sha2563.prototype.reset = function() {
          this.hash = new RawSha256_1.RawSha256();
          if (this.secret) {
            this.outer = new RawSha256_1.RawSha256();
            var inner = bufferFromSecret(this.secret);
            var outer = new Uint8Array(constants_1.BLOCK_SIZE);
            outer.set(inner);
            for (var i2 = 0; i2 < constants_1.BLOCK_SIZE; i2++) {
              inner[i2] ^= 54;
              outer[i2] ^= 92;
            }
            this.hash.update(inner);
            this.outer.update(outer);
            for (var i2 = 0; i2 < inner.byteLength; i2++) {
              inner[i2] = 0;
            }
          }
        };
        return Sha2563;
      }()
    );
    exports.Sha256 = Sha2562;
    function bufferFromSecret(secret) {
      var input = (0, util_1.convertToBuffer)(secret);
      if (input.byteLength > constants_1.BLOCK_SIZE) {
        var bufferHash = new RawSha256_1.RawSha256();
        bufferHash.update(input);
        input = bufferHash.digest();
      }
      var buffer = new Uint8Array(constants_1.BLOCK_SIZE);
      buffer.set(input);
      return buffer;
    }
  }
});

// node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/index.js
var require_build2 = __commonJS({
  "node_modules/.pnpm/@aws-crypto+sha256-js@3.0.0/node_modules/@aws-crypto/sha256-js/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_jsSha256(), exports);
  }
});

// node_modules/.pnpm/@smithy+types@3.7.2/node_modules/@smithy/types/dist-es/auth/auth.js
var HttpAuthLocation;
(function(HttpAuthLocation2) {
  HttpAuthLocation2["HEADER"] = "header";
  HttpAuthLocation2["QUERY"] = "query";
})(HttpAuthLocation || (HttpAuthLocation = {}));

// node_modules/.pnpm/@smithy+types@3.7.2/node_modules/@smithy/types/dist-es/auth/HttpApiKeyAuth.js
var HttpApiKeyAuthLocation;
(function(HttpApiKeyAuthLocation2) {
  HttpApiKeyAuthLocation2["HEADER"] = "header";
  HttpApiKeyAuthLocation2["QUERY"] = "query";
})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));

// node_modules/.pnpm/@smithy+types@3.7.2/node_modules/@smithy/types/dist-es/endpoint.js
var EndpointURLScheme;
(function(EndpointURLScheme2) {
  EndpointURLScheme2["HTTP"] = "http";
  EndpointURLScheme2["HTTPS"] = "https";
})(EndpointURLScheme || (EndpointURLScheme = {}));

// node_modules/.pnpm/@smithy+types@3.7.2/node_modules/@smithy/types/dist-es/extensions/checksum.js
var AlgorithmId;
(function(AlgorithmId2) {
  AlgorithmId2["MD5"] = "md5";
  AlgorithmId2["CRC32"] = "crc32";
  AlgorithmId2["CRC32C"] = "crc32c";
  AlgorithmId2["SHA1"] = "sha1";
  AlgorithmId2["SHA256"] = "sha256";
})(AlgorithmId || (AlgorithmId = {}));

// node_modules/.pnpm/@smithy+types@3.7.2/node_modules/@smithy/types/dist-es/http.js
var FieldPosition;
(function(FieldPosition2) {
  FieldPosition2[FieldPosition2["HEADER"] = 0] = "HEADER";
  FieldPosition2[FieldPosition2["TRAILER"] = 1] = "TRAILER";
})(FieldPosition || (FieldPosition = {}));

// node_modules/.pnpm/@smithy+types@3.7.2/node_modules/@smithy/types/dist-es/profile.js
var IniSectionType;
(function(IniSectionType2) {
  IniSectionType2["PROFILE"] = "profile";
  IniSectionType2["SSO_SESSION"] = "sso-session";
  IniSectionType2["SERVICES"] = "services";
})(IniSectionType || (IniSectionType = {}));

// node_modules/.pnpm/@smithy+types@3.7.2/node_modules/@smithy/types/dist-es/transfer.js
var RequestHandlerProtocol;
(function(RequestHandlerProtocol2) {
  RequestHandlerProtocol2["HTTP_0_9"] = "http/0.9";
  RequestHandlerProtocol2["HTTP_1_0"] = "http/1.0";
  RequestHandlerProtocol2["TDS_8_0"] = "tds/8.0";
})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));

// node_modules/.pnpm/@smithy+protocol-http@4.1.8/node_modules/@smithy/protocol-http/dist-es/httpRequest.js
var HttpRequest = class _HttpRequest {
  constructor(options) {
    this.method = options.method || "GET";
    this.hostname = options.hostname || "localhost";
    this.port = options.port;
    this.query = options.query || {};
    this.headers = options.headers || {};
    this.body = options.body;
    this.protocol = options.protocol ? options.protocol.slice(-1) !== ":" ? `${options.protocol}:` : options.protocol : "https:";
    this.path = options.path ? options.path.charAt(0) !== "/" ? `/${options.path}` : options.path : "/";
    this.username = options.username;
    this.password = options.password;
    this.fragment = options.fragment;
  }
  static clone(request) {
    const cloned = new _HttpRequest({
      ...request,
      headers: { ...request.headers }
    });
    if (cloned.query) {
      cloned.query = cloneQuery(cloned.query);
    }
    return cloned;
  }
  static isInstance(request) {
    if (!request) {
      return false;
    }
    const req = request;
    return "method" in req && "protocol" in req && "hostname" in req && "path" in req && typeof req["query"] === "object" && typeof req["headers"] === "object";
  }
  clone() {
    return _HttpRequest.clone(this);
  }
};
function cloneQuery(query) {
  return Object.keys(query).reduce((carry, paramName) => {
    const param = query[paramName];
    return {
      ...carry,
      [paramName]: Array.isArray(param) ? [...param] : param
    };
  }, {});
}

// node_modules/.pnpm/@smithy+protocol-http@4.1.8/node_modules/@smithy/protocol-http/dist-es/httpResponse.js
var HttpResponse = class {
  constructor(options) {
    this.statusCode = options.statusCode;
    this.reason = options.reason;
    this.headers = options.headers || {};
    this.body = options.body;
  }
  static isInstance(response) {
    if (!response)
      return false;
    const resp = response;
    return typeof resp.statusCode === "number" && typeof resp.headers === "object";
  }
};

// node_modules/.pnpm/@smithy+util-uri-escape@3.0.0/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js
var escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);
var hexEncode = (c3) => `%${c3.charCodeAt(0).toString(16).toUpperCase()}`;

// node_modules/.pnpm/@smithy+querystring-builder@3.0.11/node_modules/@smithy/querystring-builder/dist-es/index.js
function buildQueryString(query) {
  const parts = [];
  for (let key of Object.keys(query).sort()) {
    const value = query[key];
    key = escapeUri(key);
    if (Array.isArray(value)) {
      for (let i2 = 0, iLen = value.length; i2 < iLen; i2++) {
        parts.push(`${key}=${escapeUri(value[i2])}`);
      }
    } else {
      let qsEntry = key;
      if (value || typeof value === "string") {
        qsEntry += `=${escapeUri(value)}`;
      }
      parts.push(qsEntry);
    }
  }
  return parts.join("&");
}

// node_modules/.pnpm/@smithy+fetch-http-handler@4.1.3/node_modules/@smithy/fetch-http-handler/dist-es/create-request.js
function createRequest(url, requestOptions) {
  return new Request(url, requestOptions);
}

// node_modules/.pnpm/@smithy+fetch-http-handler@4.1.3/node_modules/@smithy/fetch-http-handler/dist-es/request-timeout.js
function requestTimeout(timeoutInMs = 0) {
  return new Promise((resolve, reject) => {
    if (timeoutInMs) {
      setTimeout(() => {
        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);
        timeoutError.name = "TimeoutError";
        reject(timeoutError);
      }, timeoutInMs);
    }
  });
}

// node_modules/.pnpm/@smithy+fetch-http-handler@4.1.3/node_modules/@smithy/fetch-http-handler/dist-es/fetch-http-handler.js
var keepAliveSupport = {
  supported: void 0
};
var FetchHttpHandler = class _FetchHttpHandler {
  static create(instanceOrOptions) {
    if (typeof (instanceOrOptions == null ? void 0 : instanceOrOptions.handle) === "function") {
      return instanceOrOptions;
    }
    return new _FetchHttpHandler(instanceOrOptions);
  }
  constructor(options) {
    if (typeof options === "function") {
      this.configProvider = options().then((opts) => opts || {});
    } else {
      this.config = options ?? {};
      this.configProvider = Promise.resolve(this.config);
    }
    if (keepAliveSupport.supported === void 0) {
      keepAliveSupport.supported = Boolean(typeof Request !== "undefined" && "keepalive" in createRequest("https://[::1]"));
    }
  }
  destroy() {
  }
  async handle(request, { abortSignal } = {}) {
    var _a;
    if (!this.config) {
      this.config = await this.configProvider;
    }
    const requestTimeoutInMs = this.config.requestTimeout;
    const keepAlive = this.config.keepAlive === true;
    const credentials = this.config.credentials;
    if (abortSignal == null ? void 0 : abortSignal.aborted) {
      const abortError = new Error("Request aborted");
      abortError.name = "AbortError";
      return Promise.reject(abortError);
    }
    let path = request.path;
    const queryString = buildQueryString(request.query || {});
    if (queryString) {
      path += `?${queryString}`;
    }
    if (request.fragment) {
      path += `#${request.fragment}`;
    }
    let auth = "";
    if (request.username != null || request.password != null) {
      const username = request.username ?? "";
      const password = request.password ?? "";
      auth = `${username}:${password}@`;
    }
    const { port, method } = request;
    const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : ""}${path}`;
    const body = method === "GET" || method === "HEAD" ? void 0 : request.body;
    const requestOptions = {
      body,
      headers: new Headers(request.headers),
      method,
      credentials
    };
    if ((_a = this.config) == null ? void 0 : _a.cache) {
      requestOptions.cache = this.config.cache;
    }
    if (body) {
      requestOptions.duplex = "half";
    }
    if (typeof AbortController !== "undefined") {
      requestOptions.signal = abortSignal;
    }
    if (keepAliveSupport.supported) {
      requestOptions.keepalive = keepAlive;
    }
    if (typeof this.config.requestInit === "function") {
      Object.assign(requestOptions, this.config.requestInit(request));
    }
    let removeSignalEventListener = () => {
    };
    const fetchRequest = createRequest(url, requestOptions);
    const raceOfPromises = [
      fetch(fetchRequest).then((response) => {
        const fetchHeaders = response.headers;
        const transformedHeaders = {};
        for (const pair of fetchHeaders.entries()) {
          transformedHeaders[pair[0]] = pair[1];
        }
        const hasReadableStream = response.body != void 0;
        if (!hasReadableStream) {
          return response.blob().then((body2) => ({
            response: new HttpResponse({
              headers: transformedHeaders,
              reason: response.statusText,
              statusCode: response.status,
              body: body2
            })
          }));
        }
        return {
          response: new HttpResponse({
            headers: transformedHeaders,
            reason: response.statusText,
            statusCode: response.status,
            body: response.body
          })
        };
      }),
      requestTimeout(requestTimeoutInMs)
    ];
    if (abortSignal) {
      raceOfPromises.push(new Promise((resolve, reject) => {
        const onAbort = () => {
          const abortError = new Error("Request aborted");
          abortError.name = "AbortError";
          reject(abortError);
        };
        if (typeof abortSignal.addEventListener === "function") {
          const signal = abortSignal;
          signal.addEventListener("abort", onAbort, { once: true });
          removeSignalEventListener = () => signal.removeEventListener("abort", onAbort);
        } else {
          abortSignal.onabort = onAbort;
        }
      }));
    }
    return Promise.race(raceOfPromises).finally(removeSignalEventListener);
  }
  updateHttpClientConfig(key, value) {
    this.config = void 0;
    this.configProvider = this.configProvider.then((config) => {
      config[key] = value;
      return config;
    });
  }
  httpHandlerConfigs() {
    return this.config ?? {};
  }
};

// node_modules/.pnpm/@smithy+util-base64@3.0.0/node_modules/@smithy/util-base64/dist-es/constants.browser.js
var alphabetByEncoding = {};
var alphabetByValue = new Array(64);
for (let i2 = 0, start = "A".charCodeAt(0), limit = "Z".charCodeAt(0); i2 + start <= limit; i2++) {
  const char = String.fromCharCode(i2 + start);
  alphabetByEncoding[char] = i2;
  alphabetByValue[i2] = char;
}
for (let i2 = 0, start = "a".charCodeAt(0), limit = "z".charCodeAt(0); i2 + start <= limit; i2++) {
  const char = String.fromCharCode(i2 + start);
  const index = i2 + 26;
  alphabetByEncoding[char] = index;
  alphabetByValue[index] = char;
}
for (let i2 = 0; i2 < 10; i2++) {
  alphabetByEncoding[i2.toString(10)] = i2 + 52;
  const char = i2.toString(10);
  const index = i2 + 52;
  alphabetByEncoding[char] = index;
  alphabetByValue[index] = char;
}
alphabetByEncoding["+"] = 62;
alphabetByValue[62] = "+";
alphabetByEncoding["/"] = 63;
alphabetByValue[63] = "/";

// node_modules/.pnpm/@smithy+util-utf8@3.0.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js
var fromUtf8 = (input) => new TextEncoder().encode(input);

// node_modules/.pnpm/@smithy+util-utf8@3.0.0/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js
var toUint8Array = (data) => {
  if (typeof data === "string") {
    return fromUtf8(data);
  }
  if (ArrayBuffer.isView(data)) {
    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
  }
  return new Uint8Array(data);
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/utils.js
var __awaiter = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var responseToJson = function(response) {
  return __awaiter(void 0, void 0, void 0, function() {
    var value;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          return [4, response.body.getReader().read()];
        case 1:
          value = _a.sent().value;
          return [2, JSON.parse(String.fromCharCode.apply(null, value))];
      }
    });
  });
};
var responseToString = function(response) {
  return __awaiter(void 0, void 0, void 0, function() {
    var value;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          return [4, response.body.getReader().read()];
        case 1:
          value = _a.sent().value;
          return [2, String.fromCharCode.apply(null, value)];
      }
    });
  });
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/StsClient.js
var __assign = function() {
  __assign = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign.apply(this, arguments);
};
var __awaiter2 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator2 = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var METHOD = "POST";
var CONTENT_TYPE = "application/x-www-form-urlencoded";
var PROTOCOL = "https:";
var ACTION = "AssumeRoleWithWebIdentity";
var VERSION = "2011-06-15";
var StsClient = (
  /** @class */
  /* @__PURE__ */ function() {
    function StsClient2(config) {
      var _this = this;
      this.assumeRoleWithWebIdentity = function(request) {
        return __awaiter2(_this, void 0, void 0, function() {
          var requestObject, encodedBody, STSRequest, response, xmlResponse, e_1;
          return __generator2(this, function(_a) {
            switch (_a.label) {
              case 0:
                _a.trys.push([0, 3, , 4]);
                requestObject = __assign(__assign({}, request), { Action: ACTION, Version: VERSION });
                encodedBody = new URLSearchParams(Object.entries(requestObject)).toString();
                STSRequest = new HttpRequest({
                  method: METHOD,
                  headers: {
                    "content-type": CONTENT_TYPE,
                    host: this.hostname
                  },
                  protocol: PROTOCOL,
                  hostname: this.hostname,
                  body: encodedBody
                });
                return [4, this.fetchRequestHandler.handle(STSRequest)];
              case 1:
                response = _a.sent().response;
                return [4, responseToString(response)];
              case 2:
                xmlResponse = _a.sent();
                return [2, {
                  accessKeyId: xmlResponse.split("<AccessKeyId>")[1].split("</AccessKeyId>")[0],
                  secretAccessKey: xmlResponse.split("<SecretAccessKey>")[1].split("</SecretAccessKey>")[0],
                  sessionToken: xmlResponse.split("<SessionToken>")[1].split("</SessionToken>")[0],
                  expiration: new Date(xmlResponse.split("<Expiration>")[1].split("</Expiration>")[0])
                }];
              case 3:
                e_1 = _a.sent();
                throw new Error("CWR: Failed to retrieve credentials from STS: ".concat(e_1));
              case 4:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      this.hostname = "sts.".concat(config.region, ".amazonaws.com");
      this.fetchRequestHandler = config.fetchRequestHandler;
    }
    return StsClient2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/utils/constants.js
var CRED_KEY = "cwr_c";
var IDENTITY_KEY = "cwr_i";
var SESSION_COOKIE_NAME = "cwr_s";
var USER_COOKIE_NAME = "cwr_u";
var CRED_RENEW_MS = 3e4;
var INSTALL_MODULE = "arw-module";

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/CognitoIdentityClient.js
var __awaiter3 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator3 = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var METHOD2 = "POST";
var CONTENT_TYPE2 = "application/x-amz-json-1.1";
var PROTOCOL2 = "https:";
var GET_ID_TARGET = "AWSCognitoIdentityService.GetId";
var GET_TOKEN_TARGET = "AWSCognitoIdentityService.GetOpenIdToken";
var GET_CREDENTIALS_TARGET = "AWSCognitoIdentityService.GetCredentialsForIdentity";
var CognitoIdentityClient = (
  /** @class */
  /* @__PURE__ */ function() {
    function CognitoIdentityClient2(config) {
      var _this = this;
      var _a;
      this.getId = function(request) {
        return __awaiter3(_this, void 0, void 0, function() {
          var getIdResponse, requestPayload, idRequest, getIdResponse_1, _a2, e_1;
          return __generator3(this, function(_b) {
            switch (_b.label) {
              case 0:
                getIdResponse = null;
                try {
                  getIdResponse = JSON.parse(localStorage.getItem(this.identityStorageKey));
                } catch (e2) {
                }
                if (getIdResponse && getIdResponse.IdentityId) {
                  return [2, Promise.resolve(getIdResponse)];
                }
                _b.label = 1;
              case 1:
                _b.trys.push([1, 4, , 5]);
                requestPayload = JSON.stringify(request);
                idRequest = this.getHttpRequest(GET_ID_TARGET, requestPayload);
                _a2 = responseToJson;
                return [4, this.fetchRequestHandler.handle(idRequest)];
              case 2:
                return [4, _a2.apply(void 0, [_b.sent().response])];
              case 3:
                getIdResponse_1 = _b.sent();
                try {
                  localStorage.setItem(this.identityStorageKey, JSON.stringify({ IdentityId: getIdResponse_1.IdentityId }));
                } catch (e2) {
                }
                return [2, getIdResponse_1];
              case 4:
                e_1 = _b.sent();
                throw new Error("CWR: Failed to retrieve Cognito identity: ".concat(e_1));
              case 5:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      this.getOpenIdToken = function(request) {
        return __awaiter3(_this, void 0, void 0, function() {
          var requestPayload, tokenRequest, response, _a2, e_2;
          return __generator3(this, function(_b) {
            switch (_b.label) {
              case 0:
                _b.trys.push([0, 3, , 4]);
                requestPayload = JSON.stringify(request);
                tokenRequest = this.getHttpRequest(GET_TOKEN_TARGET, requestPayload);
                return [4, this.fetchRequestHandler.handle(tokenRequest)];
              case 1:
                response = _b.sent().response;
                _a2 = this.validateOpenIdTokenResponse;
                return [4, responseToJson(response)];
              case 2:
                return [2, _a2.apply(this, [_b.sent()])];
              case 3:
                e_2 = _b.sent();
                localStorage.removeItem(this.identityStorageKey);
                throw new Error("CWR: Failed to retrieve Cognito OpenId token: ".concat(e_2));
              case 4:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      this.getCredentialsForIdentity = function(identityId) {
        return __awaiter3(_this, void 0, void 0, function() {
          var requestPayload, credentialRequest, response, _a2, AccessKeyId, Expiration, SecretKey, SessionToken, _b, e_3;
          return __generator3(this, function(_c) {
            switch (_c.label) {
              case 0:
                _c.trys.push([0, 3, , 4]);
                requestPayload = JSON.stringify({ IdentityId: identityId });
                credentialRequest = this.getHttpRequest(GET_CREDENTIALS_TARGET, requestPayload);
                return [4, this.fetchRequestHandler.handle(credentialRequest)];
              case 1:
                response = _c.sent().response;
                _b = this.validateCredenentialsResponse;
                return [4, responseToJson(response)];
              case 2:
                _a2 = _b.apply(this, [_c.sent()]), AccessKeyId = _a2.AccessKeyId, Expiration = _a2.Expiration, SecretKey = _a2.SecretKey, SessionToken = _a2.SessionToken;
                return [2, {
                  accessKeyId: AccessKeyId,
                  secretAccessKey: SecretKey,
                  sessionToken: SessionToken,
                  expiration: new Date(Expiration * 1e3)
                }];
              case 3:
                e_3 = _c.sent();
                localStorage.removeItem(this.identityStorageKey);
                throw new Error("CWR: Failed to retrieve credentials for Cognito identity: ".concat(e_3));
              case 4:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      this.validateOpenIdTokenResponse = function(r2) {
        if ("IdentityId" in r2 && "Token" in r2) {
          return r2;
        } else if (r2 && "__type" in r2 && "message" in r2) {
          throw new Error("".concat(r2.__type, ": ").concat(r2.message));
        } else {
          throw new Error("Unknown OpenIdToken response");
        }
      };
      this.validateCredenentialsResponse = function(r2) {
        if ("IdentityId" in r2 && "Credentials" in r2) {
          return r2.Credentials;
        } else if (r2 && "__type" in r2 && "message" in r2) {
          throw new Error("".concat(r2.__type, ": ").concat(r2.message));
        } else {
          throw new Error("Unknown Credentials response");
        }
      };
      this.getHttpRequest = function(target, payload) {
        return new HttpRequest({
          method: METHOD2,
          headers: {
            "content-type": CONTENT_TYPE2,
            "x-amz-target": target
          },
          protocol: PROTOCOL2,
          hostname: _this.hostname,
          body: payload
        });
      };
      this.hostname = "cognito-identity.".concat(config.region, ".amazonaws.com");
      this.fetchRequestHandler = config.fetchRequestHandler;
      this.identityStorageKey = ((_a = config.clientConfig) === null || _a === void 0 ? void 0 : _a.cookieAttributes.unique) ? "".concat(IDENTITY_KEY, "_").concat(config.applicationId) : IDENTITY_KEY;
    }
    return CognitoIdentityClient2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/Authentication.js
var __assign2 = function() {
  __assign2 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign2.apply(this, arguments);
};
var __awaiter4 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator4 = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var Authentication = (
  /** @class */
  function() {
    function Authentication2(config, applicationId) {
      var _this = this;
      this.ChainAnonymousCredentialsProvider = function() {
        return __awaiter4(_this, void 0, void 0, function() {
          return __generator4(this, function(_a) {
            return [2, this.AnonymousCredentialsProvider().catch(this.AnonymousStorageCredentialsProvider).catch(this.AnonymousCognitoCredentialsProvider)];
          });
        });
      };
      this.AnonymousCredentialsProvider = function() {
        return __awaiter4(_this, void 0, void 0, function() {
          var _this2 = this;
          return __generator4(this, function(_a) {
            return [2, new Promise(function(resolve, reject) {
              if (_this2.renewCredentials()) {
                return reject();
              }
              resolve(_this2.credentials);
            })];
          });
        });
      };
      this.AnonymousStorageCredentialsProvider = function() {
        return __awaiter4(_this, void 0, void 0, function() {
          var _this2 = this;
          return __generator4(this, function(_a) {
            return [2, new Promise(function(resolve, reject) {
              var credentials;
              try {
                credentials = JSON.parse(localStorage.getItem(_this2.credentialStorageKey));
              } catch (e2) {
                return reject();
              }
              _this2.credentials = __assign2(__assign2({}, credentials), { expiration: new Date(credentials.expiration) });
              if (_this2.renewCredentials()) {
                return reject();
              }
              resolve(_this2.credentials);
            })];
          });
        });
      };
      var region = config.identityPoolId.split(":")[0];
      this.config = config;
      this.cognitoIdentityClient = new CognitoIdentityClient({
        fetchRequestHandler: new FetchHttpHandler(),
        region,
        clientConfig: config,
        applicationId
      });
      this.credentialStorageKey = this.config.cookieAttributes.unique ? "".concat(CRED_KEY, "_").concat(applicationId) : CRED_KEY;
    }
    Authentication2.prototype.renewCredentials = function() {
      if (!this.credentials || !this.credentials.expiration) {
        return true;
      }
      var renewalTime = new Date(this.credentials.expiration.getTime() - CRED_RENEW_MS);
      return /* @__PURE__ */ new Date() > renewalTime;
    };
    return Authentication2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/BasicAuthentication.js
var __extends = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __awaiter5 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator5 = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var BasicAuthentication = (
  /** @class */
  function(_super) {
    __extends(BasicAuthentication2, _super);
    function BasicAuthentication2(config, applicationId) {
      var _this = _super.call(this, config, applicationId) || this;
      _this.AnonymousCognitoCredentialsProvider = function() {
        return __awaiter5(_this, void 0, void 0, function() {
          var retries, getIdResponse, getOpenIdTokenResponse, credentials, e_1;
          return __generator5(this, function(_a) {
            switch (_a.label) {
              case 0:
                retries = 1;
                _a.label = 1;
              case 1:
                if (false) return [3, 8];
                _a.label = 2;
              case 2:
                _a.trys.push([2, 6, , 7]);
                return [4, this.cognitoIdentityClient.getId({
                  IdentityPoolId: this.config.identityPoolId
                })];
              case 3:
                getIdResponse = _a.sent();
                return [4, this.cognitoIdentityClient.getOpenIdToken(getIdResponse)];
              case 4:
                getOpenIdTokenResponse = _a.sent();
                return [4, this.stsClient.assumeRoleWithWebIdentity({
                  RoleArn: this.config.guestRoleArn,
                  RoleSessionName: "cwr",
                  WebIdentityToken: getOpenIdTokenResponse.Token
                })];
              case 5:
                credentials = _a.sent();
                this.credentials = credentials;
                try {
                  localStorage.setItem(this.credentialStorageKey, JSON.stringify(credentials));
                } catch (e2) {
                }
                return [2, credentials];
              case 6:
                e_1 = _a.sent();
                if (retries) {
                  retries--;
                } else {
                  throw e_1;
                }
                return [3, 7];
              case 7:
                return [3, 1];
              case 8:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      var region = config.identityPoolId.split(":")[0];
      _this.stsClient = new StsClient({
        fetchRequestHandler: new FetchHttpHandler(),
        region
      });
      return _this;
    }
    return BasicAuthentication2;
  }(Authentication)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/EnhancedAuthentication.js
var __extends2 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __awaiter6 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator6 = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var EnhancedAuthentication = (
  /** @class */
  function(_super) {
    __extends2(EnhancedAuthentication2, _super);
    function EnhancedAuthentication2(config, applicationId) {
      var _this = _super.call(this, config, applicationId) || this;
      _this.AnonymousCognitoCredentialsProvider = function() {
        return __awaiter6(_this, void 0, void 0, function() {
          var retries, getIdResponse, credentials, e_1;
          return __generator6(this, function(_a) {
            switch (_a.label) {
              case 0:
                retries = 1;
                _a.label = 1;
              case 1:
                if (false) return [3, 7];
                _a.label = 2;
              case 2:
                _a.trys.push([2, 5, , 6]);
                return [4, this.cognitoIdentityClient.getId({
                  IdentityPoolId: this.config.identityPoolId
                })];
              case 3:
                getIdResponse = _a.sent();
                return [4, this.cognitoIdentityClient.getCredentialsForIdentity(getIdResponse.IdentityId)];
              case 4:
                credentials = _a.sent();
                this.credentials = credentials;
                try {
                  localStorage.setItem(this.credentialStorageKey, JSON.stringify(credentials));
                } catch (e2) {
                }
                return [2, credentials];
              case 5:
                e_1 = _a.sent();
                if (retries) {
                  retries--;
                } else {
                  throw e_1;
                }
                return [3, 6];
              case 6:
                return [3, 1];
              case 7:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      return _this;
    }
    return EnhancedAuthentication2;
  }(Authentication)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/utils/constant.js
var RUM_AMZ_PREFIX = "com.amazon.rum";
var RUM_AWS_PREFIX = "com.amazonaws.rum";
var HTTP_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".http_event");
var XRAY_TRACE_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".xray_trace_event");
var LCP_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".largest_contentful_paint_event");
var FID_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".first_input_delay_event");
var CLS_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".cumulative_layout_shift_event");
var INP_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".interaction_to_next_paint_event");
var PERFORMANCE_NAVIGATION_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".performance_navigation_event");
var PERFORMANCE_RESOURCE_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".performance_resource_event");
var DOM_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".dom_event");
var JS_ERROR_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".js_error_event");
var PAGE_VIEW_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".page_view_event");
var SESSION_START_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".session_start_event");
var TIME_TO_INTERACTIVE_EVENT_TYPE = "".concat(RUM_AMZ_PREFIX, ".time_to_interactive_event");

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/InternalPlugin.js
var InternalPlugin = (
  /** @class */
  function() {
    function InternalPlugin2(name) {
      this.enabled = true;
      this.pluginId = InternalPlugin2.generatePluginId(name);
    }
    InternalPlugin2.generatePluginId = function(name) {
      return "".concat(InternalPlugin2.idPrefix, ".").concat(name);
    };
    InternalPlugin2.prototype.load = function(context) {
      var _a;
      this.context = context;
      (_a = this.onload) === null || _a === void 0 ? void 0 : _a.call(this);
    };
    InternalPlugin2.prototype.getPluginId = function() {
      return this.pluginId;
    };
    InternalPlugin2.idPrefix = RUM_AWS_PREFIX;
    return InternalPlugin2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/PluginManager.js
var PluginManager = (
  /** @class */
  function() {
    function PluginManager2(context) {
      this.context = context;
      this.plugins = /* @__PURE__ */ new Map();
    }
    PluginManager2.prototype.addPlugin = function(plugin) {
      var pluginId = plugin.getPluginId();
      if (this.hasPlugin(pluginId)) {
        throw new Error('Plugin "'.concat(pluginId, '" already defined in the PluginManager'));
      }
      this.plugins.set(pluginId, plugin);
      plugin.load(this.context);
    };
    PluginManager2.prototype.updatePlugin = function(pluginId, updateWith) {
      var _a;
      var plugin = this.getPlugin(pluginId);
      (_a = plugin === null || plugin === void 0 ? void 0 : plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, updateWith);
    };
    PluginManager2.prototype.enable = function() {
      this.plugins.forEach(function(p3) {
        return p3.enable();
      });
    };
    PluginManager2.prototype.disable = function() {
      this.plugins.forEach(function(p3) {
        return p3.disable();
      });
    };
    PluginManager2.prototype.hasPlugin = function(pluginId) {
      return Boolean(this.getPlugin(pluginId));
    };
    PluginManager2.prototype.record = function(pluginId, data) {
      var plugin = this.getPlugin(pluginId);
      if ((plugin === null || plugin === void 0 ? void 0 : plugin.record) instanceof Function) {
        plugin.record(data);
      } else {
        throw new Error("AWS RUM Client record: Invalid plugin ID");
      }
    };
    PluginManager2.prototype.getPlugin = function(id) {
      var _a;
      return (_a = this.plugins.get(id)) !== null && _a !== void 0 ? _a : this.plugins.get(InternalPlugin.generatePluginId(id));
    };
    return PluginManager2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/DomEventPlugin.js
var __extends3 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __assign3 = function() {
  __assign3 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign3.apply(this, arguments);
};
var DOM_EVENT_PLUGIN_ID = "dom-event";
var defaultConfig = {
  interactionId: function() {
    return "";
  },
  enableMutationObserver: false,
  events: []
};
var DomEventPlugin = (
  /** @class */
  function(_super) {
    __extends3(DomEventPlugin2, _super);
    function DomEventPlugin2(config) {
      var _this = _super.call(this, DOM_EVENT_PLUGIN_ID) || this;
      _this.enabled = false;
      _this.eventListenerMap = /* @__PURE__ */ new Map();
      _this.config = __assign3(__assign3({}, defaultConfig), config);
      return _this;
    }
    DomEventPlugin2.getElementInfo = function(event) {
      var elementInfo = { name: "UNKNOWN" };
      if (event.target instanceof Node) {
        elementInfo.name = event.target.nodeName;
      }
      if (event.target instanceof Element && event.target.id) {
        elementInfo.id = event.target.id;
      }
      return elementInfo;
    };
    DomEventPlugin2.prototype.enable = function() {
      var _this = this;
      if (document.readyState !== "complete") {
        window.addEventListener("load", function() {
          return _this.enable();
        });
        return;
      }
      if (this.enabled) {
        return;
      }
      this.addListeners();
      if (this.config.enableMutationObserver) {
        this.observeDOMMutation();
      }
      this.enabled = true;
    };
    DomEventPlugin2.prototype.disable = function() {
      if (!this.enabled) {
        return;
      }
      this.removeListeners();
      if (this.observer) {
        this.observer.disconnect();
      }
      this.enabled = false;
    };
    DomEventPlugin2.prototype.update = function(events) {
      var _this = this;
      events.forEach(function(domEvent) {
        _this.addEventHandler(domEvent);
        _this.config.events.push(domEvent);
      });
    };
    DomEventPlugin2.prototype.onload = function() {
      this.enable();
    };
    DomEventPlugin2.prototype.removeListeners = function() {
      var _this = this;
      this.config.events.forEach(function(domEvent) {
        return _this.removeEventHandler(domEvent);
      });
    };
    DomEventPlugin2.prototype.addListeners = function() {
      var _this = this;
      this.config.events.forEach(function(domEvent) {
        return _this.addEventHandler(domEvent);
      });
    };
    DomEventPlugin2.prototype.getEventListener = function(cssLocator) {
      var _this = this;
      return function(event) {
        var _a;
        var elementInfo = DomEventPlugin2.getElementInfo(event);
        var interactionId = _this.config.interactionId(event);
        var eventData = __assign3(__assign3(__assign3({ version: "1.1.0", event: event.type, element: elementInfo.name }, elementInfo.id ? { elementId: elementInfo.id } : {}), interactionId ? { interactionId } : {}), cssLocator ? { cssLocator } : {});
        if ((_a = _this.context) === null || _a === void 0 ? void 0 : _a.record) {
          _this.context.record(DOM_EVENT_TYPE, eventData);
        }
      };
    };
    DomEventPlugin2.prototype.addEventHandler = function(domEvent) {
      var eventType = domEvent.event;
      var eventListener = this.getEventListener(domEvent.cssLocator);
      var identifiedElementList = [];
      var elementEventListenerList = this.eventListenerMap.has(domEvent) ? this.eventListenerMap.get(domEvent) : [];
      if (domEvent.cssLocator) {
        var cssLocatedElements = document.querySelectorAll(domEvent.cssLocator);
        cssLocatedElements.forEach(function(element) {
          identifiedElementList.push(element);
        });
      } else if (domEvent.elementId) {
        var identifiedElement = document.getElementById(domEvent.elementId);
        if (identifiedElement) {
          identifiedElementList.push(identifiedElement);
        }
      } else if (domEvent.element) {
        identifiedElementList.push(domEvent.element);
      }
      identifiedElementList.forEach(function(element) {
        element.addEventListener(eventType, eventListener);
        elementEventListenerList.push({ element, eventListener });
      });
      this.eventListenerMap.set(domEvent, elementEventListenerList);
    };
    DomEventPlugin2.prototype.removeEventHandler = function(domEvent) {
      var elementEventListenerList = this.eventListenerMap.get(domEvent);
      if (elementEventListenerList) {
        elementEventListenerList.forEach(function(elementEventListener) {
          var element = elementEventListener.element;
          var eventListener = elementEventListener.eventListener;
          element.removeEventListener(domEvent.event, eventListener);
        });
        this.eventListenerMap.delete(domEvent);
      }
    };
    DomEventPlugin2.prototype.observeDOMMutation = function() {
      var _this = this;
      this.observer = new MutationObserver(function() {
        _this.removeListeners();
        _this.addListeners();
      });
      this.observer.observe(document, { childList: true, subtree: true });
    };
    return DomEventPlugin2;
  }(InternalPlugin)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/utils/js-error-utils.js
var isObject = function(error) {
  var type = typeof error;
  return (type === "object" || type === "function") && !!error;
};
var buildBaseJsErrorEvent = function(errorEvent) {
  var rumEvent = {
    version: "1.0.0",
    type: "undefined",
    message: "undefined"
  };
  if (errorEvent.type !== void 0) {
    rumEvent.type = errorEvent.type;
  }
  if (errorEvent.message !== void 0) {
    rumEvent.message = errorEvent.message;
  }
  if (errorEvent.filename !== void 0) {
    rumEvent.filename = errorEvent.filename;
  }
  if (errorEvent.lineno !== void 0) {
    rumEvent.lineno = errorEvent.lineno;
  }
  if (errorEvent.colno !== void 0) {
    rumEvent.colno = errorEvent.colno;
  }
  return rumEvent;
};
var appendErrorPrimitiveDetails = function(rumEvent, error) {
  if (rumEvent.type !== "unhandledrejection") {
    rumEvent.type = error.toString();
  }
  rumEvent.message = error.toString();
};
var appendErrorObjectDetails = function(rumEvent, error, stackTraceLength) {
  if (error.name) {
    rumEvent.type = error.name;
  }
  if (error.message) {
    rumEvent.message = error.message;
  }
  if (error.fileName) {
    rumEvent.filename = error.fileName;
  }
  if (error.lineNumber) {
    rumEvent.lineno = error.lineNumber;
  }
  if (error.columnNumber) {
    rumEvent.colno = error.columnNumber;
  }
  if (stackTraceLength && error.stack) {
    rumEvent.stack = error.stack.length > stackTraceLength ? error.stack.substring(0, stackTraceLength) + "..." : error.stack;
  }
};
var isErrorPrimitive = function(error) {
  return error !== Object(error) && error !== void 0 && error !== null;
};
var errorEventToJsErrorEvent = function(errorEvent, stackTraceLength) {
  var rumEvent = buildBaseJsErrorEvent(errorEvent);
  var error = errorEvent.error;
  if (isObject(error)) {
    appendErrorObjectDetails(rumEvent, error, stackTraceLength);
  } else if (isErrorPrimitive(error)) {
    appendErrorPrimitiveDetails(rumEvent, error);
  }
  return rumEvent;
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/JsErrorPlugin.js
var __extends4 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __assign4 = function() {
  __assign4 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign4.apply(this, arguments);
};
var JS_ERROR_EVENT_PLUGIN_ID = "js-error";
var defaultConfig2 = {
  stackTraceLength: 1e3,
  ignore: function() {
    return false;
  }
};
var JsErrorPlugin = (
  /** @class */
  function(_super) {
    __extends4(JsErrorPlugin2, _super);
    function JsErrorPlugin2(config) {
      var _this = _super.call(this, JS_ERROR_EVENT_PLUGIN_ID) || this;
      _this.eventHandler = function(errorEvent) {
        if (!_this.config.ignore(errorEvent)) {
          _this.recordJsErrorEvent(errorEvent);
        }
      };
      _this.promiseRejectEventHandler = function(event) {
        if (!_this.config.ignore(event)) {
          _this.recordJsErrorEvent({
            type: event.type,
            error: event.reason
          });
        }
      };
      _this.config = __assign4(__assign4({}, defaultConfig2), config);
      return _this;
    }
    JsErrorPlugin2.prototype.enable = function() {
      if (this.enabled) {
        return;
      }
      this.addEventHandler();
      this.enabled = true;
    };
    JsErrorPlugin2.prototype.disable = function() {
      if (!this.enabled) {
        return;
      }
      this.removeEventHandler();
      this.enabled = false;
    };
    JsErrorPlugin2.prototype.record = function(error) {
      if (error instanceof ErrorEvent) {
        this.recordJsErrorEvent(error);
      } else {
        this.recordJsErrorEvent({ type: "error", error });
      }
    };
    JsErrorPlugin2.prototype.onload = function() {
      this.addEventHandler();
    };
    JsErrorPlugin2.prototype.recordJsErrorEvent = function(error) {
      var _a;
      (_a = this.context) === null || _a === void 0 ? void 0 : _a.record(JS_ERROR_EVENT_TYPE, errorEventToJsErrorEvent(error, this.config.stackTraceLength));
    };
    JsErrorPlugin2.prototype.addEventHandler = function() {
      window.addEventListener("error", this.eventHandler);
      window.addEventListener("unhandledrejection", this.promiseRejectEventHandler);
    };
    JsErrorPlugin2.prototype.removeEventHandler = function() {
      window.removeEventListener("error", this.eventHandler);
      window.removeEventListener("unhandledrejection", this.promiseRejectEventHandler);
    };
    return JsErrorPlugin2;
  }(InternalPlugin)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/utils/cookies-utils.js
var storeCookie = function(name, value, attributes, ttl, expires) {
  var cookie = name + "=";
  cookie += value || "";
  if (expires !== void 0) {
    cookie += "; Expires=".concat(expires.toUTCString());
  } else if (ttl !== void 0) {
    cookie += "; Expires=".concat(getExpiryDate(ttl).toUTCString());
  }
  cookie += "; Domain=".concat(attributes.domain);
  cookie += "; Path=".concat(attributes.path);
  cookie += "; SameSite=".concat(attributes.sameSite);
  cookie += attributes.secure ? "; Secure" : "";
  document.cookie = cookie;
};
var getExpiryDate = function(ttl) {
  return new Date((/* @__PURE__ */ new Date()).getTime() + ttl * 1e3);
};
var getCookie = function(name) {
  var cookies = document.cookie.split("; ");
  for (var _i = 0, cookies_1 = cookies; _i < cookies_1.length; _i++) {
    var cookie = cookies_1[_i];
    var split = cookie.split("=");
    if (split[0] === name) {
      return split[1];
    }
  }
  return "";
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/sessions/SessionManager.js
var import_ua_parser_js = __toESM(require_ua_parser());
var __assign5 = function() {
  __assign5 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign5.apply(this, arguments);
};
var NIL_UUID = "00000000-0000-0000-0000-000000000000";
var UNKNOWN = "unknown";
var DESKTOP_DEVICE_TYPE = "desktop";
var WEB_PLATFORM_TYPE = "web";
var SessionManager = (
  /** @class */
  function() {
    function SessionManager2(appMonitorDetails, config, recordEvent, pageManager) {
      this.appMonitorDetails = appMonitorDetails;
      this.config = config;
      this.recordEvent = recordEvent;
      this.pageManager = pageManager;
      this.sessionCookieName = this.config.cookieAttributes.unique ? "".concat(SESSION_COOKIE_NAME, "_").concat(this.appMonitorDetails.id) : SESSION_COOKIE_NAME;
      this.session = {
        sessionId: NIL_UUID,
        record: this.sample(),
        eventCount: 0
      };
      this.initializeUser();
      this.collectAttributes();
      this.addSessionAttributes(this.config.sessionAttributes);
      this.getSessionFromCookie();
    }
    SessionManager2.prototype.isSampled = function() {
      return this.session.record;
    };
    SessionManager2.prototype.getSession = function() {
      if (this.session.sessionId === NIL_UUID) {
        this.createSession();
      } else if (this.session.sessionId !== NIL_UUID && /* @__PURE__ */ new Date() >= this.sessionExpiry) {
        this.createSession();
      }
      return this.session;
    };
    SessionManager2.prototype.getAttributes = function() {
      return this.attributes;
    };
    SessionManager2.prototype.addSessionAttributes = function(sessionAttributes) {
      this.attributes = __assign5(__assign5({}, this.attributes), sessionAttributes);
    };
    SessionManager2.prototype.getUserId = function() {
      if (this.useCookies()) {
        return this.userId;
      }
      return NIL_UUID;
    };
    SessionManager2.prototype.incrementSessionEventCount = function() {
      this.session.eventCount++;
      this.renewSession();
    };
    SessionManager2.prototype.isLimitExceeded = function() {
      return this.session.eventCount >= this.config.sessionEventLimit && this.config.sessionEventLimit > 0;
    };
    SessionManager2.prototype.canRecord = function() {
      return this.session.record && !this.isLimitExceeded();
    };
    SessionManager2.prototype.initializeUser = function() {
      var userId = "";
      this.userExpiry = /* @__PURE__ */ new Date();
      this.userExpiry.setDate(this.userExpiry.getDate() + this.config.userIdRetentionDays);
      if (this.config.userIdRetentionDays <= 0) {
        this.userId = "00000000-0000-0000-0000-000000000000";
      } else if (this.useCookies()) {
        userId = this.getUserIdCookie();
        this.userId = userId ? userId : v4_default();
        this.createOrRenewUserCookie(userId, this.userExpiry);
      } else {
        this.userId = v4_default();
      }
    };
    SessionManager2.prototype.createOrRenewSessionCookie = function(session, expires) {
      if (btoa) {
        storeCookie(this.sessionCookieName, btoa(JSON.stringify(session)), this.config.cookieAttributes, void 0, expires);
      }
    };
    SessionManager2.prototype.createOrRenewUserCookie = function(userId, expires) {
      storeCookie(USER_COOKIE_NAME, userId, this.config.cookieAttributes, void 0, expires);
    };
    SessionManager2.prototype.getUserIdCookie = function() {
      return getCookie(USER_COOKIE_NAME);
    };
    SessionManager2.prototype.getSessionFromCookie = function() {
      if (this.useCookies()) {
        var cookie = getCookie(this.sessionCookieName);
        if (cookie && atob) {
          try {
            this.session = JSON.parse(atob(cookie));
            this.pageManager.resumeSession(this.session.page);
          } catch (e2) {
          }
        }
      }
    };
    SessionManager2.prototype.storeSessionAsCookie = function() {
      if (this.useCookies() && this.config.userIdRetentionDays > 0) {
        this.createOrRenewUserCookie(this.userId, this.userExpiry);
      }
      if (this.useCookies()) {
        this.createOrRenewSessionCookie(this.session, this.sessionExpiry);
      }
    };
    SessionManager2.prototype.createSession = function() {
      this.session = {
        sessionId: v4_default(),
        record: this.session.sessionId === NIL_UUID ? this.session.record : this.sample(),
        eventCount: 0
      };
      this.session.page = this.pageManager.getPage();
      this.sessionExpiry = new Date((/* @__PURE__ */ new Date()).getTime() + this.config.sessionLengthSeconds * 1e3);
      this.storeSessionAsCookie();
      this.recordEvent(SESSION_START_EVENT_TYPE, {
        version: "1.0.0"
      });
    };
    SessionManager2.prototype.renewSession = function() {
      this.sessionExpiry = new Date((/* @__PURE__ */ new Date()).getTime() + this.config.sessionLengthSeconds * 1e3);
      this.session.page = this.pageManager.getPage();
      this.storeSessionAsCookie();
    };
    SessionManager2.prototype.collectAttributes = function() {
      var ua = new import_ua_parser_js.UAParser(navigator.userAgent).getResult();
      this.attributes = {
        browserLanguage: navigator.language,
        browserName: ua.browser.name ? ua.browser.name : UNKNOWN,
        browserVersion: ua.browser.version ? ua.browser.version : UNKNOWN,
        osName: ua.os.name ? ua.os.name : UNKNOWN,
        osVersion: ua.os.version ? ua.os.version : UNKNOWN,
        // Possible device types include {console, mobile, tablet, smarttv, wearable, embedded}. If the device
        // type is undefined, there was no information indicating the device is anything other than a desktop,
        // so we assume the device is a desktop.
        deviceType: ua.device.type ? ua.device.type : DESKTOP_DEVICE_TYPE,
        // This client is used exclusively in web applications.
        platformType: WEB_PLATFORM_TYPE,
        domain: window.location.hostname,
        "aws:releaseId": this.config.releaseId
      };
    };
    SessionManager2.prototype.useCookies = function() {
      return navigator.cookieEnabled && this.config.allowCookies;
    };
    SessionManager2.prototype.sample = function() {
      return Math.random() < this.config.sessionSampleRate;
    };
    return SessionManager2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/MonkeyPatched.js
var shimmer = __toESM(require_shimmer());
var __extends5 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var MonkeyPatched = (
  /** @class */
  function(_super) {
    __extends5(MonkeyPatched2, _super);
    function MonkeyPatched2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.enable = _this.patch.bind(_this, true);
      _this.disable = _this.patch.bind(_this, false);
      _this.enabled = false;
      return _this;
    }
    MonkeyPatched2.prototype.patchAll = function() {
      var wrap2 = shimmer.wrap.bind(shimmer);
      for (var _i = 0, _a = this.patches; _i < _a.length; _i++) {
        var patch = _a[_i];
        wrap2(patch.nodule, patch.name, patch.wrapper());
      }
    };
    MonkeyPatched2.prototype.unpatchAll = function() {
      var unwrap2 = shimmer.unwrap.bind(shimmer);
      for (var _i = 0, _a = this.patches; _i < _a.length; _i++) {
        var patch = _a[_i];
        unwrap2(patch.nodule, patch.name);
      }
    };
    MonkeyPatched2.prototype.patch = function(shouldPatch) {
      if (shouldPatch === void 0) {
        shouldPatch = true;
      }
      if (this.enabled !== shouldPatch) {
        this.enabled = shouldPatch;
        if (shouldPatch) {
          this.patchAll();
        } else {
          this.unpatchAll();
        }
      }
    };
    return MonkeyPatched2;
  }(InternalPlugin)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/sessions/VirtualPageLoadTimer.js
var __extends6 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var VirtualPageLoadTimer = (
  /** @class */
  function(_super) {
    __extends6(VirtualPageLoadTimer2, _super);
    function VirtualPageLoadTimer2(pageManager, config, record) {
      var _this = _super.call(this, "virtual-page-load-timer") || this;
      _this.sendWrapper = function() {
        var self2 = _this;
        return function(original) {
          return function() {
            self2.recordXhr(this);
            this.addEventListener("loadend", self2.endTracking);
            return original.apply(this, arguments);
          };
        };
      };
      _this.endTracking = function(e2) {
        var currTime = Date.now();
        var xhr = e2.target;
        xhr.removeEventListener("loadend", _this.endTracking);
        _this.removeXhr(xhr, currTime);
      };
      _this.fetch = function(original, thisArg, argsArray) {
        return original.apply(thisArg, argsArray).catch(function(error) {
          throw error;
        }).finally(_this.decrementFetchCounter);
      };
      _this.fetchWrapper = function() {
        var self2 = _this;
        return function(original) {
          return function(input, init) {
            self2.fetchCounter += 1;
            return self2.fetch(original, this, arguments);
          };
        };
      };
      _this.decrementFetchCounter = function() {
        if (!_this.isPageLoaded) {
          _this.latestEndTime = Date.now();
        }
        _this.fetchCounter -= 1;
      };
      _this.checkLoadStatus = function() {
        if (_this.ongoingRequests.size === 0 && _this.fetchCounter === 0) {
          clearInterval(_this.periodicCheckerId);
          clearTimeout(_this.timeoutCheckerId);
          _this.domMutationObserver.disconnect();
          _this.recordRouteChangeNavigationEvent(_this.pageManager.getPage());
          _this.periodicCheckerId = void 0;
          _this.timeoutCheckerId = void 0;
          _this.isPageLoaded = true;
        }
      };
      _this.declareTimeout = function() {
        clearInterval(_this.periodicCheckerId);
        _this.periodicCheckerId = void 0;
        _this.timeoutCheckerId = void 0;
        _this.domMutationObserver.disconnect();
        _this.isPageLoaded = true;
      };
      _this.resetInterval = function() {
        _this.latestEndTime = Date.now();
        clearInterval(_this.periodicCheckerId);
        _this.periodicCheckerId = setInterval(_this.checkLoadStatus, _this.config.routeChangeComplete);
      };
      _this.moveItemsFromBuffer = function(item) {
        _this.ongoingRequests.add(item);
      };
      _this.updateLatestInteractionTime = function(e2) {
        _this.latestInteractionTime = Date.now();
      };
      _this.periodicCheckerId = void 0;
      _this.timeoutCheckerId = void 0;
      _this.domMutationObserver = new MutationObserver(_this.resetInterval);
      _this.ongoingRequests = /* @__PURE__ */ new Set();
      _this.requestBuffer = /* @__PURE__ */ new Set();
      _this.fetchCounter = 0;
      _this.isPageLoaded = true;
      _this.latestEndTime = 0;
      _this.latestInteractionTime = 0;
      _this.config = config;
      _this.pageManager = pageManager;
      _this.record = record;
      _this.enable();
      document.addEventListener("mousedown", _this.updateLatestInteractionTime);
      document.addEventListener("keydown", _this.updateLatestInteractionTime);
      return _this;
    }
    Object.defineProperty(VirtualPageLoadTimer2.prototype, "patches", {
      get: function() {
        return [
          {
            nodule: XMLHttpRequest.prototype,
            name: "send",
            wrapper: this.sendWrapper
          },
          {
            nodule: window,
            name: "fetch",
            wrapper: this.fetchWrapper
          }
        ];
      },
      enumerable: false,
      configurable: true
    });
    VirtualPageLoadTimer2.prototype.startTiming = function() {
      this.latestEndTime = Date.now();
      if (this.periodicCheckerId) {
        clearInterval(this.periodicCheckerId);
      }
      if (this.timeoutCheckerId) {
        clearTimeout(this.timeoutCheckerId);
      }
      this.domMutationObserver.disconnect();
      this.periodicCheckerId = setInterval(this.checkLoadStatus, this.config.routeChangeComplete);
      this.timeoutCheckerId = setTimeout(this.declareTimeout, this.config.routeChangeTimeout);
      this.domMutationObserver.observe(document, {
        subtree: true,
        childList: true,
        attributes: false,
        characterData: false
      });
      this.isPageLoaded = false;
      this.requestBuffer.forEach(this.moveItemsFromBuffer);
      this.requestBuffer.clear();
    };
    VirtualPageLoadTimer2.prototype.recordXhr = function(item) {
      var page = this.pageManager.getPage();
      if (page && this.isPageLoaded === false) {
        this.ongoingRequests.add(item);
      } else {
        this.requestBuffer.add(item);
      }
    };
    VirtualPageLoadTimer2.prototype.removeXhr = function(item, currTime) {
      var page = this.pageManager.getPage();
      if (page && this.ongoingRequests.has(item)) {
        this.ongoingRequests.delete(item);
        this.latestEndTime = currTime;
      } else if (this.requestBuffer.has(item)) {
        this.requestBuffer.delete(item);
      }
    };
    VirtualPageLoadTimer2.prototype.recordRouteChangeNavigationEvent = function(page) {
      var virtualPageNavigationEvent = {
        version: "1.0.0",
        initiatorType: "route_change",
        navigationType: "navigate",
        startTime: page.start,
        duration: this.latestEndTime - page.start
      };
      if (this.record) {
        this.record(PERFORMANCE_NAVIGATION_EVENT_TYPE, virtualPageNavigationEvent);
      }
    };
    return VirtualPageLoadTimer2;
  }(MonkeyPatched)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/sessions/PageManager.js
var __assign6 = function() {
  __assign6 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign6.apply(this, arguments);
};
var PageManager = (
  /** @class */
  function() {
    function PageManager2(config, record) {
      this.TIMEOUT = 1e3;
      this.config = config;
      this.record = record;
      this.page = void 0;
      this.resumed = false;
      this.recordInteraction = false;
      this.virtualPageLoadTimer = new VirtualPageLoadTimer(this, config, record);
    }
    PageManager2.prototype.getPage = function() {
      return this.page;
    };
    PageManager2.prototype.getAttributes = function() {
      return this.attributes;
    };
    PageManager2.prototype.resumeSession = function(page) {
      this.recordInteraction = true;
      if (page) {
        this.page = page;
        this.resumed = true;
      }
    };
    PageManager2.prototype.recordPageView = function(payload) {
      var pageId;
      if (typeof payload === "string") {
        pageId = payload;
      } else {
        pageId = payload.pageId;
      }
      if (this.useCookies()) {
        this.recordInteraction = true;
      }
      if (!this.page) {
        this.createLandingPage(pageId);
      } else if (this.page.pageId !== pageId) {
        this.createNextPage(this.page, pageId);
      } else if (this.resumed) {
        this.collectAttributes(this.page, typeof payload === "object" ? payload : void 0);
        return;
      } else {
        return;
      }
      this.collectAttributes(this.page, typeof payload === "object" ? payload : void 0);
      this.recordPageViewEvent(this.page);
    };
    PageManager2.prototype.createNextPage = function(currentPage, pageId) {
      var startTime = Date.now();
      var interactionTime = this.virtualPageLoadTimer.latestInteractionTime;
      if (!this.resumed && startTime - interactionTime <= this.TIMEOUT) {
        startTime = interactionTime;
        this.virtualPageLoadTimer.startTiming();
      }
      this.timeOnParentPage = startTime - currentPage.start;
      this.resumed = false;
      this.page = {
        pageId,
        parentPageId: currentPage.pageId,
        interaction: currentPage.interaction + 1,
        referrer: document.referrer,
        referrerDomain: this.getDomainFromReferrer(),
        start: startTime
      };
    };
    PageManager2.prototype.createLandingPage = function(pageId) {
      this.page = {
        pageId,
        interaction: 0,
        referrer: document.referrer,
        referrerDomain: this.getDomainFromReferrer(),
        start: Date.now()
      };
    };
    PageManager2.prototype.collectAttributes = function(page, customPageAttributes) {
      var _a;
      this.attributes = {
        title: ((_a = customPageAttributes === null || customPageAttributes === void 0 ? void 0 : customPageAttributes.pageAttributes) === null || _a === void 0 ? void 0 : _a.title) ? customPageAttributes.pageAttributes.title : document.title,
        pageId: page.pageId
      };
      if (this.recordInteraction) {
        this.attributes.interaction = page.interaction;
        if (page.parentPageId !== void 0) {
          this.attributes.parentPageId = page.parentPageId;
        }
      }
      if (customPageAttributes === null || customPageAttributes === void 0 ? void 0 : customPageAttributes.pageTags) {
        this.attributes["pageTags"] = customPageAttributes["pageTags"];
      }
      if (customPageAttributes === null || customPageAttributes === void 0 ? void 0 : customPageAttributes.pageAttributes) {
        this.attributes = __assign6(__assign6({}, customPageAttributes.pageAttributes), this.attributes);
      }
    };
    PageManager2.prototype.createPageViewEvent = function(page) {
      var pageViewEvent = {
        version: "1.0.0",
        pageId: page.pageId
      };
      if (this.recordInteraction) {
        pageViewEvent.interaction = page.interaction;
        pageViewEvent.pageInteractionId = page.pageId + "-" + page.interaction;
        if (page.parentPageId !== void 0) {
          pageViewEvent.parentPageInteractionId = page.parentPageId + "-" + (page.interaction - 1);
          pageViewEvent.timeOnParentPage = this.timeOnParentPage;
        }
        pageViewEvent.referrer = document.referrer;
        pageViewEvent.referrerDomain = this.getDomainFromReferrer();
      }
      return pageViewEvent;
    };
    PageManager2.prototype.recordPageViewEvent = function(page) {
      this.record(PAGE_VIEW_EVENT_TYPE, this.createPageViewEvent(page));
    };
    PageManager2.prototype.useCookies = function() {
      return navigator.cookieEnabled && this.config.allowCookies;
    };
    PageManager2.prototype.getDomainFromReferrer = function() {
      try {
        return new URL(document.referrer).hostname;
      } catch (e2) {
        return document.referrer === "localhost" ? document.referrer : "";
      }
    };
    return PageManager2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/event-bus/EventBus.js
var Topic;
(function(Topic2) {
  Topic2["EVENT"] = "event";
})(Topic || (Topic = {}));
var EventBus = (
  /** @class */
  function() {
    function EventBus2() {
      this.subscribers = /* @__PURE__ */ new Map();
    }
    EventBus2.prototype.subscribe = function(topic, subscriber) {
      var _a;
      var list = (_a = this.subscribers.get(topic)) !== null && _a !== void 0 ? _a : [];
      if (!list.length) {
        this.subscribers.set(topic, list);
      }
      list.push(subscriber);
    };
    EventBus2.prototype.unsubscribe = function(topic, subscriber) {
      var list = this.subscribers.get(topic);
      if (list) {
        for (var i2 = 0; i2 < list.length; i2++) {
          if (list[i2] === subscriber) {
            list.splice(i2, 1);
            return true;
          }
        }
      }
      return false;
    };
    EventBus2.prototype.dispatch = function(topic, message) {
      var list = this.subscribers.get(topic);
      if (list) {
        for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
          var subscriber = list_1[_i];
          subscriber(message);
        }
      }
    };
    return EventBus2;
  }()
);
var EventBus_default = EventBus;

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/event-cache/EventCache.js
var __assign7 = function() {
  __assign7 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign7.apply(this, arguments);
};
var webClientVersion = "1.25.0";
var EventCache = (
  /** @class */
  function() {
    function EventCache2(applicationDetails, config, eventBus) {
      if (eventBus === void 0) {
        eventBus = new EventBus_default();
      }
      var _this = this;
      this.eventBus = eventBus;
      this.events = [];
      this.candidates = /* @__PURE__ */ new Map();
      this.recordPageView = function(payload) {
        if (_this.isCurrentUrlAllowed()) {
          _this.pageManager.recordPageView(payload);
        }
      };
      this.recordEvent = function(type, eventData) {
        if (!_this.enabled) {
          return;
        }
        if (_this.isCurrentUrlAllowed()) {
          if (type !== SESSION_START_EVENT_TYPE) {
            _this.sessionManager.getSession();
          }
          if (_this.sessionManager.canRecord()) {
            _this.sessionManager.incrementSessionEventCount();
            _this.addRecordToCache(type, eventData);
          }
        }
      };
      this.recordCandidate = function(eventType, eventData) {
        var session = _this.sessionManager.getSession();
        if (!_this.enabled || !_this.isCurrentUrlAllowed() || !session.record) {
          return;
        }
        var event = _this.createEvent(eventType, eventData)[0];
        if (_this.candidates.has(eventType)) {
          _this.candidates.set(eventType, event);
          return;
        }
        if (_this.candidates.size < _this.config.candidatesCacheSize && !_this.sessionManager.isLimitExceeded()) {
          _this.candidates.set(eventType, event);
          _this.sessionManager.incrementSessionEventCount();
        }
      };
      this.getSession = function() {
        if (_this.isCurrentUrlAllowed()) {
          return _this.sessionManager.getSession();
        }
        return void 0;
      };
      this.addRecordToCache = function(type, eventData) {
        if (!_this.enabled) {
          return;
        }
        if (_this.events.length === _this.config.eventCacheSize) {
          return;
        }
        var _a = _this.createEvent(type, eventData), event = _a[0], parsedEvent = _a[1];
        _this.eventBus.dispatch(Topic.EVENT, parsedEvent);
        _this.events.push(event);
      };
      this.createEvent = function(type, details) {
        var metadata = __assign7(__assign7(__assign7({}, _this.sessionManager.getAttributes()), _this.pageManager.getAttributes()), { version: "1.0.0", "aws:client": _this.installationMethod, "aws:clientVersion": webClientVersion });
        var partialEvent = {
          id: v4_default(),
          timestamp: /* @__PURE__ */ new Date(),
          type
        };
        return [
          __assign7(__assign7({}, partialEvent), { details: JSON.stringify(details), metadata: JSON.stringify(metadata) }),
          __assign7(__assign7({}, partialEvent), { details, metadata })
        ];
      };
      this.appMonitorDetails = applicationDetails;
      this.config = config;
      this.enabled = true;
      this.pageManager = new PageManager(config, this.recordEvent);
      this.sessionManager = new SessionManager(applicationDetails, config, this.recordEvent, this.pageManager);
      this.installationMethod = config.client;
    }
    EventCache2.prototype.enable = function() {
      this.enabled = true;
    };
    EventCache2.prototype.disable = function() {
      this.enabled = false;
    };
    EventCache2.prototype.isSessionSampled = function() {
      return this.sessionManager.isSampled();
    };
    EventCache2.prototype.hasEvents = function() {
      return this.events.length !== 0;
    };
    EventCache2.prototype.hasCandidates = function() {
      return this.candidates.size !== 0;
    };
    EventCache2.prototype.getEventBatch = function(flushCandidates) {
      if (flushCandidates === void 0) {
        flushCandidates = false;
      }
      var batch = [];
      if (flushCandidates && this.hasCandidates()) {
        if (this.candidates.size <= this.config.batchLimit) {
          batch = Array.from(this.candidates.values());
          this.candidates.clear();
        } else {
          var i2 = 0;
          for (var _i = 0, _a = Array.from(this.candidates.keys()); _i < _a.length; _i++) {
            var key = _a[_i];
            if (i2++ >= this.config.batchLimit) {
              break;
            }
            var event_1 = this.candidates.get(key);
            if (event_1) {
              batch.push(event_1);
              this.candidates.delete(key);
            }
          }
        }
      }
      if (this.events.length) {
        if (this.events.length <= this.config.batchLimit - batch.length) {
          batch.push.apply(batch, this.events);
          this.events = [];
        } else {
          batch.push.apply(batch, this.events.splice(0, this.config.batchLimit - batch.length));
        }
      }
      return batch;
    };
    EventCache2.prototype.getAppMonitorDetails = function() {
      return this.appMonitorDetails;
    };
    EventCache2.prototype.getUserDetails = function() {
      return {
        userId: this.sessionManager.getUserId(),
        sessionId: this.sessionManager.getSession().sessionId
      };
    };
    EventCache2.prototype.addSessionAttributes = function(sessionAttributes) {
      this.sessionManager.addSessionAttributes(sessionAttributes);
    };
    EventCache2.prototype.isCurrentUrlAllowed = function() {
      var location = document.location.toString();
      var exclude = this.config.pagesToExclude.some(function(re) {
        return re.test(location);
      });
      var include = this.config.pagesToInclude.some(function(re) {
        return re.test(location);
      });
      return include && !exclude;
    };
    return EventCache2;
  }()
);

// node_modules/.pnpm/@smithy+util-hex-encoding@3.0.0/node_modules/@smithy/util-hex-encoding/dist-es/index.js
var SHORT_TO_HEX = {};
var HEX_TO_SHORT = {};
for (let i2 = 0; i2 < 256; i2++) {
  let encodedByte = i2.toString(16).toLowerCase();
  if (encodedByte.length === 1) {
    encodedByte = `0${encodedByte}`;
  }
  SHORT_TO_HEX[i2] = encodedByte;
  HEX_TO_SHORT[encodedByte] = i2;
}
function fromHex(encoded) {
  if (encoded.length % 2 !== 0) {
    throw new Error("Hex encoded strings must have an even number length");
  }
  const out = new Uint8Array(encoded.length / 2);
  for (let i2 = 0; i2 < encoded.length; i2 += 2) {
    const encodedByte = encoded.slice(i2, i2 + 2).toLowerCase();
    if (encodedByte in HEX_TO_SHORT) {
      out[i2 / 2] = HEX_TO_SHORT[encodedByte];
    } else {
      throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);
    }
  }
  return out;
}
function toHex(bytes) {
  let out = "";
  for (let i2 = 0; i2 < bytes.byteLength; i2++) {
    out += SHORT_TO_HEX[bytes[i2]];
  }
  return out;
}

// node_modules/.pnpm/@smithy+util-middleware@3.0.11/node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js
var normalizeProvider = (input) => {
  if (typeof input === "function")
    return input;
  const promisified = Promise.resolve(input);
  return () => promisified;
};

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/constants.js
var ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
var CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
var AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
var SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
var EXPIRES_QUERY_PARAM = "X-Amz-Expires";
var SIGNATURE_QUERY_PARAM = "X-Amz-Signature";
var TOKEN_QUERY_PARAM = "X-Amz-Security-Token";
var AUTH_HEADER = "authorization";
var AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();
var DATE_HEADER = "date";
var GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];
var SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();
var SHA256_HEADER = "x-amz-content-sha256";
var TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();
var ALWAYS_UNSIGNABLE_HEADERS = {
  authorization: true,
  "cache-control": true,
  connection: true,
  expect: true,
  from: true,
  "keep-alive": true,
  "max-forwards": true,
  pragma: true,
  referer: true,
  te: true,
  trailer: true,
  "transfer-encoding": true,
  upgrade: true,
  "user-agent": true,
  "x-amzn-trace-id": true
};
var PROXY_HEADER_PATTERN = /^proxy-/;
var SEC_HEADER_PATTERN = /^sec-/;
var ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";
var EVENT_ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256-PAYLOAD";
var UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
var MAX_CACHE_SIZE = 50;
var KEY_TYPE_IDENTIFIER = "aws4_request";
var MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js
var signingKeyCache = {};
var cacheQueue = [];
var createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;
var getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {
  const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);
  const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;
  if (cacheKey in signingKeyCache) {
    return signingKeyCache[cacheKey];
  }
  cacheQueue.push(cacheKey);
  while (cacheQueue.length > MAX_CACHE_SIZE) {
    delete signingKeyCache[cacheQueue.shift()];
  }
  let key = `AWS4${credentials.secretAccessKey}`;
  for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {
    key = await hmac(sha256Constructor, key, signable);
  }
  return signingKeyCache[cacheKey] = key;
};
var hmac = (ctor, secret, data) => {
  const hash = new ctor(secret);
  hash.update(toUint8Array(data));
  return hash.digest();
};

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js
var getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {
  const canonical = {};
  for (const headerName of Object.keys(headers).sort()) {
    if (headers[headerName] == void 0) {
      continue;
    }
    const canonicalHeaderName = headerName.toLowerCase();
    if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || (unsignableHeaders == null ? void 0 : unsignableHeaders.has(canonicalHeaderName)) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {
      if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {
        continue;
      }
    }
    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\s+/g, " ");
  }
  return canonical;
};

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js
var getCanonicalQuery = ({ query = {} }) => {
  const keys = [];
  const serialized = {};
  for (const key of Object.keys(query)) {
    if (key.toLowerCase() === SIGNATURE_HEADER) {
      continue;
    }
    const encodedKey = escapeUri(key);
    keys.push(encodedKey);
    const value = query[key];
    if (typeof value === "string") {
      serialized[encodedKey] = `${encodedKey}=${escapeUri(value)}`;
    } else if (Array.isArray(value)) {
      serialized[encodedKey] = value.slice(0).reduce((encoded, value2) => encoded.concat([`${encodedKey}=${escapeUri(value2)}`]), []).sort().join("&");
    }
  }
  return keys.sort().map((key) => serialized[key]).filter((serialized2) => serialized2).join("&");
};

// node_modules/.pnpm/@smithy+is-array-buffer@3.0.0/node_modules/@smithy/is-array-buffer/dist-es/index.js
var isArrayBuffer = (arg) => typeof ArrayBuffer === "function" && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === "[object ArrayBuffer]";

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js
var getPayloadHash = async ({ headers, body }, hashConstructor) => {
  for (const headerName of Object.keys(headers)) {
    if (headerName.toLowerCase() === SHA256_HEADER) {
      return headers[headerName];
    }
  }
  if (body == void 0) {
    return "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";
  } else if (typeof body === "string" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {
    const hashCtor = new hashConstructor();
    hashCtor.update(toUint8Array(body));
    return toHex(await hashCtor.digest());
  }
  return UNSIGNED_PAYLOAD;
};

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/HeaderFormatter.js
var HeaderFormatter = class {
  format(headers) {
    const chunks = [];
    for (const headerName of Object.keys(headers)) {
      const bytes = fromUtf8(headerName);
      chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
    }
    const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));
    let position = 0;
    for (const chunk of chunks) {
      out.set(chunk, position);
      position += chunk.byteLength;
    }
    return out;
  }
  formatHeaderValue(header) {
    switch (header.type) {
      case "boolean":
        return Uint8Array.from([header.value ? 0 : 1]);
      case "byte":
        return Uint8Array.from([2, header.value]);
      case "short":
        const shortView = new DataView(new ArrayBuffer(3));
        shortView.setUint8(0, 3);
        shortView.setInt16(1, header.value, false);
        return new Uint8Array(shortView.buffer);
      case "integer":
        const intView = new DataView(new ArrayBuffer(5));
        intView.setUint8(0, 4);
        intView.setInt32(1, header.value, false);
        return new Uint8Array(intView.buffer);
      case "long":
        const longBytes = new Uint8Array(9);
        longBytes[0] = 5;
        longBytes.set(header.value.bytes, 1);
        return longBytes;
      case "binary":
        const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
        binView.setUint8(0, 6);
        binView.setUint16(1, header.value.byteLength, false);
        const binBytes = new Uint8Array(binView.buffer);
        binBytes.set(header.value, 3);
        return binBytes;
      case "string":
        const utf8Bytes = fromUtf8(header.value);
        const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
        strView.setUint8(0, 7);
        strView.setUint16(1, utf8Bytes.byteLength, false);
        const strBytes = new Uint8Array(strView.buffer);
        strBytes.set(utf8Bytes, 3);
        return strBytes;
      case "timestamp":
        const tsBytes = new Uint8Array(9);
        tsBytes[0] = 8;
        tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);
        return tsBytes;
      case "uuid":
        if (!UUID_PATTERN.test(header.value)) {
          throw new Error(`Invalid UUID received: ${header.value}`);
        }
        const uuidBytes = new Uint8Array(17);
        uuidBytes[0] = 9;
        uuidBytes.set(fromHex(header.value.replace(/\-/g, "")), 1);
        return uuidBytes;
    }
  }
};
var HEADER_VALUE_TYPE;
(function(HEADER_VALUE_TYPE2) {
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["boolTrue"] = 0] = "boolTrue";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["boolFalse"] = 1] = "boolFalse";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["byte"] = 2] = "byte";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["short"] = 3] = "short";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["integer"] = 4] = "integer";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["long"] = 5] = "long";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["byteArray"] = 6] = "byteArray";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["string"] = 7] = "string";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["timestamp"] = 8] = "timestamp";
  HEADER_VALUE_TYPE2[HEADER_VALUE_TYPE2["uuid"] = 9] = "uuid";
})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));
var UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
var Int64 = class _Int64 {
  constructor(bytes) {
    this.bytes = bytes;
    if (bytes.byteLength !== 8) {
      throw new Error("Int64 buffers must be exactly 8 bytes");
    }
  }
  static fromNumber(number) {
    if (number > 9223372036854776e3 || number < -9223372036854776e3) {
      throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);
    }
    const bytes = new Uint8Array(8);
    for (let i2 = 7, remaining = Math.abs(Math.round(number)); i2 > -1 && remaining > 0; i2--, remaining /= 256) {
      bytes[i2] = remaining;
    }
    if (number < 0) {
      negate(bytes);
    }
    return new _Int64(bytes);
  }
  valueOf() {
    const bytes = this.bytes.slice(0);
    const negative = bytes[0] & 128;
    if (negative) {
      negate(bytes);
    }
    return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);
  }
  toString() {
    return String(this.valueOf());
  }
};
function negate(bytes) {
  for (let i2 = 0; i2 < 8; i2++) {
    bytes[i2] ^= 255;
  }
  for (let i2 = 7; i2 > -1; i2--) {
    bytes[i2]++;
    if (bytes[i2] !== 0)
      break;
  }
}

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/headerUtil.js
var hasHeader = (soughtHeader, headers) => {
  soughtHeader = soughtHeader.toLowerCase();
  for (const headerName of Object.keys(headers)) {
    if (soughtHeader === headerName.toLowerCase()) {
      return true;
    }
  }
  return false;
};

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js
var moveHeadersToQuery = (request, options = {}) => {
  var _a, _b;
  const { headers, query = {} } = HttpRequest.clone(request);
  for (const name of Object.keys(headers)) {
    const lname = name.toLowerCase();
    if (lname.slice(0, 6) === "x-amz-" && !((_a = options.unhoistableHeaders) == null ? void 0 : _a.has(lname)) || ((_b = options.hoistableHeaders) == null ? void 0 : _b.has(lname))) {
      query[name] = headers[name];
      delete headers[name];
    }
  }
  return {
    ...request,
    headers,
    query
  };
};

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/prepareRequest.js
var prepareRequest = (request) => {
  request = HttpRequest.clone(request);
  for (const headerName of Object.keys(request.headers)) {
    if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {
      delete request.headers[headerName];
    }
  }
  return request;
};

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/utilDate.js
var iso8601 = (time) => toDate(time).toISOString().replace(/\.\d{3}Z$/, "Z");
var toDate = (time) => {
  if (typeof time === "number") {
    return new Date(time * 1e3);
  }
  if (typeof time === "string") {
    if (Number(time)) {
      return new Date(Number(time) * 1e3);
    }
    return new Date(time);
  }
  return time;
};

// node_modules/.pnpm/@smithy+signature-v4@4.2.4/node_modules/@smithy/signature-v4/dist-es/SignatureV4.js
var SignatureV4 = class {
  constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true }) {
    this.headerFormatter = new HeaderFormatter();
    this.service = service;
    this.sha256 = sha256;
    this.uriEscapePath = uriEscapePath;
    this.applyChecksum = typeof applyChecksum === "boolean" ? applyChecksum : true;
    this.regionProvider = normalizeProvider(region);
    this.credentialProvider = normalizeProvider(credentials);
  }
  async presign(originalRequest, options = {}) {
    const { signingDate = /* @__PURE__ */ new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService } = options;
    const credentials = await this.credentialProvider();
    this.validateResolvedCredentials(credentials);
    const region = signingRegion ?? await this.regionProvider();
    const { longDate, shortDate } = formatDate(signingDate);
    if (expiresIn > MAX_PRESIGNED_TTL) {
      return Promise.reject("Signature version 4 presigned URLs must have an expiration date less than one week in the future");
    }
    const scope = createScope(shortDate, region, signingService ?? this.service);
    const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });
    if (credentials.sessionToken) {
      request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;
    }
    request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;
    request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;
    request.query[AMZ_DATE_QUERY_PARAM] = longDate;
    request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);
    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);
    request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);
    request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));
    return request;
  }
  async sign(toSign, options) {
    if (typeof toSign === "string") {
      return this.signString(toSign, options);
    } else if (toSign.headers && toSign.payload) {
      return this.signEvent(toSign, options);
    } else if (toSign.message) {
      return this.signMessage(toSign, options);
    } else {
      return this.signRequest(toSign, options);
    }
  }
  async signEvent({ headers, payload }, { signingDate = /* @__PURE__ */ new Date(), priorSignature, signingRegion, signingService }) {
    const region = signingRegion ?? await this.regionProvider();
    const { shortDate, longDate } = formatDate(signingDate);
    const scope = createScope(shortDate, region, signingService ?? this.service);
    const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);
    const hash = new this.sha256();
    hash.update(headers);
    const hashedHeaders = toHex(await hash.digest());
    const stringToSign = [
      EVENT_ALGORITHM_IDENTIFIER,
      longDate,
      scope,
      priorSignature,
      hashedHeaders,
      hashedPayload
    ].join("\n");
    return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });
  }
  async signMessage(signableMessage, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService }) {
    const promise = this.signEvent({
      headers: this.headerFormatter.format(signableMessage.message.headers),
      payload: signableMessage.message.body
    }, {
      signingDate,
      signingRegion,
      signingService,
      priorSignature: signableMessage.priorSignature
    });
    return promise.then((signature) => {
      return { message: signableMessage.message, signature };
    });
  }
  async signString(stringToSign, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService } = {}) {
    const credentials = await this.credentialProvider();
    this.validateResolvedCredentials(credentials);
    const region = signingRegion ?? await this.regionProvider();
    const { shortDate } = formatDate(signingDate);
    const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));
    hash.update(toUint8Array(stringToSign));
    return toHex(await hash.digest());
  }
  async signRequest(requestToSign, { signingDate = /* @__PURE__ */ new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService } = {}) {
    const credentials = await this.credentialProvider();
    this.validateResolvedCredentials(credentials);
    const region = signingRegion ?? await this.regionProvider();
    const request = prepareRequest(requestToSign);
    const { longDate, shortDate } = formatDate(signingDate);
    const scope = createScope(shortDate, region, signingService ?? this.service);
    request.headers[AMZ_DATE_HEADER] = longDate;
    if (credentials.sessionToken) {
      request.headers[TOKEN_HEADER] = credentials.sessionToken;
    }
    const payloadHash = await getPayloadHash(request, this.sha256);
    if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {
      request.headers[SHA256_HEADER] = payloadHash;
    }
    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);
    const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));
    request.headers[AUTH_HEADER] = `${ALGORITHM_IDENTIFIER} Credential=${credentials.accessKeyId}/${scope}, SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, Signature=${signature}`;
    return request;
  }
  createCanonicalRequest(request, canonicalHeaders, payloadHash) {
    const sortedHeaders = Object.keys(canonicalHeaders).sort();
    return `${request.method}
${this.getCanonicalPath(request)}
${getCanonicalQuery(request)}
${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join("\n")}

${sortedHeaders.join(";")}
${payloadHash}`;
  }
  async createStringToSign(longDate, credentialScope, canonicalRequest) {
    const hash = new this.sha256();
    hash.update(toUint8Array(canonicalRequest));
    const hashedRequest = await hash.digest();
    return `${ALGORITHM_IDENTIFIER}
${longDate}
${credentialScope}
${toHex(hashedRequest)}`;
  }
  getCanonicalPath({ path }) {
    if (this.uriEscapePath) {
      const normalizedPathSegments = [];
      for (const pathSegment of path.split("/")) {
        if ((pathSegment == null ? void 0 : pathSegment.length) === 0)
          continue;
        if (pathSegment === ".")
          continue;
        if (pathSegment === "..") {
          normalizedPathSegments.pop();
        } else {
          normalizedPathSegments.push(pathSegment);
        }
      }
      const normalizedPath = `${(path == null ? void 0 : path.startsWith("/")) ? "/" : ""}${normalizedPathSegments.join("/")}${normalizedPathSegments.length > 0 && (path == null ? void 0 : path.endsWith("/")) ? "/" : ""}`;
      const doubleEncoded = escapeUri(normalizedPath);
      return doubleEncoded.replace(/%2F/g, "/");
    }
    return path;
  }
  async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {
    const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);
    const hash = new this.sha256(await keyPromise);
    hash.update(toUint8Array(stringToSign));
    return toHex(await hash.digest());
  }
  getSigningKey(credentials, region, shortDate, service) {
    return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);
  }
  validateResolvedCredentials(credentials) {
    if (typeof credentials !== "object" || typeof credentials.accessKeyId !== "string" || typeof credentials.secretAccessKey !== "string") {
      throw new Error("Resolved credential object is not valid");
    }
  }
};
var formatDate = (now) => {
  const longDate = iso8601(now).replace(/[\-:]/g, "");
  return {
    longDate,
    shortDate: longDate.slice(0, 8)
  };
};
var getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(";");

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/DataPlaneClient.js
var import_sha256_js = __toESM(require_build2());
var __assign9 = function() {
  __assign9 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign9.apply(this, arguments);
};
var __awaiter8 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator8 = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var SERVICE = "rum";
var METHOD3 = "POST";
var CONTENT_TYPE_JSON = "application/json";
var CONTENT_TYPE_TEXT = "text/plain;charset=UTF-8";
var REQUEST_PRESIGN_ARGS = { expiresIn: 60 };
var DataPlaneClient = (
  /** @class */
  /* @__PURE__ */ function() {
    function DataPlaneClient2(config) {
      var _this = this;
      this.sendFetch = function(putRumEventsRequest) {
        return __awaiter8(_this, void 0, void 0, function() {
          var options, request, httpResponse;
          return __generator8(this, function(_a) {
            switch (_a.label) {
              case 0:
                return [4, this.getHttpRequestOptions(putRumEventsRequest, CONTENT_TYPE_JSON)];
              case 1:
                options = _a.sent();
                request = new HttpRequest(options);
                if (!this.awsSigV4) return [3, 3];
                return [4, this.awsSigV4.sign(request)];
              case 2:
                request = _a.sent();
                _a.label = 3;
              case 3:
                httpResponse = this.config.fetchRequestHandler.handle(request);
                return [2, httpResponse];
            }
          });
        });
      };
      this.sendBeacon = function(putRumEventsRequest) {
        return __awaiter8(_this, void 0, void 0, function() {
          var options, request, httpResponse;
          return __generator8(this, function(_a) {
            switch (_a.label) {
              case 0:
                return [4, this.getHttpRequestOptions(putRumEventsRequest, CONTENT_TYPE_TEXT)];
              case 1:
                options = _a.sent();
                request = new HttpRequest(options);
                if (!this.awsSigV4) return [3, 3];
                return [4, this.awsSigV4.presign(request, REQUEST_PRESIGN_ARGS)];
              case 2:
                request = _a.sent();
                _a.label = 3;
              case 3:
                httpResponse = this.config.beaconRequestHandler.handle(request);
                return [2, httpResponse];
            }
          });
        });
      };
      this.getHttpRequestOptions = function(putRumEventsRequest, contentType) {
        return __awaiter8(_this, void 0, void 0, function() {
          var serializedRequest, path, options, _a, _b, _c;
          var _d, _e;
          return __generator8(this, function(_f) {
            switch (_f.label) {
              case 0:
                serializedRequest = JSON.stringify(serializeRequest(putRumEventsRequest));
                path = this.config.endpoint.pathname.replace(/\/$/, "");
                options = {
                  method: METHOD3,
                  protocol: this.config.endpoint.protocol,
                  port: Number(this.config.endpoint.port) || void 0,
                  headers: __assign9({ "content-type": contentType, host: this.config.endpoint.host }, this.config.headers),
                  hostname: this.config.endpoint.hostname,
                  path: "".concat(path, "/appmonitors/").concat(putRumEventsRequest.AppMonitorDetails.id),
                  body: serializedRequest
                };
                if (!this.awsSigV4) return [3, 2];
                _a = [__assign9({}, options)];
                _d = {};
                _b = [__assign9({}, options.headers)];
                _e = {};
                _c = "X-Amz-Content-Sha256";
                return [4, hashAndEncode(serializedRequest)];
              case 1:
                return [2, __assign9.apply(void 0, _a.concat([(_d.headers = __assign9.apply(void 0, _b.concat([(_e[_c] = _f.sent(), _e)])), _d)]))];
              case 2:
                return [2, options];
            }
          });
        });
      };
      this.config = config;
      if (config.credentials) {
        this.awsSigV4 = new SignatureV4({
          applyChecksum: true,
          credentials: config.credentials,
          region: config.region,
          service: SERVICE,
          uriEscapePath: true,
          sha256: import_sha256_js.Sha256
        });
      }
    }
    return DataPlaneClient2;
  }()
);
var serializeRequest = function(request) {
  var serializedRumEvents = [];
  request.RumEvents.forEach(function(e2) {
    return serializedRumEvents.push(serializeEvent(e2));
  });
  var serializedRequest = {
    BatchId: request.BatchId,
    AppMonitorDetails: request.AppMonitorDetails,
    UserDetails: request.UserDetails,
    RumEvents: serializedRumEvents
  };
  if (request.Alias) {
    serializedRequest = __assign9(__assign9({}, serializedRequest), { Alias: request.Alias });
  }
  return serializedRequest;
};
var serializeEvent = function(event) {
  return {
    id: event.id,
    // Dates must be converted to timestamps before serialization.
    timestamp: Math.round(event.timestamp.getTime() / 1e3),
    type: event.type,
    metadata: event.metadata,
    details: event.details
  };
};
var hashAndEncode = function(payload) {
  return __awaiter8(void 0, void 0, void 0, function() {
    var sha256, _a;
    return __generator8(this, function(_b) {
      switch (_b.label) {
        case 0:
          sha256 = new import_sha256_js.Sha256();
          sha256.update(payload);
          _a = toHex;
          return [4, sha256.digest()];
        case 1:
          return [2, _a.apply(void 0, [_b.sent()]).toLowerCase()];
      }
    });
  });
};

// node_modules/.pnpm/@smithy+util-uri-escape@1.1.0/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js
var escapeUri2 = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode2);
var hexEncode2 = (c3) => `%${c3.charCodeAt(0).toString(16).toUpperCase()}`;

// node_modules/.pnpm/@smithy+querystring-builder@1.1.0/node_modules/@smithy/querystring-builder/dist-es/index.js
function buildQueryString2(query) {
  const parts = [];
  for (let key of Object.keys(query).sort()) {
    const value = query[key];
    key = escapeUri2(key);
    if (Array.isArray(value)) {
      for (let i2 = 0, iLen = value.length; i2 < iLen; i2++) {
        parts.push(`${key}=${escapeUri2(value[i2])}`);
      }
    } else {
      let qsEntry = key;
      if (value || typeof value === "string") {
        qsEntry += `=${escapeUri2(value)}`;
      }
      parts.push(qsEntry);
    }
  }
  return parts.join("&");
}

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/BeaconHttpHandler.js
var BeaconHttpHandler = (
  /** @class */
  function() {
    function BeaconHttpHandler2() {
    }
    BeaconHttpHandler2.prototype.handle = function(request) {
      var queued = this.sendBeacon(request);
      return new Promise(function(resolve, reject) {
        if (queued) {
          resolve({
            response: new HttpResponse({ statusCode: 200 })
          });
        } else {
          reject();
        }
      });
    };
    BeaconHttpHandler2.prototype.updateHttpClientConfig = function(_key, _value) {
    };
    BeaconHttpHandler2.prototype.httpHandlerConfigs = function() {
      return {};
    };
    BeaconHttpHandler2.prototype.sendBeacon = function(signedRequest) {
      var path = signedRequest.path;
      if (signedRequest.query) {
        var queryString = buildQueryString2(signedRequest.query);
        if (queryString) {
          path += "?".concat(queryString);
        }
      }
      var port = signedRequest.port;
      var url = "".concat(signedRequest.protocol, "//").concat(signedRequest.hostname).concat(port ? ":".concat(port) : "").concat(path);
      return navigator.sendBeacon(url, signedRequest.body);
    };
    return BeaconHttpHandler2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/request-timeout.js
var requestTimeout2 = function(timeoutInMs) {
  if (timeoutInMs === void 0) {
    timeoutInMs = 0;
  }
  return new Promise(function(resolve, reject) {
    if (timeoutInMs) {
      setTimeout(function() {
        var timeoutError = new Error("Request did not complete within ".concat(timeoutInMs, " ms"));
        timeoutError.name = "TimeoutError";
        reject(timeoutError);
      }, timeoutInMs);
    }
  });
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/FetchHttpHandler.js
var FetchHttpHandler2 = (
  /** @class */
  function() {
    function FetchHttpHandler3(_a) {
      var _b = _a === void 0 ? {} : _a, fetchFunction = _b.fetchFunction, requestTimeout3 = _b.requestTimeout;
      this.requestTimeout = requestTimeout3;
      this.fetchFunction = fetchFunction;
    }
    FetchHttpHandler3.prototype.destroy = function() {
    };
    FetchHttpHandler3.prototype.handle = function(request, _a) {
      var _b = _a === void 0 ? {} : _a, abortSignal = _b.abortSignal;
      var requestTimeoutInMs = this.requestTimeout;
      if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {
        var abortError = new Error("Request aborted");
        abortError.name = "AbortError";
        return Promise.reject(abortError);
      }
      var path = request.path;
      if (request.query) {
        var queryString = buildQueryString2(request.query);
        if (queryString) {
          path += "?".concat(queryString);
        }
      }
      var port = request.port, method = request.method;
      var url = "".concat(request.protocol, "//").concat(request.hostname).concat(port ? ":".concat(port) : "").concat(path);
      var body = method === "GET" || method === "HEAD" ? void 0 : request.body;
      var requestOptions = {
        body,
        headers: new Headers(request.headers),
        method
      };
      if (typeof AbortController !== "undefined") {
        requestOptions.signal = abortSignal;
      }
      var fetchRequest = new Request(url, requestOptions);
      var raceOfPromises = [
        this.fetchFunction.apply(window, [fetchRequest]).then(function(response) {
          var fetchHeaders = response.headers;
          var transformedHeaders = {};
          for (var _i = 0, _a2 = fetchHeaders.entries(); _i < _a2.length; _i++) {
            var pair = _a2[_i];
            transformedHeaders[pair[0]] = pair[1];
          }
          var hasReadableStream = response.body !== void 0;
          if (!hasReadableStream) {
            return response.blob().then(function(body2) {
              return {
                response: new HttpResponse({
                  headers: transformedHeaders,
                  statusCode: response.status,
                  body: body2
                })
              };
            });
          }
          return {
            response: new HttpResponse({
              headers: transformedHeaders,
              statusCode: response.status,
              body: response.body
            })
          };
        }),
        requestTimeout2(requestTimeoutInMs)
      ];
      if (abortSignal) {
        raceOfPromises.push(new Promise(function(resolve, reject) {
          abortSignal.onabort = function() {
            var abortError2 = new Error("Request aborted");
            abortError2.name = "AbortError";
            reject(abortError2);
          };
        }));
      }
      return Promise.race(raceOfPromises);
    };
    FetchHttpHandler3.prototype.updateHttpClientConfig = function(_key, _value) {
    };
    FetchHttpHandler3.prototype.httpHandlerConfigs = function() {
      return {};
    };
    return FetchHttpHandler3;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/utils/random.js
var getRandomValues = function(holder) {
  if (crypto) {
    return crypto.getRandomValues(holder);
  } else if (msCrypto) {
    return msCrypto.getRandomValues(holder);
  } else {
    throw new Error("No crypto library found.");
  }
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/utils/http-utils.js
var byteToHex = [];
for (i2 = 0; i2 < 256; i2++) {
  byteToHex[i2] = (i2 + 256).toString(16).substr(1);
}
var i2;
var X_AMZN_TRACE_ID = "X-Amzn-Trace-Id";
var W3C_TRACEPARENT_HEADER_NAME = "traceparent";
var TRACEPARENT_VERSION_LENGTH = 2;
var TRACEPARENT_TRACE_ID_LENGTH = 32;
var TRACEPARENT_PARENT_ID_LENGTH = 16;
var TRACEPARENT_NUMBER_OF_FIELDS = 4;
var isTraceIdHeaderEnabled = function(url, addXrayTraceIdHeader) {
  if (Array.isArray(addXrayTraceIdHeader)) {
    return addXrayTraceIdHeader.some(function(matcher) {
      return matcher.test(url);
    });
  }
  return addXrayTraceIdHeader;
};
var defaultConfig3 = {
  logicalServiceName: "rum.aws.amazon.com",
  urlsToInclude: [/.*/],
  urlsToExclude: [
    // Cognito endpoints https://docs.aws.amazon.com/general/latest/gr/cognito_identity.html
    /cognito\-identity\.([^\.]*\.)?amazonaws\.com/,
    // STS endpoints https://docs.aws.amazon.com/general/latest/gr/sts.html
    /sts\.([^\.]*\.)?amazonaws\.com/
  ],
  stackTraceLength: 200,
  recordAllRequests: false,
  addXRayTraceIdHeader: false
};
var is2xx = function(status) {
  return 200 <= status && status < 300;
};
var is4xx = function(status) {
  return Math.floor(status / 100) === 4;
};
var is5xx = function(status) {
  return Math.floor(status / 100) === 5;
};
var is429 = function(status) {
  return status === 429;
};
var isUrlAllowed = function(url, config) {
  var include = config.urlsToInclude.some(function(urlPattern) {
    return urlPattern.test(url);
  });
  var exclude = config.urlsToExclude.some(function(urlPattern) {
    return urlPattern.test(url);
  });
  return include && !exclude;
};
var epochTime = function() {
  return Date.now() / 1e3;
};
var createXRayTraceEventHttp = function(input, init, traced) {
  var http = { request: {} };
  http.request.method = (init === null || init === void 0 ? void 0 : init.method) ? init.method : "GET";
  http.request.traced = traced;
  http.request.url = resourceToUrlString(input);
  return http;
};
var createXRayTraceEvent = function(name, startTime, w3cTraceId, http) {
  var traceEvent = {
    version: "1.0.0",
    name,
    origin: "AWS::RUM::AppMonitor",
    id: generateSegmentId(),
    start_time: startTime,
    trace_id: w3cTraceId ? generateW3CTraceId() : generateTraceId(),
    end_time: void 0,
    subsegments: [],
    in_progress: false
  };
  if (http) {
    traceEvent.http = http;
  }
  return traceEvent;
};
var createXRaySubsegment = function(name, startTime, http) {
  var subsegment = {
    id: generateSegmentId(),
    name,
    start_time: startTime,
    end_time: void 0,
    in_progress: false,
    namespace: name.endsWith("amazonaws.com") ? "aws" : "remote"
  };
  if (http) {
    subsegment.http = http;
  }
  return subsegment;
};
var requestInfoToHostname = function(request) {
  try {
    if (request.hostname) {
      return request.hostname;
    } else if (request.url) {
      return new URL(request.url).hostname;
    } else {
      return new URL(request.toString()).hostname;
    }
  } catch (e2) {
    return window.location.hostname;
  }
};
var addAmznTraceIdHeaderToInit = function(init, traceId, segmentId, w3cTraceIdEnabled) {
  if (!init.headers) {
    init.headers = {};
  }
  if (w3cTraceIdEnabled) {
    init.headers[W3C_TRACEPARENT_HEADER_NAME] = getW3CTraceIdHeaderValue(traceId, segmentId);
  } else {
    init.headers[X_AMZN_TRACE_ID] = getAmznTraceIdHeaderValue(traceId, segmentId);
  }
};
var addAmznTraceIdHeaderToHeaders = function(headers, traceId, segmentId, w3cTraceIdEnabled) {
  if (w3cTraceIdEnabled) {
    headers.set(W3C_TRACEPARENT_HEADER_NAME, getW3CTraceIdHeaderValue(traceId, segmentId));
  } else {
    headers.set(X_AMZN_TRACE_ID, getAmznTraceIdHeaderValue(traceId, segmentId));
  }
};
var getAmznTraceIdHeaderValue = function(traceId, segmentId) {
  return "Root=" + traceId + ";Parent=" + segmentId + ";Sampled=1";
};
var getW3CTraceIdHeaderValue = function(traceId, segmentId) {
  return "00-" + traceId + "-" + segmentId + "-01";
};
var isValidW3CHeader = function(headerComponents) {
  return (headerComponents === null || headerComponents === void 0 ? void 0 : headerComponents.length) === TRACEPARENT_NUMBER_OF_FIELDS && headerComponents[0].length === TRACEPARENT_VERSION_LENGTH && headerComponents[1].length === TRACEPARENT_TRACE_ID_LENGTH && headerComponents[2].length === TRACEPARENT_PARENT_ID_LENGTH && (headerComponents[3] === "00" || headerComponents[3] === "01");
};
var getTraceHeader = function(headers, w3cTraceIdEnabled) {
  var _a, _b;
  var traceHeader = {};
  if (headers) {
    if (w3cTraceIdEnabled) {
      var headerComponents = (_a = headers.get(W3C_TRACEPARENT_HEADER_NAME)) === null || _a === void 0 ? void 0 : _a.split("-");
      if (headerComponents && isValidW3CHeader(headerComponents)) {
        traceHeader.traceId = headerComponents[1];
        traceHeader.segmentId = headerComponents[2];
      }
    } else {
      var headerComponents = (_b = headers.get(X_AMZN_TRACE_ID)) === null || _b === void 0 ? void 0 : _b.split(";");
      if ((headerComponents === null || headerComponents === void 0 ? void 0 : headerComponents.length) === 3) {
        traceHeader.traceId = headerComponents[0].split("Root=")[1];
        traceHeader.segmentId = headerComponents[1].split("Parent=")[1];
      }
    }
  }
  return traceHeader;
};
var resourceToUrlString = function(resource) {
  return resource.url ? resource.url : resource.toString();
};
var generateTraceId = function() {
  return "1-".concat(hexTime(), "-").concat(guid());
};
var generateW3CTraceId = function() {
  var randomBytes = new Uint8Array(16);
  getRandomValues(randomBytes);
  return "".concat(uint8ArrayToHexString(randomBytes));
};
var generateSegmentId = function() {
  var randomBytes = new Uint8Array(8);
  getRandomValues(randomBytes);
  return uint8ArrayToHexString(randomBytes);
};
var hexTime = function() {
  return Math.floor(Date.now() / 1e3).toString(16);
};
var guid = function() {
  var randomBytes = new Uint8Array(12);
  getRandomValues(randomBytes);
  return uint8ArrayToHexString(randomBytes);
};
var uint8ArrayToHexString = function(bytes) {
  var hexString = "";
  for (var i2 = 0; i2 < bytes.length; i2++) {
    hexString += byteToHex[bytes[i2]];
  }
  return hexString;
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/RetryHttpHandler.js
var __awaiter9 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator9 = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var RetryHttpHandler = (
  /** @class */
  function() {
    function RetryHttpHandler2(handler, retries, backoff) {
      if (backoff === void 0) {
        backoff = function(n2) {
          return 2e3 * Math.pow(2, n2 - 1);
        };
      }
      this.handler = handler;
      this.retries = retries;
      this.backoff = backoff;
    }
    RetryHttpHandler2.prototype.handle = function(request) {
      return __awaiter9(this, void 0, void 0, function() {
        var retriesLeft, response, e_1;
        return __generator9(this, function(_a) {
          switch (_a.label) {
            case 0:
              retriesLeft = this.retries;
              _a.label = 1;
            case 1:
              if (false) return [3, 7];
              _a.label = 2;
            case 2:
              _a.trys.push([2, 4, , 6]);
              return [4, this.handler.handle(request)];
            case 3:
              response = _a.sent();
              if (is2xx(response.response.statusCode)) {
                return [2, response];
              }
              throw response.response.statusCode;
            case 4:
              e_1 = _a.sent();
              if (typeof e_1 === "number" && !is429(e_1) && !is5xx(e_1)) {
                throw new Error("".concat(e_1));
              }
              if (retriesLeft <= 0) {
                throw e_1;
              }
              retriesLeft--;
              return [4, this.sleep(this.backoff(this.retries - retriesLeft))];
            case 5:
              _a.sent();
              return [3, 6];
            case 6:
              return [3, 1];
            case 7:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    RetryHttpHandler2.prototype.sleep = function(milliseconds) {
      return __awaiter9(this, void 0, void 0, function() {
        return __generator9(this, function(_a) {
          return [2, new Promise(function(resolve) {
            return setTimeout(resolve, milliseconds);
          })];
        });
      });
    };
    RetryHttpHandler2.prototype.updateHttpClientConfig = function(_key, _value) {
    };
    RetryHttpHandler2.prototype.httpHandlerConfigs = function() {
      return {};
    };
    return RetryHttpHandler2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/dispatch/Dispatch.js
var __awaiter10 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator10 = function(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t2[0] & 1) throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f3, y3, t2, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n2) {
    return function(v3) {
      return step([n2, v3]);
    };
  }
  function step(op) {
    if (f3) throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3) try {
      if (f3 = 1, y3 && (t2 = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t2 = y3["return"]) && t2.call(y3), 0) : y3.next) && !(t2 = t2.call(y3, op[1])).done) return t2;
      if (y3 = 0, t2) op = [op[0] & 2, t2.value];
      switch (op[0]) {
        case 0:
        case 1:
          t2 = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y3 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t2 = _3.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t2[1]) {
            _3.label = t2[1];
            t2 = op;
            break;
          }
          if (t2 && _3.label < t2[2]) {
            _3.label = t2[2];
            _3.ops.push(op);
            break;
          }
          if (t2[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y3 = 0;
    } finally {
      f3 = t2 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var NO_CRED_MSG = "CWR: Cannot dispatch; no AWS credentials.";
var Dispatch = (
  /** @class */
  function() {
    function Dispatch2(region, endpoint, eventCache, config) {
      var _this = this;
      this.disableCodes = ["403", "404"];
      this.dispatchFetch = function() {
        return __awaiter10(_this, void 0, void 0, function() {
          return __generator10(this, function(_a) {
            if (this.doRequest()) {
              return [2, this.rum.sendFetch(this.createRequest()).catch(this.handleReject)];
            }
            return [
              2
              /*return*/
            ];
          });
        });
      };
      this.dispatchBeacon = function() {
        return __awaiter10(_this, void 0, void 0, function() {
          var request_1;
          var _this2 = this;
          return __generator10(this, function(_a) {
            if (this.doRequest()) {
              request_1 = this.createRequest();
              return [2, this.rum.sendBeacon(request_1).catch(function() {
                return _this2.rum.sendFetch(request_1);
              })];
            }
            return [
              2
              /*return*/
            ];
          });
        });
      };
      this.dispatchFetchFailSilent = function() {
        return __awaiter10(_this, void 0, void 0, function() {
          return __generator10(this, function(_a) {
            return [2, this.dispatchFetch().catch(function() {
            })];
          });
        });
      };
      this.dispatchBeaconFailSilent = function() {
        return __awaiter10(_this, void 0, void 0, function() {
          return __generator10(this, function(_a) {
            return [2, this.dispatchBeacon().catch(function() {
            })];
          });
        });
      };
      this.flushSync = function() {
        var _a;
        if (document.visibilityState === "hidden") {
          if (_this.doRequest(true)) {
            var flush = _this.rum.sendBeacon;
            var backup_1 = _this.rum.sendFetch;
            if (!_this.config.useBeacon) {
              _a = [backup_1, flush], flush = _a[0], backup_1 = _a[1];
            }
            var req_1 = _this.createRequest(true);
            flush(req_1).catch(function() {
              return backup_1(req_1);
            }).catch(function() {
            });
          }
        }
      };
      this.handleReject = function(e2) {
        if (e2 instanceof Error && _this.disableCodes.includes(e2.message)) {
          _this.disable();
        }
        throw e2;
      };
      this.defaultClientBuilder = function(endpoint2, region2, credentials) {
        return new DataPlaneClient({
          fetchRequestHandler: new RetryHttpHandler(new FetchHttpHandler2({
            fetchFunction: _this.config.fetchFunction
          }), _this.config.retries),
          beaconRequestHandler: new BeaconHttpHandler(),
          endpoint: endpoint2,
          region: region2,
          credentials,
          headers: _this.headers
        });
      };
      this.region = region;
      this.endpoint = endpoint;
      this.eventCache = eventCache;
      this.enabled = true;
      this.buildClient = config.clientBuilder || this.defaultClientBuilder;
      this.config = config;
      this.headers = config.headers;
      this.startDispatchTimer();
      if (config.signing) {
        this.rum = {
          sendFetch: function() {
            return Promise.reject(new Error(NO_CRED_MSG));
          },
          sendBeacon: function() {
            return Promise.reject(new Error(NO_CRED_MSG));
          }
        };
      } else {
        this.rum = this.buildClient(this.endpoint, this.region, void 0);
      }
    }
    Dispatch2.prototype.enable = function() {
      this.enabled = true;
      this.startDispatchTimer();
    };
    Dispatch2.prototype.disable = function() {
      this.stopDispatchTimer();
      this.enabled = false;
    };
    Dispatch2.prototype.setAwsCredentials = function(credentialProvider) {
      this.rum = this.buildClient(this.endpoint, this.region, credentialProvider);
      if (typeof credentialProvider === "function") {
        credentialProvider();
      }
    };
    Dispatch2.prototype.startDispatchTimer = function() {
      document.addEventListener(
        "visibilitychange",
        // The page is moving to the hidden state, which means it may be
        // unloaded. The sendBeacon API would typically be used in this
        // case. However, ad-blockers prevent sendBeacon from functioning.
        // We therefore have two bad options:
        //
        // (1) Use sendBeacon. Data will be lost when ad blockers are
        //     used and the page loses visibility
        // (2) Use fetch. Data will be lost when the page is unloaded
        //     before fetch completes
        //
        // A third option is to send both, however this would increase
        // bandwitch and require deduping server side.
        this.flushSync
      );
      document.addEventListener("pagehide", this.flushSync);
      if (this.config.dispatchInterval <= 0 || this.dispatchTimerId) {
        return;
      }
      this.dispatchTimerId = window.setInterval(this.dispatchFetchFailSilent, this.config.dispatchInterval);
    };
    Dispatch2.prototype.stopDispatchTimer = function() {
      document.removeEventListener("visibilitychange", this.flushSync);
      document.removeEventListener("pagehide", this.flushSync);
      if (this.dispatchTimerId) {
        window.clearInterval(this.dispatchTimerId);
        this.dispatchTimerId = void 0;
      }
    };
    Dispatch2.prototype.doRequest = function(flushCandidates) {
      if (flushCandidates === void 0) {
        flushCandidates = false;
      }
      if (!this.enabled) {
        return false;
      }
      if (flushCandidates && this.eventCache.hasCandidates()) {
        return true;
      }
      return this.eventCache.hasEvents();
    };
    Dispatch2.prototype.createRequest = function(flushCandidates) {
      if (flushCandidates === void 0) {
        flushCandidates = false;
      }
      return {
        BatchId: v4_default(),
        AppMonitorDetails: this.eventCache.getAppMonitorDetails(),
        UserDetails: this.eventCache.getUserDetails(),
        RumEvents: this.eventCache.getEventBatch(flushCandidates),
        Alias: this.config.alias
      };
    };
    return Dispatch2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/utils/common-utils.js
var ResourceType;
(function(ResourceType2) {
  ResourceType2["OTHER"] = "other";
  ResourceType2["STYLESHEET"] = "stylesheet";
  ResourceType2["DOCUMENT"] = "document";
  ResourceType2["SCRIPT"] = "script";
  ResourceType2["IMAGE"] = "image";
  ResourceType2["FONT"] = "font";
})(ResourceType || (ResourceType = {}));
var InitiatorType;
(function(InitiatorType2) {
  InitiatorType2["IMG"] = "img";
  InitiatorType2["IMAGE"] = "image";
  InitiatorType2["INPUT"] = "input";
  InitiatorType2["IFRAME"] = "iframe";
  InitiatorType2["FRAME"] = "frame";
  InitiatorType2["SCRIPT"] = "script";
  InitiatorType2["CSS"] = "css";
})(InitiatorType || (InitiatorType = {}));
var performanceKey = function(details) {
  return [details.startTime, details.duration].join("#");
};
var extensions = [
  {
    name: ResourceType.STYLESHEET,
    list: ["css", "less"]
  },
  {
    name: ResourceType.DOCUMENT,
    list: ["htm", "html", "ts", "doc", "docx", "pdf", "xls", "xlsx"]
  },
  {
    name: ResourceType.SCRIPT,
    list: ["js"]
  },
  {
    name: ResourceType.IMAGE,
    list: [
      "ai",
      "bmp",
      "gif",
      "ico",
      "jpeg",
      "jpg",
      "png",
      "ps",
      "psd",
      "svg",
      "tif",
      "tiff"
    ]
  },
  {
    name: ResourceType.FONT,
    list: ["fnt", "fon", "otf", "ttf", "woff"]
  }
];
var shuffle = function(a3) {
  for (var i2 = a3.length - 1; i2 > 0; i2--) {
    var j2 = Math.floor(Math.random() * (i2 + 1));
    var v3 = a3[i2];
    a3[i2] = a3[j2];
    a3[j2] = v3;
  }
};
var getResourceFileType = function(url, initiatorType) {
  var ext = ResourceType.OTHER;
  if (url) {
    var filename = url.substring(url.lastIndexOf("/") + 1);
    var extension_1 = filename.substring(filename.lastIndexOf(".") + 1).split(/[?#]/)[0];
    extensions.forEach(function(type) {
      if (type.list.indexOf(extension_1) > -1) {
        ext = type.name;
      }
    });
  }
  if (initiatorType && ext === ResourceType.OTHER) {
    switch (initiatorType) {
      case InitiatorType.IMAGE:
      case InitiatorType.IMG:
      case InitiatorType.INPUT:
        ext = ResourceType.IMAGE;
        break;
      case InitiatorType.IFRAME:
      case InitiatorType.FRAME:
        ext = ResourceType.DOCUMENT;
        break;
      case InitiatorType.SCRIPT:
        ext = ResourceType.SCRIPT;
        break;
      case InitiatorType.CSS:
        ext = ResourceType.STYLESHEET;
        break;
    }
  }
  return ext;
};
var isLCPSupported = function() {
  return PerformanceObserver.supportedEntryTypes.includes("largest-contentful-paint");
};
var isFCPSupported = function() {
  return PerformanceObserver.supportedEntryTypes.includes("paint");
};
var isLongTaskSupported = function() {
  return PerformanceObserver.supportedEntryTypes.includes("longtask");
};
var putRumEventsPattern = /.*\/application\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\/events/;
var isPutRumEventsCall = function(url, endpointHost) {
  try {
    return new URL(url).hostname === endpointHost && putRumEventsPattern.test(url);
  } catch (_3) {
    return false;
  }
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/utils/performance-utils.js
var defaultIgnore = function(entry) {
  return entry.entryType === "resource" && (!/^https?:/.test(entry.name) || /^(fetch|xmlhttprequest)$/.test(entry.initiatorType));
};
var defaultPerformancePluginConfig = {
  eventLimit: 10,
  ignore: defaultIgnore,
  recordAllTypes: [
    ResourceType.DOCUMENT,
    ResourceType.SCRIPT,
    ResourceType.STYLESHEET,
    ResourceType.FONT
  ],
  sampleTypes: [ResourceType.IMAGE, ResourceType.OTHER],
  reportAllLCP: false,
  reportAllCLS: false,
  reportAllINP: false
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/NavigationPlugin.js
var __extends8 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __assign10 = function() {
  __assign10 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign10.apply(this, arguments);
};
var NAVIGATION_EVENT_PLUGIN_ID = "navigation";
var NAVIGATION = "navigation";
var LOAD = "load";
var NavigationPlugin = (
  /** @class */
  function(_super) {
    __extends8(NavigationPlugin2, _super);
    function NavigationPlugin2(config) {
      var _this = _super.call(this, NAVIGATION_EVENT_PLUGIN_ID) || this;
      _this.eventListener = function() {
        if (performance.getEntriesByType(NAVIGATION).length === 0) {
          _this.performanceNavigationEventHandlerTimingLevel1();
        } else {
          var navigationObserver = new PerformanceObserver(function(list) {
            list.getEntries().filter(function(e2) {
              return e2.entryType === NAVIGATION;
            }).filter(function(e2) {
              return !_this.config.ignore(e2);
            }).forEach(function(event) {
              _this.performanceNavigationEventHandlerTimingLevel2(event);
            });
          });
          navigationObserver.observe({
            entryTypes: [NAVIGATION]
          });
        }
      };
      _this.performanceNavigationEventHandlerTimingLevel1 = function() {
        var recordNavigation = function() {
          var _a;
          var entryData = performance.timing;
          var origin = entryData.navigationStart;
          var eventDataNavigationTimingLevel1 = {
            version: "1.0.0",
            initiatorType: "navigation",
            startTime: 0,
            unloadEventStart: entryData.unloadEventStart > 0 ? entryData.unloadEventStart - origin : 0,
            promptForUnload: entryData.unloadEventEnd - entryData.unloadEventStart,
            redirectStart: entryData.redirectStart > 0 ? entryData.redirectStart - origin : 0,
            redirectTime: entryData.redirectEnd - entryData.redirectStart,
            fetchStart: entryData.fetchStart > 0 ? entryData.fetchStart - origin : 0,
            domainLookupStart: entryData.domainLookupStart > 0 ? entryData.domainLookupStart - origin : 0,
            dns: entryData.domainLookupEnd - entryData.domainLookupStart,
            connectStart: entryData.connectStart > 0 ? entryData.connectStart - origin : 0,
            connect: entryData.connectEnd - entryData.connectStart,
            secureConnectionStart: entryData.secureConnectionStart > 0 ? entryData.secureConnectionStart - origin : 0,
            tlsTime: entryData.secureConnectionStart > 0 ? entryData.connectEnd - entryData.secureConnectionStart : 0,
            requestStart: entryData.requestStart > 0 ? entryData.requestStart - origin : 0,
            timeToFirstByte: entryData.responseStart - entryData.requestStart,
            responseStart: entryData.responseStart > 0 ? entryData.responseStart - origin : 0,
            responseTime: entryData.responseStart > 0 ? entryData.responseEnd - entryData.responseStart : 0,
            domInteractive: entryData.domInteractive > 0 ? entryData.domInteractive - origin : 0,
            domContentLoadedEventStart: entryData.domContentLoadedEventStart > 0 ? entryData.domContentLoadedEventStart - origin : 0,
            domContentLoaded: entryData.domContentLoadedEventEnd - entryData.domContentLoadedEventStart,
            domComplete: entryData.domComplete > 0 ? entryData.domComplete - origin : 0,
            domProcessingTime: entryData.loadEventStart - entryData.responseEnd,
            loadEventStart: entryData.loadEventStart > 0 ? entryData.loadEventStart - origin : 0,
            loadEventTime: entryData.loadEventEnd - entryData.loadEventStart,
            duration: entryData.loadEventEnd - entryData.navigationStart,
            navigationTimingLevel: 1
          };
          if ((_a = _this.context) === null || _a === void 0 ? void 0 : _a.record) {
            _this.context.record(PERFORMANCE_NAVIGATION_EVENT_TYPE, eventDataNavigationTimingLevel1);
          }
        };
        setTimeout(recordNavigation, 0);
      };
      _this.performanceNavigationEventHandlerTimingLevel2 = function(entryData) {
        var _a;
        var eventDataNavigationTimingLevel2 = {
          version: "1.0.0",
          initiatorType: entryData.initiatorType,
          navigationType: entryData.type,
          startTime: entryData.startTime,
          unloadEventStart: entryData.unloadEventStart,
          promptForUnload: entryData.unloadEventEnd - entryData.unloadEventStart,
          redirectCount: entryData.redirectCount,
          redirectStart: entryData.redirectStart,
          redirectTime: entryData.redirectEnd - entryData.redirectStart,
          workerStart: entryData.workerStart,
          workerTime: entryData.workerStart > 0 ? entryData.fetchStart - entryData.workerStart : 0,
          fetchStart: entryData.fetchStart,
          domainLookupStart: entryData.domainLookupStart,
          dns: entryData.domainLookupEnd - entryData.domainLookupStart,
          nextHopProtocol: entryData.nextHopProtocol,
          connectStart: entryData.connectStart,
          connect: entryData.connectEnd - entryData.connectStart,
          secureConnectionStart: entryData.secureConnectionStart,
          tlsTime: entryData.secureConnectionStart > 0 ? entryData.connectEnd - entryData.secureConnectionStart : 0,
          requestStart: entryData.requestStart,
          timeToFirstByte: entryData.responseStart - entryData.requestStart,
          responseStart: entryData.responseStart,
          responseTime: entryData.responseStart > 0 ? entryData.responseEnd - entryData.responseStart : 0,
          domInteractive: entryData.domInteractive,
          domContentLoadedEventStart: entryData.domContentLoadedEventStart,
          domContentLoaded: entryData.domContentLoadedEventEnd - entryData.domContentLoadedEventStart,
          domComplete: entryData.domComplete,
          domProcessingTime: entryData.loadEventStart - entryData.responseEnd,
          loadEventStart: entryData.loadEventStart,
          loadEventTime: entryData.loadEventEnd - entryData.loadEventStart,
          duration: entryData.duration,
          headerSize: entryData.transferSize > 0 ? entryData.transferSize - entryData.encodedBodySize : 0,
          transferSize: entryData.transferSize,
          compressionRatio: entryData.encodedBodySize > 0 ? entryData.decodedBodySize / entryData.encodedBodySize : 0,
          navigationTimingLevel: 2
        };
        if ((_a = _this.context) === null || _a === void 0 ? void 0 : _a.record) {
          _this.context.record(PERFORMANCE_NAVIGATION_EVENT_TYPE, eventDataNavigationTimingLevel2);
        }
      };
      _this.config = __assign10(__assign10({}, defaultPerformancePluginConfig), config);
      return _this;
    }
    NavigationPlugin2.prototype.enable = function() {
      if (this.enabled) {
        return;
      }
      this.enabled = true;
      window.addEventListener(LOAD, this.eventListener);
    };
    NavigationPlugin2.prototype.disable = function() {
      if (!this.enabled) {
        return;
      }
      this.enabled = false;
      if (this.eventListener) {
        window.removeEventListener(LOAD, this.eventListener);
      }
    };
    NavigationPlugin2.prototype.hasTheWindowLoadEventFired = function() {
      if (window.performance && window.performance.getEntriesByType(NAVIGATION).length) {
        var navData = window.performance.getEntriesByType(NAVIGATION)[0];
        return Boolean(navData.loadEventEnd);
      }
      return false;
    };
    NavigationPlugin2.prototype.onload = function() {
      var _this = this;
      if (this.enabled) {
        if (this.hasTheWindowLoadEventFired()) {
          window.performance.getEntriesByType(NAVIGATION).filter(function(e2) {
            return !_this.config.ignore(e2);
          }).forEach(function(event) {
            return _this.performanceNavigationEventHandlerTimingLevel2(event);
          });
        } else {
          window.addEventListener(LOAD, this.eventListener);
        }
      }
    };
    return NavigationPlugin2;
  }(InternalPlugin)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/ResourcePlugin.js
var __extends9 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __assign11 = function() {
  __assign11 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign11.apply(this, arguments);
};
var RESOURCE_EVENT_PLUGIN_ID = "resource";
var RESOURCE = "resource";
var ResourcePlugin = (
  /** @class */
  function(_super) {
    __extends9(ResourcePlugin2, _super);
    function ResourcePlugin2(config) {
      var _this = _super.call(this, RESOURCE_EVENT_PLUGIN_ID) || this;
      _this.performanceEntryHandler = function(list) {
        _this.recordPerformanceEntries(list.getEntries());
      };
      _this.recordPerformanceEntries = function(list) {
        var recordAll = [];
        var sample = [];
        list.filter(function(e2) {
          return e2.entryType === RESOURCE;
        }).filter(function(e2) {
          return !_this.config.ignore(e2);
        }).forEach(function(event) {
          var _a = event, name = _a.name, initiatorType = _a.initiatorType;
          var type = getResourceFileType(name, initiatorType);
          if (_this.config.recordAllTypes.includes(type)) {
            recordAll.push(event);
          } else if (_this.config.sampleTypes.includes(type)) {
            sample.push(event);
          }
        });
        recordAll.forEach(function(r2) {
          return _this.recordResourceEvent(r2);
        });
        shuffle(sample);
        while (sample.length > 0 && _this.eventCount < _this.config.eventLimit) {
          _this.recordResourceEvent(sample.pop());
          _this.eventCount++;
        }
      };
      _this.recordResourceEvent = function(_a) {
        var _b;
        var name = _a.name, startTime = _a.startTime, initiatorType = _a.initiatorType, duration = _a.duration, transferSize = _a.transferSize;
        if (isPutRumEventsCall(name, _this.context.config.endpointUrl.hostname)) {
          return;
        }
        if ((_b = _this.context) === null || _b === void 0 ? void 0 : _b.record) {
          var eventData = {
            version: "1.0.0",
            initiatorType,
            startTime,
            duration,
            fileType: getResourceFileType(name, initiatorType),
            transferSize
          };
          if (_this.context.config.recordResourceUrl) {
            eventData.targetUrl = name;
          }
          _this.context.record(PERFORMANCE_RESOURCE_EVENT_TYPE, eventData);
        }
      };
      _this.config = __assign11(__assign11({}, defaultPerformancePluginConfig), config);
      _this.eventCount = 0;
      _this.resourceObserver = new PerformanceObserver(_this.performanceEntryHandler);
      return _this;
    }
    ResourcePlugin2.prototype.enable = function() {
      if (this.enabled) {
        return;
      }
      this.enabled = true;
      this.resourceObserver.observe({
        type: RESOURCE,
        buffered: true
      });
    };
    ResourcePlugin2.prototype.disable = function() {
      if (!this.enabled) {
        return;
      }
      this.enabled = false;
      this.resourceObserver.disconnect();
    };
    ResourcePlugin2.prototype.onload = function() {
      this.resourceObserver.observe({
        type: RESOURCE,
        buffered: true
      });
    };
    return ResourcePlugin2;
  }(InternalPlugin)
);

// node_modules/.pnpm/web-vitals@4.2.4/node_modules/web-vitals/dist/web-vitals.attribution.js
var t;
var e;
var n = function() {
  var t2 = self.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0];
  if (t2 && t2.responseStart > 0 && t2.responseStart < performance.now()) return t2;
};
var r = function(t2) {
  if ("loading" === document.readyState) return "loading";
  var e2 = n();
  if (e2) {
    if (t2 < e2.domInteractive) return "loading";
    if (0 === e2.domContentLoadedEventStart || t2 < e2.domContentLoadedEventStart) return "dom-interactive";
    if (0 === e2.domComplete || t2 < e2.domComplete) return "dom-content-loaded";
  }
  return "complete";
};
var i = function(t2) {
  var e2 = t2.nodeName;
  return 1 === t2.nodeType ? e2.toLowerCase() : e2.toUpperCase().replace(/^#/, "");
};
var a = function(t2, e2) {
  var n2 = "";
  try {
    for (; t2 && 9 !== t2.nodeType; ) {
      var r2 = t2, a3 = r2.id ? "#" + r2.id : i(r2) + (r2.classList && r2.classList.value && r2.classList.value.trim() && r2.classList.value.trim().length ? "." + r2.classList.value.trim().replace(/\s+/g, ".") : "");
      if (n2.length + a3.length > (e2 || 100) - 1) return n2 || a3;
      if (n2 = n2 ? a3 + ">" + n2 : a3, r2.id) break;
      t2 = r2.parentNode;
    }
  } catch (t3) {
  }
  return n2;
};
var o = -1;
var c = function() {
  return o;
};
var u = function(t2) {
  addEventListener("pageshow", function(e2) {
    e2.persisted && (o = e2.timeStamp, t2(e2));
  }, true);
};
var s = function() {
  var t2 = n();
  return t2 && t2.activationStart || 0;
};
var f = function(t2, e2) {
  var r2 = n(), i2 = "navigate";
  c() >= 0 ? i2 = "back-forward-cache" : r2 && (document.prerendering || s() > 0 ? i2 = "prerender" : document.wasDiscarded ? i2 = "restore" : r2.type && (i2 = r2.type.replace(/_/g, "-")));
  return { name: t2, value: void 0 === e2 ? -1 : e2, rating: "good", delta: 0, entries: [], id: "v4-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12), navigationType: i2 };
};
var d = function(t2, e2, n2) {
  try {
    if (PerformanceObserver.supportedEntryTypes.includes(t2)) {
      var r2 = new PerformanceObserver(function(t3) {
        Promise.resolve().then(function() {
          e2(t3.getEntries());
        });
      });
      return r2.observe(Object.assign({ type: t2, buffered: true }, n2 || {})), r2;
    }
  } catch (t3) {
  }
};
var l = function(t2, e2, n2, r2) {
  var i2, a3;
  return function(o3) {
    e2.value >= 0 && (o3 || r2) && ((a3 = e2.value - (i2 || 0)) || void 0 === i2) && (i2 = e2.value, e2.delta = a3, e2.rating = function(t3, e3) {
      return t3 > e3[1] ? "poor" : t3 > e3[0] ? "needs-improvement" : "good";
    }(e2.value, n2), t2(e2));
  };
};
var m = function(t2) {
  requestAnimationFrame(function() {
    return requestAnimationFrame(function() {
      return t2();
    });
  });
};
var p = function(t2) {
  document.addEventListener("visibilitychange", function() {
    "hidden" === document.visibilityState && t2();
  });
};
var v = function(t2) {
  var e2 = false;
  return function() {
    e2 || (t2(), e2 = true);
  };
};
var g = -1;
var h = function() {
  return "hidden" !== document.visibilityState || document.prerendering ? 1 / 0 : 0;
};
var T = function(t2) {
  "hidden" === document.visibilityState && g > -1 && (g = "visibilitychange" === t2.type ? t2.timeStamp : 0, E());
};
var y = function() {
  addEventListener("visibilitychange", T, true), addEventListener("prerenderingchange", T, true);
};
var E = function() {
  removeEventListener("visibilitychange", T, true), removeEventListener("prerenderingchange", T, true);
};
var S = function() {
  return g < 0 && (g = h(), y(), u(function() {
    setTimeout(function() {
      g = h(), y();
    }, 0);
  })), { get firstHiddenTime() {
    return g;
  } };
};
var b = function(t2) {
  document.prerendering ? addEventListener("prerenderingchange", function() {
    return t2();
  }, true) : t2();
};
var L = [1800, 3e3];
var C = function(t2, e2) {
  e2 = e2 || {}, b(function() {
    var n2, r2 = S(), i2 = f("FCP"), a3 = d("paint", function(t3) {
      t3.forEach(function(t4) {
        "first-contentful-paint" === t4.name && (a3.disconnect(), t4.startTime < r2.firstHiddenTime && (i2.value = Math.max(t4.startTime - s(), 0), i2.entries.push(t4), n2(true)));
      });
    });
    a3 && (n2 = l(t2, i2, L, e2.reportAllChanges), u(function(r3) {
      i2 = f("FCP"), n2 = l(t2, i2, L, e2.reportAllChanges), m(function() {
        i2.value = performance.now() - r3.timeStamp, n2(true);
      });
    }));
  });
};
var M = [0.1, 0.25];
var D = function(t2, e2) {
  !function(t3, e3) {
    e3 = e3 || {}, C(v(function() {
      var n2, r2 = f("CLS", 0), i2 = 0, a3 = [], o3 = function(t4) {
        t4.forEach(function(t5) {
          if (!t5.hadRecentInput) {
            var e4 = a3[0], n3 = a3[a3.length - 1];
            i2 && t5.startTime - n3.startTime < 1e3 && t5.startTime - e4.startTime < 5e3 ? (i2 += t5.value, a3.push(t5)) : (i2 = t5.value, a3 = [t5]);
          }
        }), i2 > r2.value && (r2.value = i2, r2.entries = a3, n2());
      }, c3 = d("layout-shift", o3);
      c3 && (n2 = l(t3, r2, M, e3.reportAllChanges), p(function() {
        o3(c3.takeRecords()), n2(true);
      }), u(function() {
        i2 = 0, r2 = f("CLS", 0), n2 = l(t3, r2, M, e3.reportAllChanges), m(function() {
          return n2();
        });
      }), setTimeout(n2, 0));
    }));
  }(function(e3) {
    var n2 = function(t3) {
      var e4, n3 = {};
      if (t3.entries.length) {
        var i2 = t3.entries.reduce(function(t4, e5) {
          return t4 && t4.value > e5.value ? t4 : e5;
        });
        if (i2 && i2.sources && i2.sources.length) {
          var o3 = (e4 = i2.sources).find(function(t4) {
            return t4.node && 1 === t4.node.nodeType;
          }) || e4[0];
          o3 && (n3 = { largestShiftTarget: a(o3.node), largestShiftTime: i2.startTime, largestShiftValue: i2.value, largestShiftSource: o3, largestShiftEntry: i2, loadState: r(i2.startTime) });
        }
      }
      return Object.assign(t3, { attribution: n3 });
    }(e3);
    t2(n2);
  }, e2);
};
var x = 0;
var I = 1 / 0;
var k = 0;
var A = function(t2) {
  t2.forEach(function(t3) {
    t3.interactionId && (I = Math.min(I, t3.interactionId), k = Math.max(k, t3.interactionId), x = k ? (k - I) / 7 + 1 : 0);
  });
};
var F = function() {
  return t ? x : performance.interactionCount || 0;
};
var P = function() {
  "interactionCount" in performance || t || (t = d("event", A, { type: "event", buffered: true, durationThreshold: 0 }));
};
var B = [];
var O = /* @__PURE__ */ new Map();
var R = 0;
var j = function() {
  var t2 = Math.min(B.length - 1, Math.floor((F() - R) / 50));
  return B[t2];
};
var q = [];
var H = function(t2) {
  if (q.forEach(function(e3) {
    return e3(t2);
  }), t2.interactionId || "first-input" === t2.entryType) {
    var e2 = B[B.length - 1], n2 = O.get(t2.interactionId);
    if (n2 || B.length < 10 || t2.duration > e2.latency) {
      if (n2) t2.duration > n2.latency ? (n2.entries = [t2], n2.latency = t2.duration) : t2.duration === n2.latency && t2.startTime === n2.entries[0].startTime && n2.entries.push(t2);
      else {
        var r2 = { id: t2.interactionId, latency: t2.duration, entries: [t2] };
        O.set(r2.id, r2), B.push(r2);
      }
      B.sort(function(t3, e3) {
        return e3.latency - t3.latency;
      }), B.length > 10 && B.splice(10).forEach(function(t3) {
        return O.delete(t3.id);
      });
    }
  }
};
var N = function(t2) {
  var e2 = self.requestIdleCallback || self.setTimeout, n2 = -1;
  return t2 = v(t2), "hidden" === document.visibilityState ? t2() : (n2 = e2(t2), p(t2)), n2;
};
var W = [200, 500];
var z = function(t2, e2) {
  "PerformanceEventTiming" in self && "interactionId" in PerformanceEventTiming.prototype && (e2 = e2 || {}, b(function() {
    var n2;
    P();
    var r2, i2 = f("INP"), a3 = function(t3) {
      N(function() {
        t3.forEach(H);
        var e3 = j();
        e3 && e3.latency !== i2.value && (i2.value = e3.latency, i2.entries = e3.entries, r2());
      });
    }, o3 = d("event", a3, { durationThreshold: null !== (n2 = e2.durationThreshold) && void 0 !== n2 ? n2 : 40 });
    r2 = l(t2, i2, W, e2.reportAllChanges), o3 && (o3.observe({ type: "first-input", buffered: true }), p(function() {
      a3(o3.takeRecords()), r2(true);
    }), u(function() {
      R = F(), B.length = 0, O.clear(), i2 = f("INP"), r2 = l(t2, i2, W, e2.reportAllChanges);
    }));
  }));
};
var U = [];
var V = [];
var _ = 0;
var G = /* @__PURE__ */ new WeakMap();
var J = /* @__PURE__ */ new Map();
var K = -1;
var Q = function(t2) {
  U = U.concat(t2), X();
};
var X = function() {
  K < 0 && (K = N(Y));
};
var Y = function() {
  J.size > 10 && J.forEach(function(t3, e3) {
    O.has(e3) || J.delete(e3);
  });
  var t2 = B.map(function(t3) {
    return G.get(t3.entries[0]);
  }), e2 = V.length - 50;
  V = V.filter(function(n3, r3) {
    return r3 >= e2 || t2.includes(n3);
  });
  for (var n2 = /* @__PURE__ */ new Set(), r2 = 0; r2 < V.length; r2++) {
    var i2 = V[r2];
    nt(i2.startTime, i2.processingEnd).forEach(function(t3) {
      n2.add(t3);
    });
  }
  var a3 = U.length - 1 - 50;
  U = U.filter(function(t3, e3) {
    return t3.startTime > _ && e3 > a3 || n2.has(t3);
  }), K = -1;
};
q.push(function(t2) {
  t2.interactionId && t2.target && !J.has(t2.interactionId) && J.set(t2.interactionId, t2.target);
}, function(t2) {
  var e2, n2 = t2.startTime + t2.duration;
  _ = Math.max(_, t2.processingEnd);
  for (var r2 = V.length - 1; r2 >= 0; r2--) {
    var i2 = V[r2];
    if (Math.abs(n2 - i2.renderTime) <= 8) {
      (e2 = i2).startTime = Math.min(t2.startTime, e2.startTime), e2.processingStart = Math.min(t2.processingStart, e2.processingStart), e2.processingEnd = Math.max(t2.processingEnd, e2.processingEnd), e2.entries.push(t2);
      break;
    }
  }
  e2 || (e2 = { startTime: t2.startTime, processingStart: t2.processingStart, processingEnd: t2.processingEnd, renderTime: n2, entries: [t2] }, V.push(e2)), (t2.interactionId || "first-input" === t2.entryType) && G.set(t2, e2), X();
});
var Z;
var $;
var tt;
var et;
var nt = function(t2, e2) {
  for (var n2, r2 = [], i2 = 0; n2 = U[i2]; i2++) if (!(n2.startTime + n2.duration < t2)) {
    if (n2.startTime > e2) break;
    r2.push(n2);
  }
  return r2;
};
var rt = function(t2, n2) {
  e || (e = d("long-animation-frame", Q)), z(function(e2) {
    var n3 = function(t3) {
      var e3 = t3.entries[0], n4 = G.get(e3), i2 = e3.processingStart, o3 = n4.processingEnd, c3 = n4.entries.sort(function(t4, e4) {
        return t4.processingStart - e4.processingStart;
      }), u3 = nt(e3.startTime, o3), s3 = t3.entries.find(function(t4) {
        return t4.target;
      }), f3 = s3 && s3.target || J.get(e3.interactionId), d3 = [e3.startTime + e3.duration, o3].concat(u3.map(function(t4) {
        return t4.startTime + t4.duration;
      })), l3 = Math.max.apply(Math, d3), m3 = { interactionTarget: a(f3), interactionTargetElement: f3, interactionType: e3.name.startsWith("key") ? "keyboard" : "pointer", interactionTime: e3.startTime, nextPaintTime: l3, processedEventEntries: c3, longAnimationFrameEntries: u3, inputDelay: i2 - e3.startTime, processingDuration: o3 - i2, presentationDelay: Math.max(l3 - o3, 0), loadState: r(e3.startTime) };
      return Object.assign(t3, { attribution: m3 });
    }(e2);
    t2(n3);
  }, n2);
};
var it = [2500, 4e3];
var at = {};
var ot = function(t2, e2) {
  !function(t3, e3) {
    e3 = e3 || {}, b(function() {
      var n2, r2 = S(), i2 = f("LCP"), a3 = function(t4) {
        e3.reportAllChanges || (t4 = t4.slice(-1)), t4.forEach(function(t5) {
          t5.startTime < r2.firstHiddenTime && (i2.value = Math.max(t5.startTime - s(), 0), i2.entries = [t5], n2());
        });
      }, o3 = d("largest-contentful-paint", a3);
      if (o3) {
        n2 = l(t3, i2, it, e3.reportAllChanges);
        var c3 = v(function() {
          at[i2.id] || (a3(o3.takeRecords()), o3.disconnect(), at[i2.id] = true, n2(true));
        });
        ["keydown", "click"].forEach(function(t4) {
          addEventListener(t4, function() {
            return N(c3);
          }, { once: true, capture: true });
        }), p(c3), u(function(r3) {
          i2 = f("LCP"), n2 = l(t3, i2, it, e3.reportAllChanges), m(function() {
            i2.value = performance.now() - r3.timeStamp, at[i2.id] = true, n2(true);
          });
        });
      }
    });
  }(function(e3) {
    var r2 = function(t3) {
      var e4 = { timeToFirstByte: 0, resourceLoadDelay: 0, resourceLoadDuration: 0, elementRenderDelay: t3.value };
      if (t3.entries.length) {
        var r3 = n();
        if (r3) {
          var i2 = r3.activationStart || 0, o3 = t3.entries[t3.entries.length - 1], c3 = o3.url && performance.getEntriesByType("resource").filter(function(t4) {
            return t4.name === o3.url;
          })[0], u3 = Math.max(0, r3.responseStart - i2), s3 = Math.max(u3, c3 ? (c3.requestStart || c3.startTime) - i2 : 0), f3 = Math.max(s3, c3 ? c3.responseEnd - i2 : 0), d3 = Math.max(f3, o3.startTime - i2);
          e4 = { element: a(o3.element), timeToFirstByte: u3, resourceLoadDelay: s3 - u3, resourceLoadDuration: f3 - s3, elementRenderDelay: d3 - f3, navigationEntry: r3, lcpEntry: o3 }, o3.url && (e4.url = o3.url), c3 && (e4.lcpResourceEntry = c3);
        }
      }
      return Object.assign(t3, { attribution: e4 });
    }(e3);
    t2(r2);
  }, e2);
};
var dt = { passive: true, capture: true };
var lt = /* @__PURE__ */ new Date();
var mt = function(t2, e2) {
  Z || (Z = e2, $ = t2, tt = /* @__PURE__ */ new Date(), gt(removeEventListener), pt());
};
var pt = function() {
  if ($ >= 0 && $ < tt - lt) {
    var t2 = { entryType: "first-input", name: Z.type, target: Z.target, cancelable: Z.cancelable, startTime: Z.timeStamp, processingStart: Z.timeStamp + $ };
    et.forEach(function(e2) {
      e2(t2);
    }), et = [];
  }
};
var vt = function(t2) {
  if (t2.cancelable) {
    var e2 = (t2.timeStamp > 1e12 ? /* @__PURE__ */ new Date() : performance.now()) - t2.timeStamp;
    "pointerdown" == t2.type ? function(t3, e3) {
      var n2 = function() {
        mt(t3, e3), i2();
      }, r2 = function() {
        i2();
      }, i2 = function() {
        removeEventListener("pointerup", n2, dt), removeEventListener("pointercancel", r2, dt);
      };
      addEventListener("pointerup", n2, dt), addEventListener("pointercancel", r2, dt);
    }(e2, t2) : mt(e2, t2);
  }
};
var gt = function(t2) {
  ["mousedown", "keydown", "touchstart", "pointerdown"].forEach(function(e2) {
    return t2(e2, vt, dt);
  });
};
var ht = [100, 300];
var Tt = function(t2, e2) {
  e2 = e2 || {}, b(function() {
    var n2, r2 = S(), i2 = f("FID"), a3 = function(t3) {
      t3.startTime < r2.firstHiddenTime && (i2.value = t3.processingStart - t3.startTime, i2.entries.push(t3), n2(true));
    }, o3 = function(t3) {
      t3.forEach(a3);
    }, c3 = d("first-input", o3);
    n2 = l(t2, i2, ht, e2.reportAllChanges), c3 && (p(v(function() {
      o3(c3.takeRecords()), c3.disconnect();
    })), u(function() {
      var r3;
      i2 = f("FID"), n2 = l(t2, i2, ht, e2.reportAllChanges), et = [], $ = -1, Z = null, gt(addEventListener), r3 = a3, et.push(r3), pt();
    }));
  });
};
var yt = function(t2, e2) {
  Tt(function(e3) {
    var n2 = function(t3) {
      var e4 = t3.entries[0], n3 = { eventTarget: a(e4.target), eventType: e4.name, eventTime: e4.startTime, eventEntry: e4, loadState: r(e4.startTime) };
      return Object.assign(t3, { attribution: n3 });
    }(e3);
    t2(n2);
  }, e2);
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/WebVitalsPlugin.js
var __extends10 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __assign12 = function() {
  __assign12 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign12.apply(this, arguments);
};
var WEB_VITAL_EVENT_PLUGIN_ID = "web-vitals";
var WebVitalsPlugin = (
  /** @class */
  function(_super) {
    __extends10(WebVitalsPlugin2, _super);
    function WebVitalsPlugin2(config) {
      var _this = _super.call(this, WEB_VITAL_EVENT_PLUGIN_ID) || this;
      _this.resourceEventIds = /* @__PURE__ */ new Map();
      _this.cacheLCPCandidates = isLCPSupported();
      _this.handleEvent = function(event) {
        switch (event.type) {
          // lcp resource is either image or text
          case PERFORMANCE_RESOURCE_EVENT_TYPE:
            var details = event.details;
            if (_this.cacheLCPCandidates && details.fileType === ResourceType.IMAGE) {
              _this.resourceEventIds.set(performanceKey(event.details), event.id);
            }
            break;
          case PERFORMANCE_NAVIGATION_EVENT_TYPE:
            _this.navigationEventId = event.id;
            break;
        }
      };
      _this.config = __assign12(__assign12({}, defaultPerformancePluginConfig), config);
      return _this;
    }
    WebVitalsPlugin2.prototype.enable = function() {
    };
    WebVitalsPlugin2.prototype.disable = function() {
    };
    WebVitalsPlugin2.prototype.onload = function() {
      var _this = this;
      this.context.eventBus.subscribe(Topic.EVENT, this.handleEvent);
      ot(function(metric) {
        return _this.handleLCP(metric);
      }, {
        reportAllChanges: this.config.reportAllLCP
      });
      yt(function(metric) {
        return _this.handleFID(metric);
      });
      D(function(metric) {
        return _this.handleCLS(metric);
      }, {
        reportAllChanges: true
      });
      rt(function(metric) {
        return _this.handleINP(metric);
      }, { reportAllChanges: true });
    };
    WebVitalsPlugin2.prototype.handleLCP = function(metric) {
      var _a, _b;
      var a3 = metric.attribution;
      var attribution = {
        element: a3.element,
        url: a3.url,
        timeToFirstByte: a3.timeToFirstByte,
        resourceLoadDelay: a3.resourceLoadDelay,
        /**
         * `resourceLoadTime` was renamed to `resourceLoadDuration` in web-vitals 4.x
         * This is a cosmetic change, and does not affect the underlying value.
         * We can update the name to `resourceLoadDuration` in RUM's next major version.
         * (See https://github.com/GoogleChrome/web-vitals/pull/450)
         */
        resourceLoadTime: a3.resourceLoadDuration,
        // See https://github.com/GoogleChrome/web-vitals/pull/450
        elementRenderDelay: a3.elementRenderDelay
      };
      if (a3.lcpResourceEntry) {
        var key = performanceKey(a3.lcpResourceEntry);
        attribution.lcpResourceEntry = this.resourceEventIds.get(key);
      }
      if (this.navigationEventId) {
        attribution.navigationEntry = this.navigationEventId;
      }
      (_a = this.context) === null || _a === void 0 ? void 0 : _a.record(LCP_EVENT_TYPE, {
        version: "1.0.0",
        value: metric.value,
        attribution
      });
      (_b = this.context) === null || _b === void 0 ? void 0 : _b.eventBus.unsubscribe(Topic.EVENT, this.handleEvent);
      this.resourceEventIds.clear();
      this.navigationEventId = void 0;
    };
    WebVitalsPlugin2.prototype.handleCLS = function(metric) {
      var a3 = metric.attribution;
      var _a = this.context, record = _a.record, recordCandidate = _a.recordCandidate;
      (this.config.reportAllCLS ? record : recordCandidate)(CLS_EVENT_TYPE, {
        version: "1.0.0",
        value: metric.value,
        attribution: {
          largestShiftTarget: a3.largestShiftTarget,
          largestShiftValue: a3.largestShiftValue,
          largestShiftTime: a3.largestShiftTime,
          loadState: a3.loadState
        }
      });
    };
    WebVitalsPlugin2.prototype.handleFID = function(metric) {
      var _a;
      var a3 = metric.attribution;
      (_a = this.context) === null || _a === void 0 ? void 0 : _a.record(FID_EVENT_TYPE, {
        version: "1.0.0",
        value: metric.value,
        attribution: {
          eventTarget: a3.eventTarget,
          eventType: a3.eventType,
          eventTime: a3.eventTime,
          loadState: a3.loadState
        }
      });
    };
    WebVitalsPlugin2.prototype.handleINP = function(metric) {
      var a3 = metric.attribution;
      var _a = this.context, record = _a.record, recordCandidate = _a.recordCandidate;
      (this.config.reportAllINP ? record : recordCandidate)(INP_EVENT_TYPE, {
        version: "1.0.0",
        value: metric.value,
        attribution: {
          interactionTarget: a3.interactionTarget,
          interactionTime: a3.interactionTime,
          nextPaintTime: a3.nextPaintTime,
          interactionType: a3.interactionType,
          inputDelay: a3.inputDelay,
          processingDuration: a3.processingDuration,
          presentationDelay: a3.presentationDelay,
          loadState: a3.loadState
        }
      });
    };
    return WebVitalsPlugin2;
  }(InternalPlugin)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/errors/XhrError.js
var __extends11 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var XhrError = (
  /** @class */
  function(_super) {
    __extends11(XhrError2, _super);
    function XhrError2(message) {
      var _this = _super.call(this, message) || this;
      _this.name = "XMLHttpRequest error";
      return _this;
    }
    return XhrError2;
  }(Error)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/XhrPlugin.js
var __extends12 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __assign13 = function() {
  __assign13 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign13.apply(this, arguments);
};
var XHR_PLUGIN_ID = "xhr";
var XhrPlugin = (
  /** @class */
  function(_super) {
    __extends12(XhrPlugin2, _super);
    function XhrPlugin2(config) {
      var _this = _super.call(this, XHR_PLUGIN_ID) || this;
      _this.addXRayTraceIdHeader = function(url) {
        return isTraceIdHeaderEnabled(url, _this.config.addXRayTraceIdHeader);
      };
      _this.isTracingEnabled = function() {
        return _this.context.config.enableXRay;
      };
      _this.isSessionRecorded = function() {
        var _a;
        return ((_a = _this.context.getSession()) === null || _a === void 0 ? void 0 : _a.record) || false;
      };
      _this.handleXhrLoadEvent = function(e2) {
        var xhr = e2.target;
        var xhrDetails = _this.xhrMap.get(xhr);
        if (xhrDetails) {
          var endTime = epochTime();
          xhrDetails.trace.end_time = endTime;
          xhrDetails.trace.subsegments[0].end_time = endTime;
          xhrDetails.trace.subsegments[0].http.response = {
            status: xhr.status
          };
          if (is429(xhr.status)) {
            xhrDetails.trace.subsegments[0].throttle = true;
            xhrDetails.trace.throttle = true;
          } else if (is4xx(xhr.status)) {
            xhrDetails.trace.subsegments[0].error = true;
            xhrDetails.trace.error = true;
          } else if (is5xx(xhr.status)) {
            xhrDetails.trace.subsegments[0].fault = true;
            xhrDetails.trace.fault = true;
          }
          var clStr = xhr.getResponseHeader("Content-Length");
          var cl = clStr ? parseInt(clStr, 10) : NaN;
          if (!isNaN(cl)) {
            xhrDetails.trace.subsegments[0].http.response.content_length = cl;
          }
          _this.recordTraceEvent(xhrDetails.trace);
          _this.recordHttpEventWithResponse(xhrDetails, xhr);
        }
      };
      _this.handleXhrErrorEvent = function(e2) {
        var xhr = e2.target;
        var xhrDetails = _this.xhrMap.get(xhr);
        var errorName = "XMLHttpRequest error";
        var errorMessage = xhr.statusText ? xhr.status.toString() + ": " + xhr.statusText : xhr.status.toString();
        if (xhrDetails) {
          var endTime = epochTime();
          xhrDetails.trace.fault = true;
          xhrDetails.trace.end_time = endTime;
          xhrDetails.trace.subsegments[0].end_time = endTime;
          xhrDetails.trace.subsegments[0].fault = true;
          xhrDetails.trace.subsegments[0].cause = {
            exceptions: [
              {
                type: errorName,
                message: errorMessage
              }
            ]
          };
          _this.recordTraceEvent(xhrDetails.trace);
          _this.recordHttpEventWithError(xhrDetails, xhr, new XhrError(errorMessage));
        }
      };
      _this.handleXhrAbortEvent = function(e2) {
        var xhr = e2.target;
        var xhrDetails = _this.xhrMap.get(xhr);
        if (xhrDetails) {
          _this.handleXhrDetailsOnError(xhrDetails, xhr, "XMLHttpRequest abort");
        }
      };
      _this.handleXhrTimeoutEvent = function(e2) {
        var xhr = e2.target;
        var xhrDetails = _this.xhrMap.get(xhr);
        var errorName = "XMLHttpRequest timeout";
        _this.handleXhrDetailsOnError(xhrDetails, xhr, errorName);
      };
      _this.initializeTrace = function(xhrDetails) {
        var startTime = epochTime();
        xhrDetails.trace = createXRayTraceEvent(_this.config.logicalServiceName, startTime, _this.context.config.enableW3CTraceId);
        xhrDetails.trace.subsegments.push(createXRaySubsegment(requestInfoToHostname(xhrDetails.url), startTime, {
          request: {
            method: xhrDetails.method,
            url: xhrDetails.url,
            traced: true
          }
        }));
      };
      _this.sendWrapper = function() {
        var self2 = _this;
        return function(original) {
          return function() {
            var xhrDetails = self2.xhrMap.get(this);
            if (xhrDetails) {
              this.addEventListener("load", self2.handleXhrLoadEvent);
              this.addEventListener("error", self2.handleXhrErrorEvent);
              this.addEventListener("abort", self2.handleXhrAbortEvent);
              this.addEventListener("timeout", self2.handleXhrTimeoutEvent);
              self2.initializeTrace(xhrDetails);
              if (!self2.isSyntheticsUA && self2.isTracingEnabled() && self2.addXRayTraceIdHeader(xhrDetails.url) && self2.isSessionRecorded()) {
                if (self2.context.config.enableW3CTraceId) {
                  this.setRequestHeader(W3C_TRACEPARENT_HEADER_NAME, getW3CTraceIdHeaderValue(xhrDetails.trace.trace_id, xhrDetails.trace.subsegments[0].id));
                } else {
                  this.setRequestHeader(X_AMZN_TRACE_ID, getAmznTraceIdHeaderValue(xhrDetails.trace.trace_id, xhrDetails.trace.subsegments[0].id));
                }
              }
            }
            return original.apply(this, arguments);
          };
        };
      };
      _this.openWrapper = function() {
        var self2 = _this;
        return function(original) {
          return function(method, url, async) {
            if (isUrlAllowed(url, self2.config)) {
              self2.xhrMap.set(this, { url, method, async });
            }
            return original.apply(this, arguments);
          };
        };
      };
      _this.config = __assign13(__assign13({}, defaultConfig3), config);
      _this.xhrMap = /* @__PURE__ */ new Map();
      _this.isSyntheticsUA = navigator.userAgent.includes("CloudWatchSynthetics");
      return _this;
    }
    XhrPlugin2.prototype.onload = function() {
      this.enable();
    };
    Object.defineProperty(XhrPlugin2.prototype, "patches", {
      get: function() {
        return [
          {
            nodule: XMLHttpRequest.prototype,
            name: "send",
            wrapper: this.sendWrapper
          },
          {
            nodule: XMLHttpRequest.prototype,
            name: "open",
            wrapper: this.openWrapper
          }
        ];
      },
      enumerable: false,
      configurable: true
    });
    XhrPlugin2.prototype.handleXhrDetailsOnError = function(xhrDetails, xhr, errorName) {
      if (xhrDetails) {
        var endTime = epochTime();
        xhrDetails.trace.end_time = endTime;
        xhrDetails.trace.subsegments[0].end_time = endTime;
        xhrDetails.trace.subsegments[0].error = true;
        xhrDetails.trace.subsegments[0].cause = {
          exceptions: [
            {
              type: errorName
            }
          ]
        };
        this.recordTraceEvent(xhrDetails.trace);
        this.recordHttpEventWithError(xhrDetails, xhr, errorName);
      }
    };
    XhrPlugin2.prototype.statusOk = function(status) {
      return status >= 200 && status < 300;
    };
    XhrPlugin2.prototype.recordHttpEventWithResponse = function(xhrDetails, xhr) {
      this.xhrMap.delete(xhr);
      var httpEvent = {
        version: "1.0.0",
        request: { method: xhrDetails.method, url: xhrDetails.url },
        response: { status: xhr.status, statusText: xhr.statusText }
      };
      if (this.isTracingEnabled()) {
        httpEvent.trace_id = xhrDetails.trace.trace_id;
        httpEvent.segment_id = xhrDetails.trace.subsegments[0].id;
      }
      if (this.config.recordAllRequests || !this.statusOk(xhr.status)) {
        this.context.record(HTTP_EVENT_TYPE, httpEvent);
      }
    };
    XhrPlugin2.prototype.recordHttpEventWithError = function(xhrDetails, xhr, error) {
      this.xhrMap.delete(xhr);
      var httpEvent = {
        version: "1.0.0",
        request: { method: xhrDetails.method, url: xhrDetails.url },
        error: errorEventToJsErrorEvent({
          type: "error",
          error
        }, this.config.stackTraceLength)
      };
      if (this.isTracingEnabled()) {
        httpEvent.trace_id = xhrDetails.trace.trace_id;
        httpEvent.segment_id = xhrDetails.trace.subsegments[0].id;
      }
      this.context.record(HTTP_EVENT_TYPE, httpEvent);
    };
    XhrPlugin2.prototype.recordTraceEvent = function(trace) {
      if (!this.isSyntheticsUA && this.isTracingEnabled() && this.isSessionRecorded()) {
        this.context.record(XRAY_TRACE_EVENT_TYPE, trace);
      }
    };
    return XhrPlugin2;
  }(MonkeyPatched)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/FetchPlugin.js
var __extends13 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var __assign14 = function() {
  __assign14 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign14.apply(this, arguments);
};
var FETCH_PLUGIN_ID = "fetch";
var FetchPlugin = (
  /** @class */
  function(_super) {
    __extends13(FetchPlugin2, _super);
    function FetchPlugin2(config) {
      var _this = _super.call(this, FETCH_PLUGIN_ID) || this;
      _this.isTracingEnabled = function() {
        return _this.context.config.enableXRay;
      };
      _this.isSessionRecorded = function() {
        var _a;
        return ((_a = _this.context.getSession()) === null || _a === void 0 ? void 0 : _a.record) || false;
      };
      _this.beginTrace = function(input, init, argsArray) {
        var startTime = epochTime();
        var http = createXRayTraceEventHttp(input, init, true);
        var xRayTraceEvent = createXRayTraceEvent(_this.config.logicalServiceName, startTime, _this.context.config.enableW3CTraceId);
        var subsegment = createXRaySubsegment(requestInfoToHostname(input), startTime, http);
        xRayTraceEvent.subsegments.push(subsegment);
        if (_this.isTraceIdHeaderEnabled(input)) {
          _this.addXRayTraceIdHeader(input, init, argsArray, xRayTraceEvent);
        }
        return xRayTraceEvent;
      };
      _this.addXRayTraceIdHeader = function(input, init, argsArray, xRayTraceEvent) {
        if (input.headers) {
          return addAmznTraceIdHeaderToHeaders(input.headers, xRayTraceEvent.trace_id, xRayTraceEvent.subsegments[0].id, _this.context.config.enableW3CTraceId);
        }
        if (!init) {
          init = {};
          [].push.call(argsArray, init);
        }
        addAmznTraceIdHeaderToInit(init, xRayTraceEvent.trace_id, xRayTraceEvent.subsegments[0].id, _this.context.config.enableW3CTraceId);
      };
      _this.endTrace = function(xRayTraceEvent, response, error) {
        if (xRayTraceEvent) {
          var endTime = epochTime();
          xRayTraceEvent.subsegments[0].end_time = endTime;
          xRayTraceEvent.end_time = endTime;
          if (response) {
            xRayTraceEvent.subsegments[0].http.response = {
              status: response.status
            };
            if (is429(response.status)) {
              xRayTraceEvent.subsegments[0].throttle = true;
              xRayTraceEvent.throttle = true;
            } else if (is4xx(response.status)) {
              xRayTraceEvent.subsegments[0].error = true;
              xRayTraceEvent.error = true;
            } else if (is5xx(response.status)) {
              xRayTraceEvent.subsegments[0].fault = true;
              xRayTraceEvent.fault = true;
            }
            var clStr = response.headers.get("Content-Length");
            var cl = clStr ? parseInt(clStr, 10) : NaN;
            if (!isNaN(cl)) {
              xRayTraceEvent.subsegments[0].http.response.content_length = cl;
            }
          }
          if (error) {
            xRayTraceEvent.fault = true;
            xRayTraceEvent.subsegments[0].fault = true;
            if (error instanceof Object) {
              _this.appendErrorCauseFromObject(xRayTraceEvent.subsegments[0], error);
            } else if (isErrorPrimitive(error)) {
              _this.appendErrorCauseFromPrimitive(xRayTraceEvent.subsegments[0], error.toString());
            }
          }
          _this.context.record(XRAY_TRACE_EVENT_TYPE, xRayTraceEvent);
        }
      };
      _this.createHttpEvent = function(input, init) {
        var request = input;
        return {
          version: "1.0.0",
          request: {
            url: resourceToUrlString(input),
            method: (init === null || init === void 0 ? void 0 : init.method) ? init.method : request.method ? request.method : "GET"
          }
        };
      };
      _this.recordHttpEventWithResponse = function(httpEvent, response) {
        if (_this.config.recordAllRequests || !response.ok) {
          httpEvent.response = {
            status: response.status,
            statusText: response.statusText
          };
          _this.context.record(HTTP_EVENT_TYPE, httpEvent);
        }
      };
      _this.recordHttpEventWithError = function(httpEvent, error) {
        httpEvent.error = errorEventToJsErrorEvent({
          type: "error",
          error
        }, _this.config.stackTraceLength);
        _this.context.record(HTTP_EVENT_TYPE, httpEvent);
      };
      _this.fetch = function(original, thisArg, argsArray, input, init) {
        var httpEvent = _this.createHttpEvent(input, init);
        var trace;
        if (!isUrlAllowed(resourceToUrlString(input), _this.config)) {
          return original.apply(thisArg, argsArray);
        }
        var traceHeader = getTraceHeader(input.headers, _this.context.config.enableW3CTraceId);
        if (traceHeader.traceId && traceHeader.segmentId) {
          httpEvent.trace_id = traceHeader.traceId;
          httpEvent.segment_id = traceHeader.segmentId;
        } else if (_this.isTracingEnabled() && _this.isSessionRecorded()) {
          trace = _this.beginTrace(input, init, argsArray);
          httpEvent.trace_id = trace.trace_id;
          httpEvent.segment_id = trace.subsegments[0].id;
        }
        return original.apply(thisArg, argsArray).then(function(response) {
          _this.endTrace(trace, response, void 0);
          _this.recordHttpEventWithResponse(httpEvent, response);
          return response;
        }).catch(function(error) {
          _this.endTrace(trace, void 0, error);
          _this.recordHttpEventWithError(httpEvent, error);
          throw error;
        });
      };
      _this.fetchWrapper = function() {
        var self2 = _this;
        return function(original) {
          return function(input, init) {
            return self2.fetch(original, this, arguments, input, init);
          };
        };
      };
      _this.config = __assign14(__assign14({}, defaultConfig3), config);
      return _this;
    }
    Object.defineProperty(FetchPlugin2.prototype, "patches", {
      get: function() {
        return [
          {
            nodule: window,
            name: "fetch",
            wrapper: this.fetchWrapper
          }
        ];
      },
      enumerable: false,
      configurable: true
    });
    FetchPlugin2.prototype.onload = function() {
      this.enable();
    };
    FetchPlugin2.prototype.isTraceIdHeaderEnabled = function(input) {
      var url = resourceToUrlString(input);
      return isTraceIdHeaderEnabled(url, this.config.addXRayTraceIdHeader);
    };
    FetchPlugin2.prototype.appendErrorCauseFromPrimitive = function(subsegment, error) {
      subsegment.cause = {
        exceptions: [
          {
            type: error
          }
        ]
      };
    };
    FetchPlugin2.prototype.appendErrorCauseFromObject = function(subsegment, error) {
      subsegment.cause = {
        exceptions: [
          {
            type: error.name,
            message: error.message
          }
        ]
      };
    };
    return FetchPlugin2;
  }(MonkeyPatched)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/PageViewPlugin.js
var __extends14 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var PAGE_EVENT_PLUGIN_ID = "page-view";
var PageViewPlugin = (
  /** @class */
  function(_super) {
    __extends14(PageViewPlugin2, _super);
    function PageViewPlugin2() {
      var _this = _super.call(this, PAGE_EVENT_PLUGIN_ID) || this;
      _this.pushState = function() {
        var self2 = _this;
        return function(original) {
          return function(data, title, url) {
            var retVal = original.apply(this, arguments);
            self2.recordPageView();
            return retVal;
          };
        };
      };
      _this.replaceState = function() {
        var self2 = _this;
        return function(original) {
          return function(data, title, url) {
            var retVal = original.apply(this, arguments);
            self2.recordPageView();
            return retVal;
          };
        };
      };
      _this.popstateListener = function(event) {
        _this.recordPageView();
      };
      _this.recordPageView = function() {
        _this.context.recordPageView(_this.createIdForCurrentPage());
      };
      _this.enable();
      return _this;
    }
    PageViewPlugin2.prototype.onload = function() {
      this.addListener();
      this.recordPageView();
    };
    Object.defineProperty(PageViewPlugin2.prototype, "patches", {
      get: function() {
        return [
          {
            nodule: History.prototype,
            name: "pushState",
            wrapper: this.pushState
          },
          {
            nodule: History.prototype,
            name: "replaceState",
            wrapper: this.replaceState
          }
        ];
      },
      enumerable: false,
      configurable: true
    });
    PageViewPlugin2.prototype.addListener = function() {
      window.addEventListener("popstate", this.popstateListener);
    };
    PageViewPlugin2.prototype.createIdForCurrentPage = function() {
      var path = window.location.pathname;
      var hash = window.location.hash;
      switch (this.context.config.pageIdFormat) {
        case PageIdFormatEnum.PathAndHash:
          if (path && hash) {
            return path + hash;
          } else if (path) {
            return path;
          } else if (hash) {
            return hash;
          }
          return "";
        case PageIdFormatEnum.Hash:
          return hash ? hash : "";
        case PageIdFormatEnum.Path:
        default:
          return path ? path : "";
      }
    };
    return PageViewPlugin2;
  }(MonkeyPatched)
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/orchestration/Orchestration.js
var __assign15 = function() {
  __assign15 = Object.assign || function(t2) {
    for (var s3, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s3 = arguments[i2];
      for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3))
        t2[p3] = s3[p3];
    }
    return t2;
  };
  return __assign15.apply(this, arguments);
};
var __rest2 = function(s3, e2) {
  var t2 = {};
  for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3) && e2.indexOf(p3) < 0)
    t2[p3] = s3[p3];
  if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p3 = Object.getOwnPropertySymbols(s3); i2 < p3.length; i2++) {
      if (e2.indexOf(p3[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p3[i2]))
        t2[p3[i2]] = s3[p3[i2]];
    }
  return t2;
};
var __spreadArray = function(to, from, pack) {
  if (pack || arguments.length === 2) for (var i2 = 0, l3 = from.length, ar; i2 < l3; i2++) {
    if (ar || !(i2 in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i2);
      ar[i2] = from[i2];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var DEFAULT_REGION = "us-west-2";
var DEFAULT_ENDPOINT = "https://dataplane.rum.".concat(DEFAULT_REGION, ".amazonaws.com");
var TelemetryEnum;
(function(TelemetryEnum2) {
  TelemetryEnum2["Errors"] = "errors";
  TelemetryEnum2["Performance"] = "performance";
  TelemetryEnum2["Interaction"] = "interaction";
  TelemetryEnum2["Http"] = "http";
})(TelemetryEnum || (TelemetryEnum = {}));
var PageIdFormatEnum;
(function(PageIdFormatEnum2) {
  PageIdFormatEnum2["Path"] = "PATH";
  PageIdFormatEnum2["Hash"] = "HASH";
  PageIdFormatEnum2["PathAndHash"] = "PATH_AND_HASH";
})(PageIdFormatEnum || (PageIdFormatEnum = {}));
var defaultCookieAttributes = function() {
  return {
    unique: false,
    domain: window.location.hostname,
    path: "/",
    sameSite: "Strict",
    secure: true
  };
};
var defaultConfig4 = function(cookieAttributes) {
  return __assign15({ allowCookies: false, batchLimit: 100, client: INSTALL_MODULE, cookieAttributes, disableAutoPageView: false, dispatchInterval: 5 * 1e3, enableRumClient: true, enableXRay: false, endpoint: DEFAULT_ENDPOINT, endpointUrl: new URL(DEFAULT_ENDPOINT), eventCacheSize: 200, eventPluginsToLoad: [], pageIdFormat: PageIdFormatEnum.Path, pagesToExclude: [], pagesToInclude: [/.*/], signing: true, recordResourceUrl: true, retries: 2, routeChangeComplete: 100, routeChangeTimeout: 1e4, sessionAttributes: {}, sessionEventLimit: 200, sessionLengthSeconds: 60 * 30, sessionSampleRate: 1, telemetries: [], useBeacon: true, userIdRetentionDays: 30, enableW3CTraceId: false }, internalConfigOverrides);
};
var internalConfigOverrides = {
  candidatesCacheSize: 10
};
var Orchestration = (
  /** @class */
  function() {
    function Orchestration2(applicationId, applicationVersion, region, _a) {
      if (_a === void 0) {
        _a = {};
      }
      var configCookieAttributes = _a.cookieAttributes, partialConfig = __rest2(_a, ["cookieAttributes"]);
      this.eventBus = new EventBus_default();
      if (typeof region === "undefined") {
        region = "us-west-2";
      }
      var cookieAttributes = __assign15(__assign15({}, defaultCookieAttributes()), configCookieAttributes);
      this.config = __assign15(__assign15(__assign15({ fetchFunction: fetch }, defaultConfig4(cookieAttributes)), partialConfig), internalConfigOverrides);
      this.config.endpoint = this.getDataPlaneEndpoint(region, partialConfig);
      this.config.endpointUrl = new URL(this.config.endpoint);
      this.eventCache = this.initEventCache(applicationId, applicationVersion);
      this.dispatchManager = this.initDispatch(region, applicationId);
      this.pluginManager = this.initPluginManager(applicationId, applicationVersion);
      if (this.config.enableRumClient) {
        this.enable();
      } else {
        this.disable();
      }
    }
    Orchestration2.prototype.setAwsCredentials = function(credentials) {
      this.dispatchManager.setAwsCredentials(credentials);
    };
    Orchestration2.prototype.addSessionAttributes = function(sessionAttributes) {
      this.eventCache.addSessionAttributes(sessionAttributes);
    };
    Orchestration2.prototype.addPlugin = function(plugin) {
      this.pluginManager.addPlugin(plugin);
    };
    Orchestration2.prototype.dispatch = function() {
      this.dispatchManager.dispatchFetch();
    };
    Orchestration2.prototype.dispatchBeacon = function() {
      this.dispatchManager.dispatchBeacon();
    };
    Orchestration2.prototype.enable = function() {
      this.eventCache.enable();
      this.pluginManager.enable();
      this.dispatchManager.enable();
    };
    Orchestration2.prototype.disable = function() {
      this.dispatchManager.disable();
      this.pluginManager.disable();
      this.eventCache.disable();
    };
    Orchestration2.prototype.allowCookies = function(allow) {
      this.config.allowCookies = allow;
    };
    Orchestration2.prototype.recordPageView = function(payload) {
      this.eventCache.recordPageView(payload);
    };
    Orchestration2.prototype.recordError = function(error) {
      this.pluginManager.record(JS_ERROR_EVENT_PLUGIN_ID, error);
    };
    Orchestration2.prototype.registerDomEvents = function(events) {
      this.pluginManager.updatePlugin(DOM_EVENT_PLUGIN_ID, events);
    };
    Orchestration2.prototype.recordEvent = function(eventType, eventData) {
      this.eventCache.recordEvent(eventType, eventData);
    };
    Orchestration2.prototype.initEventCache = function(applicationId, applicationVersion) {
      return new EventCache({
        id: applicationId,
        version: applicationVersion
      }, this.config, this.eventBus);
    };
    Orchestration2.prototype.initDispatch = function(region, applicationId) {
      var dispatch = new Dispatch(region, this.config.endpointUrl, this.eventCache, this.config);
      if (!this.eventCache.isSessionSampled()) {
        return dispatch;
      }
      if (this.config.identityPoolId && this.config.guestRoleArn) {
        dispatch.setAwsCredentials(new BasicAuthentication(this.config, applicationId).ChainAnonymousCredentialsProvider);
      } else if (this.config.identityPoolId) {
        dispatch.setAwsCredentials(new EnhancedAuthentication(this.config, applicationId).ChainAnonymousCredentialsProvider);
      }
      return dispatch;
    };
    Orchestration2.prototype.initPluginManager = function(applicationId, applicationVersion) {
      var BUILTIN_PLUGINS = this.constructBuiltinPlugins();
      var PLUGINS = __spreadArray(__spreadArray([], BUILTIN_PLUGINS, true), this.config.eventPluginsToLoad, true);
      var pluginContext = {
        applicationId,
        applicationVersion,
        config: this.config,
        record: this.eventCache.recordEvent,
        recordCandidate: this.eventCache.recordCandidate,
        recordPageView: this.eventCache.recordPageView,
        getSession: this.eventCache.getSession,
        eventBus: this.eventBus
      };
      var pluginManager = new PluginManager(pluginContext);
      if (!this.config.disableAutoPageView) {
        pluginManager.addPlugin(new PageViewPlugin());
      }
      PLUGINS.forEach(function(p3) {
        pluginManager.addPlugin(p3);
      });
      return pluginManager;
    };
    Orchestration2.prototype.constructBuiltinPlugins = function() {
      var plugins = [];
      var functor = this.telemetryFunctor();
      this.config.telemetries.forEach(function(type) {
        if (typeof type === "string" && functor[type.toLowerCase()]) {
          plugins = __spreadArray(__spreadArray([], plugins, true), functor[type.toLowerCase()]({}), true);
        } else if (Array.isArray(type) && functor[type[0].toLowerCase()]) {
          plugins = __spreadArray(__spreadArray([], plugins, true), functor[type[0].toLowerCase()](type[1]), true);
        }
      });
      return plugins;
    };
    Orchestration2.prototype.getDataPlaneEndpoint = function(region, partialConfig) {
      return partialConfig.endpoint ? partialConfig.endpoint : DEFAULT_ENDPOINT.replace(DEFAULT_REGION, region);
    };
    Orchestration2.prototype.telemetryFunctor = function() {
      var _a;
      return _a = {}, _a[TelemetryEnum.Errors] = function(config) {
        return [new JsErrorPlugin(config)];
      }, _a[TelemetryEnum.Performance] = function(config) {
        return [
          new NavigationPlugin(config),
          new ResourcePlugin(config),
          new WebVitalsPlugin(config)
        ];
      }, _a[TelemetryEnum.Interaction] = function(config) {
        return [new DomEventPlugin(config)];
      }, _a[TelemetryEnum.Http] = function(config) {
        return [new XhrPlugin(config), new FetchPlugin(config)];
      }, _a;
    };
    return Orchestration2;
  }()
);

// node_modules/.pnpm/web-vitals@4.2.4/node_modules/web-vitals/dist/web-vitals.js
var o2 = -1;
var a2 = function(e2) {
  addEventListener("pageshow", function(n2) {
    n2.persisted && (o2 = n2.timeStamp, e2(n2));
  }, true);
};
var c2 = function() {
  var e2 = self.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0];
  if (e2 && e2.responseStart > 0 && e2.responseStart < performance.now()) return e2;
};
var u2 = function() {
  var e2 = c2();
  return e2 && e2.activationStart || 0;
};
var f2 = function(e2, n2) {
  var t2 = c2(), r2 = "navigate";
  o2 >= 0 ? r2 = "back-forward-cache" : t2 && (document.prerendering || u2() > 0 ? r2 = "prerender" : document.wasDiscarded ? r2 = "restore" : t2.type && (r2 = t2.type.replace(/_/g, "-")));
  return { name: e2, value: void 0 === n2 ? -1 : n2, rating: "good", delta: 0, entries: [], id: "v4-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12), navigationType: r2 };
};
var s2 = function(e2, n2, t2) {
  try {
    if (PerformanceObserver.supportedEntryTypes.includes(e2)) {
      var r2 = new PerformanceObserver(function(e3) {
        Promise.resolve().then(function() {
          n2(e3.getEntries());
        });
      });
      return r2.observe(Object.assign({ type: e2, buffered: true }, t2 || {})), r2;
    }
  } catch (e3) {
  }
};
var d2 = function(e2, n2, t2, r2) {
  var i2, o3;
  return function(a3) {
    n2.value >= 0 && (a3 || r2) && ((o3 = n2.value - (i2 || 0)) || void 0 === i2) && (i2 = n2.value, n2.delta = o3, n2.rating = function(e3, n3) {
      return e3 > n3[1] ? "poor" : e3 > n3[0] ? "needs-improvement" : "good";
    }(n2.value, t2), e2(n2));
  };
};
var l2 = function(e2) {
  requestAnimationFrame(function() {
    return requestAnimationFrame(function() {
      return e2();
    });
  });
};
var p2 = function(e2) {
  document.addEventListener("visibilitychange", function() {
    "hidden" === document.visibilityState && e2();
  });
};
var v2 = function(e2) {
  var n2 = false;
  return function() {
    n2 || (e2(), n2 = true);
  };
};
var m2 = -1;
var h2 = function() {
  return "hidden" !== document.visibilityState || document.prerendering ? 1 / 0 : 0;
};
var g2 = function(e2) {
  "hidden" === document.visibilityState && m2 > -1 && (m2 = "visibilitychange" === e2.type ? e2.timeStamp : 0, T2());
};
var y2 = function() {
  addEventListener("visibilitychange", g2, true), addEventListener("prerenderingchange", g2, true);
};
var T2 = function() {
  removeEventListener("visibilitychange", g2, true), removeEventListener("prerenderingchange", g2, true);
};
var E2 = function() {
  return m2 < 0 && (m2 = h2(), y2(), a2(function() {
    setTimeout(function() {
      m2 = h2(), y2();
    }, 0);
  })), { get firstHiddenTime() {
    return m2;
  } };
};
var C2 = function(e2) {
  document.prerendering ? addEventListener("prerenderingchange", function() {
    return e2();
  }, true) : e2();
};
var b2 = [1800, 3e3];
var S2 = function(e2, n2) {
  n2 = n2 || {}, C2(function() {
    var t2, r2 = E2(), i2 = f2("FCP"), o3 = s2("paint", function(e3) {
      e3.forEach(function(e4) {
        "first-contentful-paint" === e4.name && (o3.disconnect(), e4.startTime < r2.firstHiddenTime && (i2.value = Math.max(e4.startTime - u2(), 0), i2.entries.push(e4), t2(true)));
      });
    });
    o3 && (t2 = d2(e2, i2, b2, n2.reportAllChanges), a2(function(r3) {
      i2 = f2("FCP"), t2 = d2(e2, i2, b2, n2.reportAllChanges), l2(function() {
        i2.value = performance.now() - r3.timeStamp, t2(true);
      });
    }));
  });
};
var I2 = 1 / 0;
var O2 = function(e2) {
  var n2 = self.requestIdleCallback || self.setTimeout, t2 = -1;
  return e2 = v2(e2), "hidden" === document.visibilityState ? e2() : (t2 = n2(e2), p2(e2)), t2;
};
var _2 = [2500, 4e3];
var z2 = {};
var G2 = function(e2, n2) {
  n2 = n2 || {}, C2(function() {
    var t2, r2 = E2(), i2 = f2("LCP"), o3 = function(e3) {
      n2.reportAllChanges || (e3 = e3.slice(-1)), e3.forEach(function(e4) {
        e4.startTime < r2.firstHiddenTime && (i2.value = Math.max(e4.startTime - u2(), 0), i2.entries = [e4], t2());
      });
    }, c3 = s2("largest-contentful-paint", o3);
    if (c3) {
      t2 = d2(e2, i2, _2, n2.reportAllChanges);
      var m3 = v2(function() {
        z2[i2.id] || (o3(c3.takeRecords()), c3.disconnect(), z2[i2.id] = true, t2(true));
      });
      ["keydown", "click"].forEach(function(e3) {
        addEventListener(e3, function() {
          return O2(m3);
        }, { once: true, capture: true });
      }), p2(m3), a2(function(r3) {
        i2 = f2("LCP"), t2 = d2(e2, i2, _2, n2.reportAllChanges), l2(function() {
          i2.value = performance.now() - r3.timeStamp, z2[i2.id] = true, t2(true);
        });
      });
    }
  });
};

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/time-to-interactive/VisuallyReadySearch.js
var NAVIGATION2 = "navigation";
var FCP = "FCP";
var LCP = "LCP";
var VisuallyReadySearch = (
  /** @class */
  function() {
    function VisuallyReadySearch2(quietWindow) {
      var _this = this;
      this.visuallyReadyTimestamp = 0;
      this.timeIntervals = 0;
      this.fcpSupported = false;
      this.lcpSupported = false;
      this.cleanupVisuallyReadySearch = false;
      this.CHECK_PERIOD = 1e3;
      this.VISUALLY_READY_RESOLVE_TIMEOUT = 1e4;
      this.visualReadyIntervalHandler = function() {
        var isCheckTimedOut = _this.timeIntervals * _this.CHECK_PERIOD > _this.VISUALLY_READY_RESOLVE_TIMEOUT;
        if (_this.isOkToResolveVisuallyReady(isCheckTimedOut)) {
          _this.visuallyReadyTimestamp = Math.max(_this.fcpTime ? _this.fcpTime : 0, _this.lcpTime ? _this.lcpTime : 0, _this.domContentLoadedEventEnd ? _this.domContentLoadedEventEnd : 0);
          clearInterval(_this.visualReadyInterval);
          _this.cleanupVisuallyReadySearch = true;
          _this.quietWindowSearch.startTtiSearch(_this.visuallyReadyTimestamp);
        } else {
          if (isCheckTimedOut) {
            _this.cleanupVisuallyReadySearch = true;
            _this.quietWindowSearch.cleanupQuietWindowSearch();
          }
        }
        _this.timeIntervals += 1;
      };
      this.navEventListener = function() {
        var eventObserver = new PerformanceObserver(function(list) {
          if (_this.cleanupVisuallyReadySearch) {
            eventObserver.disconnect();
          }
          list.getEntries().filter(function(e2) {
            return e2.entryType === NAVIGATION2;
          }).map(function(e2) {
            return e2;
          }).forEach(function(event) {
            if (event.domContentLoadedEventEnd) {
              _this.domContentLoadedEventEnd = event.domContentLoadedEventEnd;
            }
          });
        });
        eventObserver.observe({
          type: NAVIGATION2,
          buffered: true
        });
      };
      this.initListeners();
      this.quietWindowSearch = quietWindow;
      this.visualReadyInterval = this.startVisualReadyInterval();
    }
    VisuallyReadySearch2.prototype.startVisualReadyInterval = function() {
      return setInterval(this.visualReadyIntervalHandler, this.CHECK_PERIOD);
    };
    VisuallyReadySearch2.prototype.isOkToResolveVisuallyReady = function(isCheckTimedOut) {
      var isFullyVisuallyReady = this.lcpTime !== void 0 && this.fcpTime !== void 0 && this.domContentLoadedEventEnd !== void 0;
      var isPartiallyVisually = this.lcpSupported && this.lcpTime !== void 0 || this.fcpSupported && this.fcpTime !== void 0 || this.domContentLoadedEventEnd !== void 0;
      if (isFullyVisuallyReady) {
        return true;
      } else if (isCheckTimedOut && isPartiallyVisually) {
        return true;
      } else {
        return false;
      }
    };
    VisuallyReadySearch2.prototype.handleWebVitals = function(metric) {
      var _this = this;
      if (metric.name === FCP) {
        metric.entries.forEach(function(entry) {
          return _this.fcpTime = entry.startTime + entry.duration;
        });
      }
      if (metric.name === LCP) {
        metric.entries.forEach(function(entry) {
          return _this.lcpTime = entry.startTime + entry.duration;
        });
      }
    };
    VisuallyReadySearch2.prototype.initListeners = function() {
      var _this = this;
      this.navEventListener();
      this.lcpSupported = isLCPSupported();
      this.fcpSupported = isFCPSupported();
      if (this.fcpSupported) {
        this.fcpTime = void 0;
        S2(function(metric) {
          return _this.handleWebVitals(metric);
        });
      }
      if (this.lcpSupported) {
        this.lcpTime = void 0;
        G2(function(metric) {
          return _this.handleWebVitals(metric);
        });
      }
    };
    return VisuallyReadySearch2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/time-to-interactive/QuietWindowSearch.js
var LONG_TASK = "longtask";
var FPS = "fps";
var NAVIGATION3 = "navigation";
var QuietWindowSearch = (
  /** @class */
  function() {
    function QuietWindowSearch2(fpsEnabled, onReport) {
      var _this = this;
      this.ttiTracker = {};
      this.ttiResolved = false;
      this.startBucket = 0;
      this.currBucket = 0;
      this.acceptedIntervals = 0;
      this.totalIntervals = 0;
      this.visuallyReadyTimestamp = 0;
      this.fpsEnabled = false;
      this.COLLECTION_PERIOD = 100;
      this.REQUIRED_ACCEPTED_INTERVALS = 5;
      this.CHECK_PERIOD = 1e3;
      this.TTI_RESOLVE_TIMEOUT = 1e4;
      this.FPS_THRESHOLD = 20 / (1e3 / this.COLLECTION_PERIOD);
      this.LONG_TASK_THRESHOLD = 0;
      this.ttiIntervalHandler = function() {
        var isTTITimedOut = _this.totalIntervals * _this.CHECK_PERIOD > _this.TTI_RESOLVE_TIMEOUT;
        if (isTTITimedOut) {
          _this.ttiResolved = true;
          _this.ttiTracker = {};
          clearInterval(_this.ttiInterval);
        }
        var endBucket = _this.computeTimeWindow();
        for (var bucket = _this.currBucket; bucket <= endBucket; bucket++) {
          _this.currBucket = bucket;
          var allTTIConditionsFulfiled = true;
          if (_this.isTTIConditionNotFulfilied(LONG_TASK, bucket)) {
            allTTIConditionsFulfiled = false;
          }
          if (_this.fpsEnabled && _this.isTTIConditionNotFulfilied(FPS, bucket)) {
            allTTIConditionsFulfiled = false;
          }
          if (!allTTIConditionsFulfiled) {
            _this.acceptedIntervals = 0;
            continue;
          }
          _this.acceptedIntervals += 1;
          if (_this.isTTIResolved(_this.acceptedIntervals)) {
            _this.ttiResolved = true;
            clearInterval(_this.ttiInterval);
            _this.onReport({
              name: "TTI",
              value: _this.computeTTIValue()
            });
            break;
          } else {
            continue;
          }
        }
        _this.totalIntervals += 1;
      };
      this.longTaskEventListener = function() {
        var eventObserver = new PerformanceObserver(function(list) {
          if (_this.ttiResolved) {
            eventObserver.disconnect();
          }
          list.getEntries().filter(function(e2) {
            return e2.entryType === LONG_TASK;
          }).forEach(function(event) {
            if (event.startTime && event.duration) {
              var endTime = event.startTime + event.duration;
              _this.addToTracker(LONG_TASK, _this.computeTimeWindow(event.startTime), 1);
              _this.addToTracker(LONG_TASK, _this.computeTimeWindow(endTime), 1);
            }
          });
        });
        eventObserver.observe({
          type: LONG_TASK
        });
      };
      this.framesPerSecondListener = function() {
        var trackFrames = function() {
          _this.addToTracker(FPS, _this.computeTimeWindow(), 1);
          window.requestAnimationFrame(trackFrames);
        };
        if (!_this.ttiResolved) {
          window.requestAnimationFrame(trackFrames);
        }
      };
      this.fpsEnabled = fpsEnabled;
      this.initListeners();
      this.onReport = onReport;
    }
    QuietWindowSearch2.prototype.startTtiSearch = function(visuallyReadyTimestamp) {
      this.startBucket = Math.max(this.computeTimeWindow(visuallyReadyTimestamp), 0);
      this.currBucket = this.startBucket;
      this.acceptedIntervals = 0;
      this.totalIntervals = 0;
      this.visuallyReadyTimestamp = visuallyReadyTimestamp;
      this.ttiInterval = setInterval(this.ttiIntervalHandler, this.CHECK_PERIOD);
    };
    QuietWindowSearch2.prototype.isTTIResolved = function(acceptedIntervals) {
      if (acceptedIntervals >= this.REQUIRED_ACCEPTED_INTERVALS) {
        return true;
      } else {
        return false;
      }
    };
    QuietWindowSearch2.prototype.computeTTIValue = function() {
      var timeToQuietPeriodFromVisuallyReady = (this.currBucket - this.REQUIRED_ACCEPTED_INTERVALS - this.startBucket + 1) * this.COLLECTION_PERIOD;
      this.ttiTracker = {};
      return this.getPrerenderedOffset(this.visuallyReadyTimestamp + timeToQuietPeriodFromVisuallyReady);
    };
    QuietWindowSearch2.prototype.getPrerenderedOffset = function(tti) {
      var activationStart = this.getActivationStart();
      if (activationStart === void 0) {
        return tti;
      } else {
        var newTti = Math.floor(tti) - activationStart;
        return newTti >= 0 ? Math.max(1, newTti) : tti;
      }
    };
    QuietWindowSearch2.prototype.getActivationStart = function() {
      if (this.prerenderedOffset !== void 0) {
        return this.prerenderedOffset;
      }
      if (typeof document.prerendering !== "boolean") {
        return this.prerenderedOffset;
      }
      if (window.performance) {
        var navEntry = window.performance.getEntriesByType(NAVIGATION3)[0];
        if (navEntry && navEntry.activationStart) {
          this.prerenderedOffset = Math.floor(navEntry.activationStart);
        }
      }
      return this.prerenderedOffset;
    };
    QuietWindowSearch2.prototype.isTTIConditionNotFulfilied = function(ttiCondition, currrentBucket) {
      if (ttiCondition === LONG_TASK) {
        return this.ttiTracker[LONG_TASK] !== void 0 && this.ttiTracker[LONG_TASK][currrentBucket] !== void 0 && this.ttiTracker[LONG_TASK][currrentBucket] > this.LONG_TASK_THRESHOLD;
      }
      if (ttiCondition === FPS) {
        return this.fpsEnabled && this.ttiTracker[FPS] !== void 0 && this.ttiTracker[FPS][currrentBucket] !== void 0 && this.ttiTracker[FPS][currrentBucket] < this.FPS_THRESHOLD;
      }
    };
    QuietWindowSearch2.prototype.initListeners = function() {
      this.longTaskEventListener();
      if (this.fpsEnabled && window.requestAnimationFrame !== void 0) {
        this.framesPerSecondListener();
      }
    };
    QuietWindowSearch2.prototype.computeTimeWindow = function(currTime) {
      if (currTime === void 0) {
        return Math.floor(performance.now() / this.COLLECTION_PERIOD);
      } else {
        return Math.floor(currTime / this.COLLECTION_PERIOD);
      }
    };
    QuietWindowSearch2.prototype.addToTracker = function(type, bucket, value) {
      if (!this.ttiTracker[type]) {
        this.ttiTracker[type] = [];
      }
      if (!this.ttiTracker[type][bucket]) {
        this.ttiTracker[type][bucket] = 0;
      }
      this.ttiTracker[type][bucket] += value;
    };
    QuietWindowSearch2.prototype.cleanupQuietWindowSearch = function() {
      this.ttiResolved = true;
      this.ttiTracker = {};
    };
    return QuietWindowSearch2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/time-to-interactive/TimeToInteractive.js
function onTTI(onReport, opts) {
  if (isLongTaskSupported()) {
    new TimeToInteractive(onReport, opts);
  }
}
var TimeToInteractive = (
  /** @class */
  /* @__PURE__ */ function() {
    function TimeToInteractive2(onReport, opts) {
      this.onReport = onReport;
      this.quietWindowSearch = new QuietWindowSearch(opts.fpsEnabled, this.onReport);
      this.visuallyReadySearch = new VisuallyReadySearch(this.quietWindowSearch);
    }
    return TimeToInteractive2;
  }()
);

// node_modules/.pnpm/aws-rum-web@1.25.0/node_modules/aws-rum-web/dist/es/plugins/event-plugins/TTIPlugin.js
var __extends15 = /* @__PURE__ */ function() {
  var extendStatics2 = function(d3, b3) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
      d4.__proto__ = b4;
    } || function(d4, b4) {
      for (var p3 in b4) if (Object.prototype.hasOwnProperty.call(b4, p3)) d4[p3] = b4[p3];
    };
    return extendStatics2(d3, b3);
  };
  return function(d3, b3) {
    if (typeof b3 !== "function" && b3 !== null)
      throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
    extendStatics2(d3, b3);
    function __() {
      this.constructor = d3;
    }
    d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
  };
}();
var TTI_EVENT_PLUGIN_ID = "time-to-interactive";
var TTIPlugin = (
  /** @class */
  function(_super) {
    __extends15(TTIPlugin2, _super);
    function TTIPlugin2(fpsMeasurementEnabled) {
      if (fpsMeasurementEnabled === void 0) {
        fpsMeasurementEnabled = false;
      }
      var _this = _super.call(this, TTI_EVENT_PLUGIN_ID) || this;
      _this.recordTTIEvent = function() {
        onTTI(_this.handleTTI, { fpsEnabled: _this.fpsEnabled });
      };
      _this.checkPrerenderingActivity = function() {
        if (typeof document !== "undefined" && typeof document.prerendering === "boolean" && document.prerendering) {
          _this.normalPageLoad = false;
          document.addEventListener("prerenderingchange", function() {
            _this.prerenderedPageLoad = true;
            _this.recordTTIEvent();
          });
        }
        if (typeof performance !== "undefined" && typeof performance.getEntriesByType === "function") {
          try {
            var entries = performance.getEntriesByType("navigation");
            if (entries && entries.length > 0) {
              var navigation = entries[0];
              if (navigation && navigation.activationStart && navigation.activationStart > 0) {
                _this.prerenderedPageLoad = true;
                _this.normalPageLoad = false;
              }
            }
          } catch (e2) {
            console.debug("Error accessing Performance API:", e2);
          }
        }
      };
      _this.handleTTI = function(metric) {
        var ttiEvent = {
          version: "1.0.0",
          value: Math.round(metric.value)
        };
        _this.context.record(TIME_TO_INTERACTIVE_EVENT_TYPE, ttiEvent);
      };
      _this.fpsEnabled = fpsMeasurementEnabled;
      _this.prerenderedPageLoad = false;
      _this.normalPageLoad = true;
      _this.checkPrerenderingActivity();
      return _this;
    }
    TTIPlugin2.prototype.enable = function() {
    };
    TTIPlugin2.prototype.disable = function() {
    };
    TTIPlugin2.prototype.configure = function() {
    };
    TTIPlugin2.prototype.onload = function() {
      if (this.normalPageLoad || this.prerenderedPageLoad) {
        this.recordTTIEvent();
      }
    };
    return TTIPlugin2;
  }(InternalPlugin)
);
export {
  Orchestration as AwsRum,
  DOM_EVENT_PLUGIN_ID,
  DomEventPlugin,
  FETCH_PLUGIN_ID,
  FetchPlugin,
  JS_ERROR_EVENT_PLUGIN_ID,
  JsErrorPlugin,
  NAVIGATION_EVENT_PLUGIN_ID,
  NavigationPlugin,
  PAGE_EVENT_PLUGIN_ID,
  PageIdFormatEnum,
  PageViewPlugin,
  RESOURCE_EVENT_PLUGIN_ID,
  ResourcePlugin,
  TTIPlugin,
  TelemetryEnum,
  WEB_VITAL_EVENT_PLUGIN_ID,
  WebVitalsPlugin,
  XHR_PLUGIN_ID,
  XhrPlugin
};
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
//# sourceMappingURL=aws-rum-web.js.map
